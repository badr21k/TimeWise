{"file_contents":{"chat-server.js":{"content":"import http from \"http\";\nimport { Server } from \"socket.io\";\nimport sqlite3 from \"sqlite3\";\nimport mysql from \"mysql2/promise\";\nimport crypto from \"crypto\";\n\nconst CHAT_PORT = Number(process.env.CHAT_PORT || 3001);\n\n// --- Database connections ---------------------------------------------------\n// SQLite for chat data\nsqlite3.verbose();\nconst db = new sqlite3.Database(\"./database.db\");\n\n// MySQL for authentication (using same config as PHP)\nconst mysqlConfig = {\n  host: process.env.DB_HOST || 'e7eh7.h.filess.io',\n  user: process.env.DB_USER || 'TimeWise_bushnearby',\n  password: process.env.DB_PASS,\n  database: process.env.DB_DATABASE || 'TimeWise_bushnearby',\n  port: Number(process.env.DB_PORT || 3305),\n  connectTimeout: 20000,\n  acquireTimeout: 20000,\n};\n\n// Promise helpers for SQLite\nconst run = (sql, params = []) =>\n  new Promise((resolve, reject) => {\n    db.run(sql, params, function (err) {\n      if (err) reject(err);\n      else resolve(this);\n    });\n  });\n\nconst get = (sql, params = []) =>\n  new Promise((resolve, reject) => {\n    db.get(sql, params, (err, row) => (err ? reject(err) : resolve(row)));\n  });\n\nconst all = (sql, params = []) =>\n  new Promise((resolve, reject) => {\n    db.all(sql, params, (err, rows) => (err ? reject(err) : resolve(rows)));\n  });\n\n// Create SQLite tables if they don't exist\nawait run(`\nCREATE TABLE IF NOT EXISTS chat_rooms (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  name TEXT,\n  is_group INTEGER DEFAULT 1,\n  created_by INTEGER,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n)`);\n\nawait run(`\nCREATE TABLE IF NOT EXISTS chat_members (\n  room_id INTEGER,\n  user_id INTEGER,\n  PRIMARY KEY (room_id, user_id)\n)`);\n\nawait run(`\nCREATE TABLE IF NOT EXISTS chat_messages (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  room_id INTEGER,\n  user_id INTEGER,\n  username TEXT,\n  body TEXT,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n)`);\n\n// --- Authentication Functions -----------------------------------------------\nasync function validateAuthToken(token) {\n  if (!token) return null;\n  \n  try {\n    const connection = await mysql.createConnection(mysqlConfig);\n    \n    // Hash the token and check if it exists and is not expired\n    const tokenHash = crypto.createHash('sha256').update(token).digest('hex');\n    \n    const [rows] = await connection.execute(\n      `SELECT ct.user_id, u.username, u.full_name, u.is_admin\n       FROM chat_tokens ct \n       JOIN users u ON ct.user_id = u.id \n       WHERE ct.token_hash = ? AND ct.expires_at > NOW()`,\n      [tokenHash]\n    );\n    \n    await connection.end();\n    \n    if (rows.length === 0) return null;\n    \n    const user = rows[0];\n    return {\n      id: user.user_id,\n      username: user.username,\n      full_name: user.full_name,\n      is_admin: user.is_admin\n    };\n  } catch (error) {\n    console.error(\"Token validation error:\", error.message);\n    return null;\n  }\n}\n\nasync function verifyRoomMembership(userId, roomId) {\n  try {\n    const member = await get(\n      `SELECT 1 FROM chat_members WHERE room_id = ? AND user_id = ?`,\n      [roomId, userId]\n    );\n    return !!member;\n  } catch (error) {\n    console.error(\"Membership verification error:\", error.message);\n    return false;\n  }\n}\n\n// --- HTTP + Socket.IO -------------------------------------------------------\nconst httpServer = http.createServer((req, res) => {\n  if (req.url === \"/healthz\") {\n    res.writeHead(200, { \"content-type\": \"text/plain\" });\n    return res.end(\"ok\");\n  }\n  res.writeHead(200, { \"content-type\": \"text/plain\" });\n  res.end(\"Socket.IO chat running\");\n});\n\nconst io = new Server(httpServer, {\n  path: \"/socket.io\",\n  transports: [\"websocket\", \"polling\"],\n  cors: {\n    origin: (_origin, cb) => cb(null, true),\n    credentials: true\n  }\n});\n\nio.on(\"connection\", async (socket) => {\n  const auth = socket.handshake.auth || {};\n  const chatToken = auth.chat_token;\n  \n  // Validate authentication token\n  const user = await validateAuthToken(chatToken);\n  if (!user) {\n    console.log(\"Invalid or missing chat token, disconnecting\");\n    socket.emit(\"fatal\", { error: \"Authentication failed\" });\n    socket.disconnect(true);\n    return;\n  }\n  \n  const userId = user.id;\n  const username = user.full_name || user.username;\n  \n  console.log(`User ${username} (${userId}) authenticated successfully`);\n  \n  // Send initial room list\n  sendRooms(userId, socket);\n\n  socket.on(\"rooms:refresh\", () => sendRooms(userId, socket));\n\n  socket.on(\"room:join\", async (roomId, ack) => {\n    try {\n      roomId = Number(roomId);\n      \n      // Verify user is a member of the room before allowing join\n      const isMember = await verifyRoomMembership(userId, roomId);\n      if (!isMember) {\n        console.log(`User ${userId} attempted to join room ${roomId} without membership`);\n        return ack?.({ error: \"Access denied\" });\n      }\n      \n      // Join socket.io room\n      socket.join(`room:${roomId}`);\n      \n      // Fetch and send message history\n      const history = await all(\n        `SELECT id, room_id, user_id, username, body, created_at\n         FROM chat_messages WHERE room_id = ? ORDER BY id ASC LIMIT 200`,\n        [roomId]\n      );\n      ack?.(history || []);\n    } catch (e) {\n      console.error(\"Room join error:\", e.message);\n      ack?.({ error: \"Join failed\" });\n    }\n  });\n\n  socket.on(\"message:send\", async (payload, ack) => {\n    try {\n      const roomId = Number(payload?.room_id);\n      const body = String(payload?.body || \"\").trim().slice(0, 5000);\n      if (!roomId || !body) return ack?.({ ok: false, error: \"Invalid message\" });\n\n      // Verify membership before allowing message send\n      const isMember = await verifyRoomMembership(userId, roomId);\n      if (!isMember) {\n        console.log(`User ${userId} attempted to send message to room ${roomId} without membership`);\n        return ack?.({ ok: false, error: \"Access denied\" });\n      }\n\n      const rs = await run(\n        `INSERT INTO chat_messages (room_id, user_id, username, body)\n         VALUES (?, ?, ?, ?)`,\n        [roomId, userId, username, body]\n      );\n\n      const msg = await get(\n        `SELECT id, room_id, user_id, username, body, created_at\n           FROM chat_messages WHERE id = ?`,\n        [rs.lastID]\n      );\n\n      io.to(`room:${roomId}`).emit(\"message:new\", msg);\n      ack?.({ ok: true, id: rs.lastID });\n    } catch (e) {\n      console.error(\"Message send error:\", e.message);\n      ack?.({ ok: false, error: \"Send failed\" });\n    }\n  });\n\n  socket.on(\"room:create\", async (name, memberIds, ack) => {\n    try {\n      name = String(name || \"\").trim().slice(0, 120);\n      if (!name) return ack?.({ ok: false, error: \"Group name required\" });\n      \n      // Validate that all member IDs are valid users\n      const ids = Array.from(new Set([userId, ...(memberIds || [])]))\n        .map((x) => Number(x))\n        .filter(Boolean);\n\n      if (ids.length < 2) {\n        return ack?.({ ok: false, error: \"At least one other member required\" });\n      }\n\n      // Verify all member IDs exist in users table\n      try {\n        const connection = await mysql.createConnection(mysqlConfig);\n        const placeholders = ids.map(() => '?').join(',');\n        const [userRows] = await connection.execute(\n          `SELECT id FROM users WHERE id IN (${placeholders})`,\n          ids\n        );\n        await connection.end();\n        \n        if (userRows.length !== ids.length) {\n          return ack?.({ ok: false, error: \"Invalid user selected\" });\n        }\n      } catch (dbError) {\n        console.error(\"User validation error:\", dbError.message);\n        return ack?.({ ok: false, error: \"Validation failed\" });\n      }\n\n      const ins = await run(\n        `INSERT INTO chat_rooms (name, is_group, created_by) VALUES (?, 1, ?)`,\n        [name, userId]\n      );\n      const roomId = ins.lastID;\n\n      const ps = ids.map((id) =>\n        run(`INSERT OR IGNORE INTO chat_members (room_id, user_id) VALUES (?,?)`, [\n          roomId,\n          id\n        ])\n      );\n      await Promise.all(ps);\n\n      sendRooms(userId, socket);\n      ack?.({ ok: true, room_id: roomId });\n    } catch (e) {\n      console.error(\"Room creation error:\", e.message);\n      ack?.({ ok: false, error: \"Creation failed\" });\n    }\n  });\n\n  socket.on(\"dm:open\", async (otherUserId, ack) => {\n    try {\n      const otherId = Number(otherUserId);\n      if (!otherId || otherId === userId) return ack?.({ ok: false, error: \"Invalid user\" });\n\n      // Verify the other user exists\n      try {\n        const connection = await mysql.createConnection(mysqlConfig);\n        const [userRows] = await connection.execute(\n          `SELECT id FROM users WHERE id = ?`,\n          [otherId]\n        );\n        await connection.end();\n        \n        if (userRows.length === 0) {\n          return ack?.({ ok: false, error: \"User not found\" });\n        }\n      } catch (dbError) {\n        console.error(\"User verification error:\", dbError.message);\n        return ack?.({ ok: false, error: \"Verification failed\" });\n      }\n\n      const a = Math.min(userId, otherId);\n      const b = Math.max(userId, otherId);\n\n      // Look for existing DM with exactly these two members\n      const existing = await get(\n        `SELECT r.id\n           FROM chat_rooms r\n           JOIN chat_members m1 ON m1.room_id = r.id AND m1.user_id = ?\n           JOIN chat_members m2 ON m2.room_id = r.id AND m2.user_id = ?\n          WHERE r.is_group = 0\n          LIMIT 1`,\n        [a, b]\n      );\n\n      if (existing?.id) {\n        sendRooms(userId, socket);\n        return ack?.({ ok: true, room_id: existing.id });\n      }\n\n      const ins = await run(\n        `INSERT INTO chat_rooms (name, is_group, created_by)\n         VALUES (?, 0, ?)`,\n        [`DM:${a}-${b}`, userId]\n      );\n      const roomId = ins.lastID;\n\n      await run(\n        `INSERT OR IGNORE INTO chat_members (room_id, user_id) VALUES (?,?)`,\n        [roomId, a]\n      );\n      await run(\n        `INSERT OR IGNORE INTO chat_members (room_id, user_id) VALUES (?,?)`,\n        [roomId, b]\n      );\n\n      sendRooms(userId, socket);\n      ack?.({ ok: true, room_id: roomId });\n    } catch (e) {\n      console.error(\"DM creation error:\", e.message);\n      ack?.({ ok: false, error: \"DM failed\" });\n    }\n  });\n});\n\nasync function sendRooms(userId, socket) {\n  try {\n    const rows = await all(\n      `SELECT r.id, r.name, r.is_group\n         FROM chat_rooms r\n         JOIN chat_members m ON m.room_id = r.id\n        WHERE m.user_id = ?\n        ORDER BY r.created_at DESC, r.id DESC`,\n      [userId]\n    );\n    socket.emit(\"rooms:list\", rows || []);\n  } catch (error) {\n    console.error(\"Error sending rooms:\", error.message);\n    socket.emit(\"rooms:list\", []);\n  }\n}\n\nhttpServer.listen(CHAT_PORT, \"0.0.0.0\", () => {\n  console.log(`Secure Socket.IO chat server running on port ${CHAT_PORT}`);\n});","size_bytes":10821},"index.php":{"content":"<?php \n\r\nrequire_once 'app/init.php';\r\n\r\n$app = new App;\n\n","size_bytes":58},"server.js":{"content":"const http = require(\"http\");\nconst { Server } = require(\"socket.io\");\n\nconst server = http.createServer();\nconst io = new Server(server, {\n  cors: { origin: \"*\" }\n});\n\nio.on(\"connection\", (socket) => {\n  console.log(\"User connected:\", socket.id);\n\n  socket.on(\"chatMessage\", (msg) => {\n    io.emit(\"chatMessage\", msg); // broadcast to everyone\n  });\n\n  socket.on(\"disconnect\", () => {\n    console.log(\"User disconnected:\", socket.id);\n  });\n});\n\nserver.listen(3000, () => {\n  console.log(\"Socket.io server running on port 3000\");\n});\n","size_bytes":535},"setup_database.php":{"content":"\n<?php\nrequire_once 'app/database.php';\n\ntry {\n    $db = db_connect();\n    \n    // Create employees table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS employees (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            name VARCHAR(100) NOT NULL,\n            email VARCHAR(150) UNIQUE,\n            role VARCHAR(100) DEFAULT 'Staff',\n            wage DECIMAL(10,2) NULL,\n            role_title VARCHAR(100) NULL,\n            is_active TINYINT(1) DEFAULT 1,\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n        )\n    \");\n\n    // Create shifts table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS shifts (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            employee_id INT NOT NULL,\n            start_dt DATETIME NOT NULL,\n            end_dt DATETIME NOT NULL,\n            notes TEXT NULL,\n            status VARCHAR(20) DEFAULT 'scheduled',\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n            FOREIGN KEY (employee_id) REFERENCES employees(id) ON DELETE CASCADE\n        )\n    \");\n\n    // Create departments table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS departments (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            name VARCHAR(100) NOT NULL,\n            is_active TINYINT(1) DEFAULT 1,\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n            UNIQUE KEY unique_name (name)\n        )\n    \");\n\n    // Create schedule weeks table for publishing\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS schedule_weeks (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            week_start DATE NOT NULL,\n            published TINYINT(1) DEFAULT 0,\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n            UNIQUE KEY unique_week (week_start)\n        )\n    \");\n\n    // Create roles table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS roles (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            name VARCHAR(100) NOT NULL,\n            UNIQUE KEY unique_name (name)\n        )\n    \");\n\n    // Create department_roles junction table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS department_roles (\n            department_id INT,\n            role_id INT,\n            PRIMARY KEY (department_id, role_id),\n            FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,\n            FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE\n        )\n    \");\n\n    // Update employees table to include wage and role_title\n    $db->exec(\"\n        ALTER TABLE employees \n        ADD COLUMN IF NOT EXISTS wage DECIMAL(10,2) NULL,\n        ADD COLUMN IF NOT EXISTS role_title VARCHAR(100) NULL,\n        MODIFY COLUMN role VARCHAR(100) NULL\n    \");\n\n    // Create employee_department junction table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS employee_department (\n            employee_id INT,\n            department_id INT,\n            is_manager TINYINT(1) DEFAULT 0,\n            PRIMARY KEY (employee_id, department_id),\n            FOREIGN KEY (employee_id) REFERENCES employees(id) ON DELETE CASCADE,\n            FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE\n        )\n    \");\n\n    // Update shifts table to include status\n    $db->exec(\"\n        ALTER TABLE shifts \n        ADD COLUMN IF NOT EXISTS status VARCHAR(20) DEFAULT 'scheduled'\n    \");\n\n    // Create schedules table for publish tracking\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS schedules (\n            week_start DATE PRIMARY KEY,\n            published TINYINT(1) DEFAULT 0,\n            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n        )\n    \");\n\n    // Insert default roles\n    $defaultRoles = ['Manager', 'Coordinator', 'Support Worker', 'Volunteer', 'Admin', 'Staff'];\n    foreach ($defaultRoles as $role) {\n        $db->prepare(\"INSERT IGNORE INTO roles (name) VALUES (?)\")->execute([$role]);\n    }\n\n    // Create users table\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS users (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            username VARCHAR(100) NOT NULL UNIQUE,\n            password VARCHAR(255) NOT NULL,\n            is_admin TINYINT(1) DEFAULT 0,\n            full_name VARCHAR(200) NULL,\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n        )\n    \");\n\n    // Create login_logs table  \n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS login_logs (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            username VARCHAR(100) NOT NULL,\n            status ENUM('good', 'bad') NOT NULL,\n            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n            ip_address VARCHAR(45) NULL,\n            INDEX idx_username (username),\n            INDEX idx_timestamp (timestamp)\n        )\n    \");\n\n    // Create chat_tokens table for secure authentication\n    $db->exec(\"\n        CREATE TABLE IF NOT EXISTS chat_tokens (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            user_id INT NOT NULL,\n            token_hash VARCHAR(255) NOT NULL UNIQUE,\n            expires_at DATETIME NOT NULL,\n            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n            INDEX idx_token_hash (token_hash),\n            INDEX idx_expires_at (expires_at)\n        )\n    \");\n\n    // Insert default departments\n    $defaultDepartments = ['General', 'Support', 'Administration', 'Operations'];\n    foreach ($defaultDepartments as $dept) {\n        $db->prepare(\"INSERT IGNORE INTO departments (name, is_active, created_at) VALUES (?, 1, NOW())\")->execute([$dept]);\n    }\n\n    echo \"Database setup completed successfully!\\n\";\n    \n} catch (Exception $e) {\n    echo \"Error setting up database: \" . $e->getMessage() . \"\\n\";\n}\n","size_bytes":5685},"start.sh":{"content":"#!/bin/bash\nset -e\n\n# Replit gives you one public port in $PORT. Use that for PHP.\nexport PHP_PORT=\"${PORT:-8000}\"\n# Socket.IO will live on its own port (Replit supports multiport via subdomain)\nexport CHAT_PORT=\"${CHAT_PORT:-3001}\"\n\necho \"Starting Socket.IO chat on :$CHAT_PORT ...\"\nCHAT_PORT=$CHAT_PORT node chat-server.js &\n\nsleep 1\n\necho \"Starting PHP on :$PHP_PORT ...\"\nphp -S 0.0.0.0:$PHP_PORT -t .\n","size_bytes":405},"app/database.php":{"content":"<?php\nrequire_once 'core/config.php';\n\nfunction db_connect() {\n    try {\n        $dbh = new PDO('mysql:host=' . DB_HOST . ';port='. DB_PORT . ';dbname=' . DB_DATABASE, DB_USER, DB_PASS);\n        return $dbh;\n    } catch (PDOException $e) {\n        //We should set a global variable here so we know the DB is down\n    }\n}","size_bytes":320},"app/init.php":{"content":"<?php\nerror_reporting(E_ALL);\nini_set('display_errors', 1);   // <-- was 0; turn it on to see errors\nini_set('log_errors', 1);\n\n\n// Production settings - errors logged but not displayed\nerror_reporting(E_ALL);\nini_set('display_errors', 0);\nini_set('log_errors', 1);\nini_set('session.gc_maxlifetime', 28800);\nini_set('session.gc_probability', 1);\nini_set('session.gc_divisor', 1);\n$sessionCookieExpireTime = 28800; // 8hrs\nsession_set_cookie_params($sessionCookieExpireTime);\nsession_start();\n\nrequire_once 'core/App.php';\nrequire_once 'core/Controller.php';\nrequire_once 'core/config.php';\nrequire_once 'database.php';\n\n","size_bytes":620},"app/controllers/chat.php":{"content":"<?php\nclass chat extends Controller\n{\n    public function __construct() {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n        $this->db = db_connect();\n    }\n\n    public function index() {\n        $me = (int)($_SESSION['id'] ?? 0);\n        $stmt = $this->db->query(\"SELECT id, COALESCE(NULLIF(TRIM(full_name),''), username) AS label FROM users ORDER BY label ASC\");\n        $users = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        \n        // Generate secure token for chat authentication\n        $chatToken = $this->generateChatToken($me);\n        \n        $this->view('chat/index', [\n            'users' => $users, \n            'me' => $me,\n            'chat_token' => $chatToken\n        ]);\n    }\n\n    private function generateChatToken($userId) {\n        try {\n            // Clean up expired tokens\n            $this->db->prepare(\"DELETE FROM chat_tokens WHERE expires_at < NOW()\")->execute();\n            \n            // Generate a cryptographically secure token\n            $token = bin2hex(random_bytes(32));\n            $tokenHash = hash('sha256', $token);\n            $expiresAt = date('Y-m-d H:i:s', time() + 3600); // 1 hour expiry\n            \n            // Store token hash in database\n            $stmt = $this->db->prepare(\"\n                INSERT INTO chat_tokens (user_id, token_hash, expires_at) \n                VALUES (?, ?, ?)\n                ON DUPLICATE KEY UPDATE \n                token_hash = VALUES(token_hash), \n                expires_at = VALUES(expires_at)\n            \");\n            $stmt->execute([$userId, $tokenHash, $expiresAt]);\n            \n            return $token;\n        } catch (Exception $e) {\n            error_log(\"Failed to generate chat token: \" . $e->getMessage());\n            return null;\n        }\n    }\n}\n","size_bytes":1858},"app/controllers/departments.php":{"content":"<?php\n// app/controllers/departments.php\nclass departments extends Controller\n{\n    private PDO $db;\n\n    public function __construct() {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n        $this->db = db_connect();\n        $this->ensurePivotTables(); // create missing pivots if needed\n    }\n\n    /* GET /departments */\n    public function index() {\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n        $this->view('departments/index');\n    }\n\n    /* JSON API: /departments/api?a=... */\n    public function api() {\n        if (empty($_SESSION['auth'])) {\n            http_response_code(401);\n            header('Content-Type: application/json; charset=utf-8');\n            echo json_encode(['error'=>'Auth required']);\n            return;\n        }\n\n        header('Content-Type: application/json; charset=utf-8');\n        $a = $_GET['a'] ?? '';\n\n        try {\n            switch ($a) {\n                /* ---------- Bootstrap ---------- */\n                case 'bootstrap':\n                    echo json_encode([\n                        'roles'       => $this->listRoles(),\n                        'users'       => $this->listUsers(),  // for Managers dropdown\n                        'departments' => $this->listDepartmentsWithCounts(),\n                    ]);\n                    break;\n\n                /* ---------- Departments CRUD ---------- */\n                case 'department.create':\n                    $this->guardAdmin();\n                    $in   = $this->json();\n                    $name = trim($in['name'] ?? '');\n                    if ($name === '') throw new Exception('Name required');\n                    $stmt = $this->db->prepare(\"INSERT INTO departments (name, is_active) VALUES (:n, 1)\");\n                    $stmt->execute([':n'=>$name]);\n                    echo json_encode(['ok'=>true, 'id'=>(int)$this->db->lastInsertId()]);\n                    break;\n\n                case 'department.rename':\n                    $this->guardAdmin();\n                    $in   = $this->json();\n                    $id   = (int)($in['id'] ?? 0);\n                    $name = trim($in['name'] ?? '');\n                    if (!$id || $name==='') throw new Exception('Invalid rename');\n                    $stmt = $this->db->prepare(\"UPDATE departments SET name=:n WHERE id=:id\");\n                    $stmt->execute([':n'=>$name, ':id'=>$id]);\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                case 'department.delete':\n                    $this->guardAdmin();\n                    $id = (int)($_GET['id'] ?? 0);\n                    if (!$id) throw new Exception('Invalid id');\n\n                    // Grab affected managers first\n                    $stmt = $this->db->prepare(\"SELECT DISTINCT user_id FROM department_managers WHERE department_id = :id\");\n                    $stmt->execute([':id'=>$id]);\n                    $affected = $stmt->fetchAll(PDO::FETCH_COLUMN);\n\n                    // Remove pivots then department\n                    $this->db->prepare(\"DELETE FROM department_roles WHERE department_id=:id\")->execute([':id'=>$id]);\n                    $this->db->prepare(\"DELETE FROM department_managers WHERE department_id=:id\")->execute([':id'=>$id]);\n                    $this->db->prepare(\"DELETE FROM departments WHERE id=:id\")->execute([':id'=>$id]);\n\n                    // Recalc admin flags for everyone that was a manager here\n                    foreach ($affected as $uid) {\n                        $this->refreshAdminFlag((int)$uid);\n                    }\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* ---------- Roles attach/detach ---------- */\n                case 'role.attach':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $deptId   = (int)($in['department_id'] ?? 0);\n                    if (!$deptId) throw new Exception('department_id required');\n\n                    $roleId   = (int)($in['role_id'] ?? 0);\n                    $roleName = trim($in['role_name'] ?? '');\n\n                    if (!$roleId && $roleName === '') throw new Exception('role_id or role_name required');\n\n                    if (!$roleId) {\n                        // find or create by name\n                        $stmt = $this->db->prepare(\"SELECT id FROM roles WHERE name=:n LIMIT 1\");\n                        $stmt->execute([':n'=>$roleName]);\n                        $roleId = (int)$stmt->fetchColumn();\n                        if (!$roleId) {\n                            $ins = $this->db->prepare(\"INSERT INTO roles (name, is_active) VALUES (:n, 1)\");\n                            $ins->execute([':n'=>$roleName]);\n                            $roleId = (int)$this->db->lastInsertId();\n                        }\n                    }\n\n                    // link if not already\n                    $this->db->prepare(\"\n                        INSERT IGNORE INTO department_roles (department_id, role_id)\n                        VALUES (:d,:r)\n                    \")->execute([':d'=>$deptId, ':r'=>$roleId]);\n\n                    echo json_encode(['ok'=>true, 'role_id'=>$roleId]);\n                    break;\n\n                case 'role.detach':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $deptId = (int)($in['department_id'] ?? 0);\n                    $roleId = (int)($in['role_id'] ?? 0);\n                    if (!$deptId || !$roleId) throw new Exception('department_id and role_id required');\n                    $this->db->prepare(\"DELETE FROM department_roles WHERE department_id=:d AND role_id=:r\")\n                             ->execute([':d'=>$deptId, ':r'=>$roleId]);\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* ---------- Managers (users) ---------- */\n                case 'manager.add':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $deptId = (int)($in['department_id'] ?? 0);\n                    $userId = (int)($in['user_id'] ?? 0);\n                    if (!$deptId || !$userId) throw new Exception('department_id and user_id required');\n\n                    // Link user to department as manager\n                    $this->db->prepare(\"\n                        INSERT IGNORE INTO department_managers (department_id, user_id)\n                        VALUES (:d,:u)\n                    \")->execute([':d'=>$deptId, ':u'=>$userId]);\n\n                    // Ensure admin flag is correct after change\n                    $this->refreshAdminFlag($userId);\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                case 'manager.remove':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $deptId = (int)($in['department_id'] ?? 0);\n                    $userId = (int)($in['user_id'] ?? 0);\n                    if (!$deptId || !$userId) throw new Exception('department_id and user_id required');\n\n                    // Unlink manager\n                    $this->db->prepare(\"\n                        DELETE FROM department_managers\n                        WHERE department_id=:d AND user_id=:u\n                    \")->execute([':d'=>$deptId, ':u'=>$userId]);\n\n                    // Flip admin off if they no longer manage any departments\n                    $this->refreshAdminFlag($userId);\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* ---------- Combined fetch for one department ---------- */\n                case 'departments.roles.managers':\n                    $id = (int)($_GET['id'] ?? 0);\n                    if (!$id) throw new Exception('id required');\n\n                    $roles    = $this->fetchRolesForDepartment($id);\n                    $managers = $this->fetchManagersForDepartment($id);\n                    echo json_encode(['roles'=>$roles, 'managers'=>$managers]);\n                    break;\n\n                default:\n                    echo json_encode(['error'=>'Unknown action']);\n            }\n        } catch (Throwable $e) {\n            http_response_code(500);\n            echo json_encode(['error'=>$e->getMessage()]);\n        }\n    }\n\n    /* ===== helpers ===== */\n\n    private function guardAdmin() {\n        if (!isset($_SESSION['is_admin']) || (int)$_SESSION['is_admin'] !== 1) {\n            throw new Exception('Admin access required');\n        }\n    }\n\n    private function json(): array {\n        return json_decode(file_get_contents('php://input'), true) ?: [];\n    }\n\n    private function listRoles(): array {\n        $sql = \"SELECT id, name FROM roles WHERE COALESCE(is_active,1)=1 ORDER BY name ASC\";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function listUsers(): array {\n        // Use username if full_name is null\n        $sql = \"SELECT id,\n                       COALESCE(NULLIF(full_name,''), username) AS label\n                FROM users ORDER BY label ASC\";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function listDepartmentsWithCounts(): array {\n        $sql = \"\n            SELECT d.id, d.name, \n                   COUNT(dr.role_id) AS role_count\n            FROM departments d\n            LEFT JOIN department_roles dr ON dr.department_id = d.id\n            GROUP BY d.id, d.name\n            ORDER BY d.name ASC\n        \";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function fetchRolesForDepartment(int $deptId): array {\n        $stmt = $this->db->prepare(\"\n            SELECT r.id, r.name\n            FROM department_roles dr\n            JOIN roles r ON r.id = dr.role_id\n            WHERE dr.department_id = :d\n            ORDER BY r.name ASC\n        \");\n        $stmt->execute([':d'=>$deptId]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function fetchManagersForDepartment(int $deptId): array {\n        $stmt = $this->db->prepare(\"\n            SELECT u.id, COALESCE(NULLIF(u.full_name,''), u.username) AS label\n            FROM department_managers dm\n            JOIN users u ON u.id = dm.user_id\n            WHERE dm.department_id = :d\n            ORDER BY label ASC\n        \");\n        $stmt->execute([':d'=>$deptId]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function ensurePivotTables(): void {\n        // department_roles (department_id, role_id)\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS department_roles (\n                department_id INT NOT NULL,\n                role_id INT NOT NULL,\n                PRIMARY KEY (department_id, role_id),\n                CONSTRAINT fk_dr_dept FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,\n                CONSTRAINT fk_dr_role FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE\n            )\n        \");\n\n        // department_managers (department_id, user_id)\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS department_managers (\n                department_id INT NOT NULL,\n                user_id INT NOT NULL,\n                PRIMARY KEY (department_id, user_id),\n                CONSTRAINT fk_dm_dept FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,\n                CONSTRAINT fk_dm_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n            )\n        \");\n    }\n\n    /** Count whether user manages any departments */\n    private function userManagerCount(int $userId): int {\n        $stmt = $this->db->prepare(\"SELECT COUNT(*) FROM department_managers WHERE user_id = :u\");\n        $stmt->execute([':u'=>$userId]);\n        return (int)$stmt->fetchColumn();\n    }\n\n    /** Flip users.is_admin based on whether they manage >= 1 department and sync session if needed */\n    private function refreshAdminFlag(int $userId): void {\n        $isAdmin = $this->userManagerCount($userId) > 0 ? 1 : 0;\n        $this->db->prepare(\"UPDATE users SET is_admin = :a WHERE id = :u\")\n                 ->execute([':a'=>$isAdmin, ':u'=>$userId]);\n\n        if (!empty($_SESSION['id']) && (int)$_SESSION['id'] === $userId) {\n            $_SESSION['is_admin'] = $isAdmin;\n        }\n    }\n}\n","size_bytes":12340},"app/controllers/home.php":{"content":"<?php\nclass Home extends Controller\n{\n    public function index()\n    {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n\n        $me = [\n            'id'        => $_SESSION['id'] ?? $_SESSION['user_id'] ?? null,\n            'username'  => $_SESSION['username'] ?? null,\n            'full_name' => $_SESSION['full_name'] ?? null,\n            'is_admin'  => (int)($_SESSION['is_admin'] ?? 0),\n        ];\n\n        // Optional sample DB call, wrapped so it can't blank the page\n        $sample = null;\n        try {\n            $userModel = $this->model('User');\n            $sample = $userModel->test(); // safe if DB ok; ignored if not\n        } catch (\\Throwable $e) {\n            error_log('Home::index test() failed: '.$e->getMessage());\n        }\n\n        $this->view('home/index', ['me' => $me, 'data' => $sample]);\n    }\n}\n","size_bytes":926},"app/controllers/login.php":{"content":"<?php\nclass Login extends Controller\n{\n\t\tpublic function index()\n\t\t{\n\t\t\t\t$this->view('login/index');\n\t\t}\n\n\t\tpublic function verify()\n\t\t{\n\t\t\t\tif ($_SERVER['REQUEST_METHOD'] !== 'POST') {\n\t\t\t\t\t\theader('Location: /login');\n\t\t\t\t\t\texit;\n\t\t\t\t}\n\n\t\t\t\t$username = trim($_POST['username']);\n\t\t\t\t$password = trim($_POST['password']);\n\n\t\t\t\t$user = $this->model('User');\n\t\t\t\t$user->authenticate($username, $password);\n\t\t}\n}\n","size_bytes":411},"app/controllers/logout.php":{"content":"<?php\n\nclass Logout extends Controller {\n\n    public function index() {\t\t\n        $_SESSION = array();\n        session_destroy();\n        header('location:/login');\n    }\n}","size_bytes":172},"app/controllers/notes.php":{"content":"<?php\n\nclass Notes extends Controller {\n\n    public function index() {\n        // Check if user is logged in\n        if (!isset($_SESSION['auth'])) {\n            header('Location: /login');\n            exit;\n        }\n\n        // Check if notes table exists\n        try {\n            $db = db_connect();\n            $result = $db->query(\"SHOW TABLES LIKE 'notes'\");\n            if ($result->rowCount() == 0) {\n                $_SESSION['toast'] = [\n                    'type' => 'error',\n                    'title' => 'System Error',\n                    'message' => 'Database not properly configured. Please contact administrator.'\n                ];\n                header('Location: /home');\n                exit;\n            }\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Database Error',\n                'message' => 'Unable to connect to database. Please try again later.'\n            ];\n            header('Location: /home');\n            exit;\n        }\n\n        try {\n            $noteModel = $this->model('Note');\n            $user_id = $_SESSION['user_id'] ?? 1;\n            $notes = $noteModel->getNotesByUser($user_id);\n\n            $this->view('notes/index', ['notes' => $notes]);\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Load Error',\n                'message' => 'Unable to load your reminders. Please try again later.'\n            ];\n            header('Location: /home');\n            exit;\n        }\n    }\n\n    public function create() {\n        if (!isset($_SESSION['auth'])) {\n            header('Location: /login');\n            exit;\n        }\n\n        if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n            $subject = trim($_POST['subject']);\n            $content = trim($_POST['content'] ?? '');\n\n            if (empty($subject)) {\n                $_SESSION['toast'] = [\n                    'type' => 'error',\n                    'title' => 'Validation Error',\n                    'message' => 'Subject is required for your reminder.'\n                ];\n                $_SESSION['error'] = 'Subject is required';\n                header('Location: /notes/create');\n                exit;\n            }\n\n            $noteModel = $this->model('Note');\n            $user_id = $this->getUserId();\n\n            if ($noteModel->createNote($user_id, $subject, $content)) {\n                $_SESSION['toast'] = [\n                    'type' => 'success',\n                    'title' => 'Reminder Created!',\n                    'message' => 'Your reminder has been created successfully.'\n                ];\n                $_SESSION['success'] = 'Note created successfully';\n                header('Location: /notes');\n                exit;\n            } else {\n                $_SESSION['toast'] = [\n                    'type' => 'error',\n                    'title' => 'Creation Failed',\n                    'message' => 'Unable to create reminder. Please try again.'\n                ];\n                $_SESSION['error'] = 'Error creating note';\n                header('Location: /notes/create');\n                exit;\n            }\n        }\n\n        $this->view('notes/create');\n    }\n\n    public function edit($id) {\n        if (!isset($_SESSION['auth'])) {\n            header('Location: /login');\n            exit;\n        }\n\n        $noteModel = $this->model('Note');\n        $user_id = $this->getUserId();\n        $note = $noteModel->getNoteById($id, $user_id);\n\n        if (!$note) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Not Found',\n                'message' => 'Reminder not found or you do not have permission to edit it.'\n            ];\n            $_SESSION['error'] = 'Note not found';\n            header('Location: /notes');\n            exit;\n        }\n\n        if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n            $subject = trim($_POST['subject']);\n            $content = trim($_POST['content'] ?? '');\n\n            if (empty($subject)) {\n                $_SESSION['toast'] = [\n                    'type' => 'error',\n                    'title' => 'Validation Error',\n                    'message' => 'Subject is required for your reminder.'\n                ];\n                $_SESSION['error'] = 'Subject is required';\n                header('Location: /notes/edit/' . $id);\n                exit;\n            }\n\n            if ($noteModel->updateNote($id, $user_id, $subject, $content)) {\n                $_SESSION['toast'] = [\n                    'type' => 'success',\n                    'title' => 'Reminder Updated!',\n                    'message' => 'Your reminder has been updated successfully.'\n                ];\n                $_SESSION['success'] = 'Note updated successfully';\n                header('Location: /notes');\n                exit;\n            } else {\n                $_SESSION['toast'] = [\n                    'type' => 'error',\n                    'title' => 'Update Failed',\n                    'message' => 'Unable to update reminder. Please try again.'\n                ];\n                $_SESSION['error'] = 'Error updating note';\n                header('Location: /notes/edit/' . $id);\n                exit;\n            }\n        }\n\n        $this->view('notes/edit', ['note' => $note]);\n    }\n\n    public function delete($id) {\n        if (!isset($_SESSION['auth'])) {\n            header('Location: /login');\n            exit;\n        }\n\n        $noteModel = $this->model('Note');\n        $user_id = $this->getUserId();\n\n        if ($noteModel->deleteNote($id, $user_id)) {\n            $_SESSION['toast'] = [\n                'type' => 'success',\n                'title' => 'Reminder Deleted',\n                'message' => 'Your reminder has been deleted successfully.'\n            ];\n            $_SESSION['success'] = 'Note deleted successfully';\n        } else {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Delete Failed',\n                'message' => 'Unable to delete reminder. Please try again.'\n            ];\n            $_SESSION['error'] = 'Error deleting note';\n        }\n\n        header('Location: /notes');\n        exit;\n    }\n\n    public function toggle($id) {\n        if (!isset($_SESSION['auth'])) {\n            header('Location: /login');\n            exit;\n        }\n\n        $noteModel = $this->model('Note');\n        $user_id = $this->getUserId();\n\n        if ($noteModel->toggleCompleted($id, $user_id)) {\n            $_SESSION['toast'] = [\n                'type' => 'success',\n                'title' => 'Status Updated',\n                'message' => 'Reminder status has been updated successfully.'\n            ];\n            $_SESSION['info'] = 'Reminder status updated';\n        } else {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Update Failed',\n                'message' => 'Unable to update reminder status. Please try again.'\n            ];\n            $_SESSION['error'] = 'Error updating reminder status';\n        }\n\n        header('Location: /notes');\n        exit;\n    }\n\n    private function getUserId() {\n        return $_SESSION['user_id'] ?? 1;\n    }\n} ","size_bytes":7299},"app/controllers/reports.php":{"content":"<?php\n\nclass Reports extends Controller {\n\n    public function index() {\n        // Comprehensive access control check\n        $this->checkAccess('Admin Reports Dashboard');\n\n        try {\n            $db = db_connect();\n\n            // Get overview statistics\n            $stats = $this->getOverviewStats($db);\n\n            // Get all reminders with user info\n            $allReminders = $this->getAllReminders($db);\n\n            // Get user with most reminders\n            $topUser = $this->getTopUser($db);\n\n            // Get login statistics\n            $loginStats = $this->getLoginStats($db);\n\n            // Get recent activity\n            $recentActivity = $this->getRecentActivity($db);\n\n            $data = [\n                'stats' => $stats,\n                'allReminders' => $allReminders,\n                'topUser' => $topUser,\n                'loginStats' => $loginStats,\n                'recentActivity' => $recentActivity\n            ];\n\n            $this->view('reports/index', $data);\n\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'System Error',\n                'message' => 'Unable to load reports. Please try again later.'\n            ];\n            header('Location: /home');\n            exit;\n        }\n    }\n\n    public function allReminders() {\n        // Comprehensive access control check\n        $this->checkAccess('All Reminders Report');\n\n        try {\n            $db = db_connect();\n            $reminders = $this->getAllReminders($db);\n            $this->view('reports/all-reminders', ['reminders' => $reminders]);\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Load Error',\n                'message' => 'Unable to load reminders. Please try again later.'\n            ];\n            header('Location: /reports');\n            exit;\n        }\n    }\n\n    public function userStats() {\n        // Comprehensive access control check\n        $this->checkAccess('User Statistics Report');\n\n        try {\n            $db = db_connect();\n            $userStats = $this->getUserReminderStats($db);\n            $this->view('reports/user-stats', ['userStats' => $userStats]);\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Load Error',\n                'message' => 'Unable to load user statistics. Please try again later.'\n            ];\n            header('Location: /reports');\n            exit;\n        }\n    }\n\n    public function loginReport() {\n        // Comprehensive access control check\n        $this->checkAccess('Login Report');\n\n        try {\n            $db = db_connect();\n            $loginStats = $this->getDetailedLoginStats($db);\n            $this->view('reports/login-report', ['loginStats' => $loginStats]);\n        } catch (Exception $e) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Load Error',\n                'message' => 'Unable to load login report. Please try again later.'\n            ];\n            header('Location: /reports');\n            exit;\n        }\n    }\n\n    /**\n     * Comprehensive access control check\n     * Handles authentication and authorization with proper redirects and messages\n     */\n    private function checkAccess($resource = 'Admin Reports') {\n        // Check if user is logged in\n        if (!isset($_SESSION['auth']) || !$_SESSION['auth']) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Authentication Required',\n                'message' => 'Please log in to access ' . $resource . '.'\n            ];\n\n            // Store intended URL for redirect after login\n            $_SESSION['intended_url'] = $_SERVER['REQUEST_URI'];\n\n            header('Location: /login');\n            exit;\n        }\n\n        // Check if user has admin privileges\n        if (!$this->isAdmin()) {\n            $_SESSION['toast'] = [\n                'type' => 'error',\n                'title' => 'Access Denied',\n                'message' => 'You do not have permission to access ' . $resource . '. Admin privileges required.'\n            ];\n\n            // Log the unauthorized access attempt\n            $this->logAccessAttempt($_SESSION['username'], $resource, 'denied');\n\n            header('Location: /home');\n            exit;\n        }\n\n        // Log successful access\n        $this->logAccessAttempt($_SESSION['username'], $resource, 'granted');\n    }\n\n    /**\n     * Check if current user is admin\n     */\n    private function isAdmin() {\n        return isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1;\n    }\n\n    /**\n     * Log access attempts for security monitoring\n     */\n    private function logAccessAttempt($username, $resource, $status) {\n        try {\n            $db = db_connect();\n\n            // Create access_logs table if it doesn't exist\n            $db->exec(\"CREATE TABLE IF NOT EXISTS access_logs (\n                id INT AUTO_INCREMENT PRIMARY KEY,\n                username VARCHAR(255) NOT NULL,\n                resource VARCHAR(255) NOT NULL,\n                status ENUM('granted', 'denied') NOT NULL,\n                ip_address VARCHAR(45) NOT NULL,\n                user_agent TEXT,\n                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                INDEX idx_username (username),\n                INDEX idx_timestamp (timestamp),\n                INDEX idx_status (status)\n            )\");\n\n            $stmt = $db->prepare(\"INSERT INTO access_logs (username, resource, status, ip_address, user_agent) VALUES (?, ?, ?, ?, ?)\");\n            $stmt->execute([\n                $username,\n                $resource,\n                $status,\n                $_SERVER['REMOTE_ADDR'] ?? 'unknown',\n                $_SERVER['HTTP_USER_AGENT'] ?? 'unknown'\n            ]);\n\n        } catch (Exception $e) {\n            // Log error but don't break the application\n            error_log(\"Access log error: \" . $e->getMessage());\n        }\n    }\n\n    private function getOverviewStats($db) {\n        $stats = [];\n\n        // Total users\n        $stmt = $db->query(\"SELECT COUNT(*) as total_users FROM users\");\n        $stats['total_users'] = $stmt->fetch(PDO::FETCH_ASSOC)['total_users'];\n\n        // Total reminders\n        $stmt = $db->query(\"SELECT COUNT(*) as total_reminders FROM notes WHERE deleted = 0\");\n        $stats['total_reminders'] = $stmt->fetch(PDO::FETCH_ASSOC)['total_reminders'];\n\n        // Completed reminders\n        $stmt = $db->query(\"SELECT COUNT(*) as completed_reminders FROM notes WHERE deleted = 0 AND completed = 1\");\n        $stats['completed_reminders'] = $stmt->fetch(PDO::FETCH_ASSOC)['completed_reminders'];\n\n        // Pending reminders\n        $stats['pending_reminders'] = $stats['total_reminders'] - $stats['completed_reminders'];\n\n        // Total logins (good attempts)\n        $stmt = $db->query(\"SELECT COUNT(*) as total_logins FROM login_logs WHERE status = 'good'\");\n        $stats['total_logins'] = $stmt->fetch(PDO::FETCH_ASSOC)['total_logins'];\n\n        return $stats;\n    }\n\n    private function getAllReminders($db) {\n        $stmt = $db->prepare(\"\n            SELECT n.*, u.username \n            FROM notes n \n            JOIN users u ON n.user_id = u.id \n            WHERE n.deleted = 0 \n            ORDER BY n.created_at DESC \n            LIMIT 50\n        \");\n        $stmt->execute();\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function getTopUser($db) {\n        $stmt = $db->prepare(\"\n            SELECT u.username, COUNT(n.id) as reminder_count\n            FROM users u\n            LEFT JOIN notes n ON u.id = n.user_id AND n.deleted = 0\n            GROUP BY u.id, u.username\n            ORDER BY reminder_count DESC\n            LIMIT 1\n        \");\n        $stmt->execute();\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    }\n\n    private function getLoginStats($db) {\n        $stmt = $db->prepare(\"\n            SELECT username, \n                   COUNT(*) as login_count,\n                   MAX(timestamp) as last_login\n            FROM login_logs \n            WHERE status = 'good'\n            GROUP BY username\n            ORDER BY login_count DESC\n            LIMIT 10\n        \");\n        $stmt->execute();\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function getUserReminderStats($db) {\n        $stmt = $db->prepare(\"\n            SELECT u.username, \n                   COUNT(n.id) as total_reminders,\n                   SUM(CASE WHEN n.completed = 1 THEN 1 ELSE 0 END) as completed,\n                   SUM(CASE WHEN n.completed = 0 THEN 1 ELSE 0 END) as pending\n            FROM users u\n            LEFT JOIN notes n ON u.id = n.user_id AND n.deleted = 0\n            GROUP BY u.id, u.username\n            ORDER BY total_reminders DESC\n        \");\n        $stmt->execute();\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function getDetailedLoginStats($db) {\n        $stmt = $db->prepare(\"\n            SELECT username, status, COUNT(*) as attempt_count\n            FROM login_logs\n            GROUP BY username, status\n            ORDER BY username, status\n        \");\n        $stmt->execute();\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function getRecentActivity($db) {\n        try {\n            $stmt = $db->prepare(\"\n                SELECT 'reminder_created' as activity_type, \n                       CAST(u.username AS CHAR(255)) as username, \n                       CAST(n.subject AS CHAR(255)) as details, \n                       n.created_at as activity_time\n                FROM notes n\n                JOIN users u ON n.user_id = u.id\n                WHERE n.deleted = 0\n                UNION ALL\n                SELECT 'login' as activity_type,\n                       CAST(username AS CHAR(255)) as username,\n                       CAST(CONCAT('Login attempt: ', status) AS CHAR(255)) as details,\n                       timestamp as activity_time\n                FROM login_logs\n                ORDER BY activity_time DESC\n                LIMIT 20\n            \");\n            $stmt->execute();\n            return $stmt->fetchAll(PDO::FETCH_ASSOC);\n        } catch (Exception $e) {\n            // Fallback: Get recent activity from each table separately\n            $activities = [];\n\n            // Get recent reminders\n            $stmt = $db->prepare(\"\n                SELECT 'reminder_created' as activity_type, \n                       u.username, \n                       n.subject as details, \n                       n.created_at as activity_time\n                FROM notes n\n                JOIN users u ON n.user_id = u.id\n                WHERE n.deleted = 0\n                ORDER BY n.created_at DESC\n                LIMIT 10\n            \");\n            $stmt->execute();\n            $activities = array_merge($activities, $stmt->fetchAll(PDO::FETCH_ASSOC));\n\n            // Get recent logins\n            $stmt = $db->prepare(\"\n                SELECT 'login' as activity_type,\n                       username,\n                       CONCAT('Login attempt: ', status) as details,\n                       timestamp as activity_time\n                FROM login_logs\n                ORDER BY timestamp DESC\n                LIMIT 10\n            \");\n            $stmt->execute();\n            $activities = array_merge($activities, $stmt->fetchAll(PDO::FETCH_ASSOC));\n\n            // Sort by activity_time\n            usort($activities, function($a, $b) {\n                return strtotime($b['activity_time']) - strtotime($a['activity_time']);\n            });\n\n            return array_slice($activities, 0, 20);\n        }\n    }\n} ","size_bytes":11770},"app/controllers/schedule.php":{"content":"<?php\n\nclass Schedule extends Controller\n{\n    private $Employee;\n    private $Shift;\n    private $Week;\n\n    public function __construct() {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n        $this->Employee = $this->model('Employee');\n        $this->Shift    = $this->model('Shift');\n        $this->Week     = $this->model('ScheduleWeek');\n    }\n\n    /** Admin/team schedule grid (existing page) */\n    public function index() {\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n        $this->view('schedule/index');\n    }\n\n    /** “My Shifts” page (personal view) */\n    public function my() {\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n        $this->view('schedule/my');\n    }\n\n    /** JSON API: /schedule/api?a=... */\n    public function api() {\n        if (empty($_SESSION['auth'])) {\n            http_response_code(401);\n            header('Content-Type: application/json; charset=utf-8');\n            echo json_encode(['error' => 'Auth required']);\n            return;\n        }\n\n        header('Content-Type: application/json; charset=utf-8');\n        $a = $_GET['a'] ?? '';\n\n        try {\n            switch ($a) {\n\n                /* ----------------- Employees ----------------- */\n                case 'employees.list':\n                    echo json_encode($this->Employee->all());\n                    break;\n\n                case 'employees.create':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $id = $this->Employee->create(\n                        trim($in['name'] ?? ''),\n                        $in['email'] ?? null,\n                        $in['role']  ?? 'Staff'\n                    );\n                    echo json_encode(['ok'=>true,'id'=>$id]);\n                    break;\n\n                case 'employees.update':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    echo json_encode(['ok'=>$this->Employee->update((int)$in['id'], $in)]);\n                    break;\n\n                case 'employees.delete':\n                    $this->guardAdmin();\n                    $id = (int)($_GET['id'] ?? 0);\n                    echo json_encode(['ok'=>$this->Employee->delete($id)]);\n                    break;\n\n                /* ----------------- Shifts: read ----------------- */\n                case 'shifts.week': {\n                    $week = $_GET['week'] ?? date('Y-m-d');\n                    $w    = ScheduleWeek::mondayOf($week);\n                    $rows = $this->Shift->forWeek($w);\n                    echo json_encode(['week_start'=>$w,'shifts'=>$rows,'is_admin'=>$this->isAdmin()]);\n                    break;\n                }\n\n                /* Personal shifts for current user */\n                case 'shifts.my': {\n                    $week = $_GET['week'] ?? date('Y-m-d');\n                    $wk   = ScheduleWeek::mondayOf($week);\n                    $emp  = $this->resolveEmployeeForCurrentUser();\n                    if (!$emp) throw new Exception('No employee record linked to your account.');\n                    $rows = $this->Shift->forWeekEmployee($wk, (int)$emp['id']);\n                    echo json_encode(['week_start'=>$wk,'employee_id'=>(int)$emp['id'],'shifts'=>$rows]);\n                    break;\n                }\n\n                /* Map current session user → employee row */\n                case 'me.employee': {\n                    $emp = $this->resolveEmployeeForCurrentUser();\n                    if (!$emp) throw new Exception('No employee record linked to your account.');\n                    echo json_encode(['employee_id' => (int)$emp['id'], 'employee_name' => $emp['name']]);\n                    break;\n                }\n\n                /* ----------------- Shifts: write ----------------- */\n                case 'shifts.create':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $id = $this->Shift->create(\n                        (int)$in['employee_id'],\n                        $in['start_dt'],\n                        $in['end_dt'],\n                        $in['notes'] ?? null\n                    );\n                    echo json_encode(['ok'=>true,'id'=>$id]);\n                    break;\n\n                case 'shifts.delete':\n                    $this->guardAdmin();\n                    $id = (int)($_GET['id'] ?? 0);\n                    echo json_encode(['ok'=>$this->Shift->delete($id)]);\n                    break;\n\n                /* Copy entire week → week (like Homebase) */\n                case 'shifts.copyWeek': {\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $src = ScheduleWeek::mondayOf($in['source_week'] ?? date('Y-m-d'));\n                    $dst = ScheduleWeek::mondayOf($in['target_week'] ?? date('Y-m-d'));\n                    $overwrite = !empty($in['overwrite']);\n\n                    // ensure target week row exists\n                    $this->Week->status($dst);\n\n                    if ($overwrite) {\n                        $this->Shift->deleteForWeek($dst);\n                    }\n\n                    $rows = $this->Shift->forWeek($src);\n                    $copied = 0;\n                    $srcDate = new DateTime($src);\n                    $dstDate = new DateTime($dst);\n                    $diffDays = (int)$srcDate->diff($dstDate)->format('%r%a');\n\n                    foreach ($rows as $r) {\n                        $s = new DateTime($r['start_dt']); $s->modify(($diffDays>=0?'+':'') . $diffDays . ' day');\n                        $e = new DateTime($r['end_dt']);   $e->modify(($diffDays>=0?'+':'') . $diffDays . ' day');\n                        $this->Shift->create((int)$r['employee_id'], $s->format('Y-m-d H:i:s'), $e->format('Y-m-d H:i:s'), $r['notes']);\n                        $copied++;\n                    }\n                    echo json_encode(['ok'=>true,'copied'=>$copied, 'source_week'=>$src, 'target_week'=>$dst]);\n                    break;\n                }\n\n                /* Copy user → user within a week (optionally specific days, optionally overwrite) */\n                case 'shifts.copyUserToUser': {\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $week = ScheduleWeek::mondayOf($in['week'] ?? date('Y-m-d'));\n                    $from = (int)$in['from_employee_id'];\n                    $to   = (int)$in['to_employee_id'];\n                    $days = isset($in['days']) && is_array($in['days']) ? array_values(array_map('intval',$in['days'])) : null;\n                    $overwrite = !empty($in['overwrite']);\n\n                    if ($overwrite) {\n                        $this->Shift->deleteForWeekEmployee($week, $to, $days);\n                    }\n\n                    $rows = $this->Shift->forWeekEmployee($week, $from);\n                    $copied = 0;\n                    foreach ($rows as $r) {\n                        $d = new DateTime($r['start_dt']);\n                        $dow = (int)$d->format('w'); // 0=Sun..6=Sat\n                        if ($days && !in_array($dow, $days, true)) continue;\n\n                        $duration = (new DateTime($r['end_dt']))->getTimestamp() - $d->getTimestamp();\n                        $start = $d->format('Y-m-d H:i:s');\n                        $end   = date('Y-m-d H:i:s', $d->getTimestamp() + $duration);\n                        $this->Shift->create($to, $start, $end, $r['notes']);\n                        $copied++;\n                    }\n                    echo json_encode(['ok'=>true,'copied'=>$copied]);\n                    break;\n                }\n\n                /* Copy a single shift to another user/date */\n                case 'shifts.copyShift': {\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $shiftId = (int)$in['shift_id'];\n                    $toEmp   = (int)$in['to_employee_id'];\n                    $targetDate = $in['target_date'] ?? null; // YYYY-MM-DD\n\n                    $orig = $this->Shift->get($shiftId);\n                    if (!$orig) throw new Exception('Shift not found');\n\n                    $s = new DateTime($orig['start_dt']);\n                    $e = new DateTime($orig['end_dt']);\n\n                    if ($targetDate) {\n                        $s = new DateTime($targetDate . ' ' . $s->format('H:i:s'));\n                        $e = new DateTime($targetDate . ' ' . $e->format('H:i:s'));\n                    }\n\n                    $newId = $this->Shift->create($toEmp, $s->format('Y-m-d H:i:s'), $e->format('Y-m-d H:i:s'), $orig['notes']);\n                    echo json_encode(['ok'=>true,'id'=>$newId]);\n                    break;\n                }\n\n                /* ----------------- Publishing ----------------- */\n                case 'publish.status':\n                    $week = $_GET['week'] ?? date('Y-m-d');\n                    $status = $this->Week->status($week);\n                    $status['is_admin'] = $this->isAdmin();\n                    echo json_encode($status);\n                    break;\n\n                case 'publish.set':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    // Respect requested published flag\n                    $this->Week->setPublished($in['week'], !empty($in['published']) ? 1 : 0);\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* ----------------- Roles ----------------- */\n                case 'roles.list':\n                    echo json_encode($this->getActiveRoles());\n                    break;\n\n                /* ----------------- Admin users (optional) ----------------- */\n                case 'users.list':\n                    $this->guardAdmin();\n                    echo json_encode($this->model('User')->all());\n                    break;\n\n                case 'users.setAdmin':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    echo json_encode(['ok'=>$this->model('User')->setAdmin((int)$in['id'], (int)$in['is_admin'])]);\n                    break;\n\n                default:\n                    echo json_encode(['error'=>'Unknown action']);\n            }\n        } catch (Throwable $e) {\n            http_response_code(500);\n            echo json_encode(['error'=>$e->getMessage()]);\n        }\n    }\n\n    /* ================= helpers ================= */\n\n    private function guardAdmin() {\n        if (!$this->isAdmin()) throw new Exception('Admin access required');\n    }\n\n    private function isAdmin(): bool {\n        return isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1;\n    }\n\n    private function json(): array {\n        return json_decode(file_get_contents('php://input'), true) ?: [];\n    }\n\n    /** Shared roles fetcher */\n    private function getActiveRoles(): array {\n        $db = db_connect();\n        $stmt = $db->query(\"SELECT id, name FROM roles WHERE is_active = 1 ORDER BY name ASC\");\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    /** Old direct roles endpoint kept for compatibility */\n    public function listRoles() {\n        if (empty($_SESSION['auth'])) {\n            http_response_code(401);\n            header('Content-Type: application/json; charset=utf-8');\n            echo json_encode(['error' => 'Auth required']);\n            return;\n        }\n        header('Content-Type: application/json; charset=utf-8');\n        echo json_encode($this->getActiveRoles());\n        exit;\n    }\n\n    /** Map the logged-in user to an employees row, using several strategies */\n    private function resolveEmployeeForCurrentUser(): ?array {\n        $user = $this->currentUserRow();\n        if (!$user) return null;\n\n        // 1) direct foreign key (if exists)\n        $emp = $this->Employee->findByUserId((int)$user['id']);\n        if ($emp) return $emp;\n\n        // 2) email match\n        if (!empty($user['email'])) {\n            $emp = $this->Employee->findByEmail(trim($user['email']));\n            if ($emp) return $emp;\n        }\n\n        // 3) name match\n        $candidates = [];\n        if (!empty($user['full_name'])) $candidates[] = $user['full_name'];\n        if (!empty($user['username']))  $candidates[] = $user['username'];\n        foreach ($candidates as $n) {\n            $emp = $this->Employee->findByName(trim($n));\n            if ($emp) return $emp;\n        }\n        return null;\n    }\n\n    /** Safer users lookup: works even if users.email column doesn’t exist */\n    private function currentUserRow(): ?array {\n        $uid = (int)($_SESSION['id'] ?? 0);\n        if (!$uid) return null;\n        $db = db_connect();\n\n        // Try selecting email; if the column doesn't exist, fall back without it.\n        try {\n            $stmt = $db->prepare(\"SELECT id, username, full_name, email FROM users WHERE id = :id\");\n            $stmt->execute([':id' => $uid]);\n            $row = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;\n        } catch (Throwable $e) {\n            $stmt = $db->prepare(\"SELECT id, username, full_name FROM users WHERE id = :id\");\n            $stmt->execute([':id' => $uid]);\n            $row = $stmt->fetch(PDO::FETCH_ASSOC) ?: null;\n            if ($row) $row['email'] = null; // keep a consistent shape\n        }\n\n        return $row;\n    }\n}\n","size_bytes":13397},"app/controllers/secret.php":{"content":"<?php\n\nclass Secret extends Controller {\n\n    public function index() {\t\t\n\t    $this->view('secret/index');\n\t    die;\n    }\n\n}","size_bytes":126},"app/controllers/signup.php":{"content":"<?php\nclass Signup extends Controller\n{\n    public function index()\n    {\n        $this->view('Signup/index');\n    }\n\n    public function register()\n    {\n        if ($_SERVER['REQUEST_METHOD'] !== 'POST') {\n            header(\"Location: /signup\");\n            exit();\n        }\n\n        $username = trim($_POST['username']);\n        $password = trim($_POST['password']);\n        $confirm  = trim($_POST['confirm']);\n\n        if ($password !== $confirm) {\n            $_SESSION['signup_error'] = \"Passwords do not match.\";\n            header(\"Location: /signup\");\n            exit();\n        }\n\n        $userModel = $this->model('User');\n        $result    = $userModel->create_user($username, $password);\n\n        if ($result === \"Account created successfully.\") {\n            $_SESSION['message'] = $result;\n            header(\"Location: /login\");\n            exit();\n        }\n\n        $_SESSION['signup_error'] = $result;\n        header(\"Location: /signup\");\n        exit();\n    }\n}\n","size_bytes":987},"app/controllers/team.php":{"content":"<?php\n// app/controllers/Team.php\nclass Team extends Controller\n{\n    private PDO $db;\n\n    public function __construct() {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n        if (empty($_SESSION['auth'])) { header('Location: /login'); exit; }\n        $this->db = db_connect();\n        $this->ensureTables();\n    }\n\n    /* GET /team */\n    public function index() {\n        $this->view('team/index');\n    }\n\n    /* JSON API: /team/api?a=... */\n    public function api() {\n        if (empty($_SESSION['auth'])) {\n            http_response_code(401);\n            header('Content-Type: application/json; charset=utf-8');\n            echo json_encode(['error'=>'Auth required']);\n            return;\n        }\n\n        header('Content-Type: application/json; charset=utf-8');\n        $a = $_GET['a'] ?? '';\n\n        try {\n            switch ($a) {\n\n                case 'bootstrap': // roster + options\n                    echo json_encode([\n                        'roster' => $this->roster(),\n                        'departments' => $this->departments(),  // for optional UI use\n                        'roles' => $this->roles(),\n                        'is_admin' => $this->isAdmin(),\n                    ]);\n                    break;\n\n                /* ===== HIRE ===== */\n                case 'hire':\n                    $this->guardAdmin();\n                    $in = $this->json();\n\n                    $username  = trim($in['username'] ?? '');\n                    $full_name = trim($in['full_name'] ?? '');\n                    $email     = trim($in['email'] ?? '');\n                    $phone     = trim($in['phone'] ?? '');\n                    $role      = trim($in['role_title'] ?? '');\n                    $wage      = (float)($in['wage'] ?? 0);\n                    $rate      = in_array(($in['rate'] ?? 'hourly'), ['hourly','salary']) ? $in['rate'] : 'hourly';\n                    $is_admin  = (int)($in['is_admin'] ?? 0);\n                    $start_dt  = trim($in['start_date'] ?? '') ?: date('Y-m-d');\n\n                    if ($username === '') throw new Exception('Username is required');\n\n                    // 1) Create user\n                    //    - If password provided, use it, else generate random and force reset later if you want.\n                    $password  = $in['password'] ?? bin2hex(random_bytes(6));\n                    $phash     = password_hash($password, PASSWORD_BCRYPT);\n\n                    // Unique username\n                    $stmt = $this->db->prepare(\"SELECT id FROM users WHERE username=:u LIMIT 1\");\n                    $stmt->execute([':u'=>$username]);\n                    if ($stmt->fetchColumn()) throw new Exception('Username already exists');\n\n                    $this->db->prepare(\"\n                        INSERT INTO users (username, full_name, password, is_admin)\n                        VALUES (:u, NULLIF(:fn,''), :p, :adm)\n                    \")->execute([\n                        ':u'=>$username, ':fn'=>$full_name, ':p'=>$phash, ':adm'=>$is_admin\n                    ]);\n                    $user_id = (int)$this->db->lastInsertId();\n\n                    // 2) Upsert/Insert employee row for that user\n                    $this->db->prepare(\"\n                        INSERT INTO employees (\n                            user_id, name, email, phone, role_title, wage, rate,\n                            start_date, is_active, eligible_for_rehire\n                        ) VALUES (:uid, NULLIF(:n,''), NULLIF(:e,''), NULLIF(:ph,''), NULLIF(:r,''),\n                                  :wage, :rate, :sd, 1, 1)\n                        ON DUPLICATE KEY UPDATE\n                            name = VALUES(name),\n                            email = VALUES(email),\n                            phone = VALUES(phone),\n                            role_title = VALUES(role_title),\n                            wage = VALUES(wage),\n                            rate = VALUES(rate),\n                            start_date = VALUES(start_date),\n                            is_active = 1,\n                            terminated_at = NULL,\n                            termination_reason = NULL,\n                            termination_note = NULL,\n                            eligible_for_rehire = 1\n                    \")->execute([\n                        ':uid'=>$user_id, ':n'=>$full_name, ':e'=>$email, ':ph'=>$phone,\n                        ':r'=>$role, ':wage'=>$wage, ':rate'=>$rate, ':sd'=>$start_dt\n                    ]);\n\n                    echo json_encode([\n                        'ok'=>true,\n                        'user_id'=>$user_id,\n                        'temp_password' => $password   // show once if you want to display it\n                    ]);\n                    break;\n\n                /* ===== TERMINATE ===== */\n                case 'terminate':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $user_id   = (int)($in['user_id'] ?? 0);\n                    $reason    = trim($in['reason'] ?? '');\n                    $note      = trim($in['note'] ?? '');\n                    $term_dt   = trim($in['termination_date'] ?? date('Y-m-d'));\n                    $rehire_ok = (int)($in['eligible_for_rehire'] ?? 1);\n                    if ($user_id <= 0) throw new Exception('user_id required');\n\n                    $this->db->prepare(\"\n                        UPDATE employees\n                           SET is_active = 0,\n                               terminated_at = :td,\n                               termination_reason = NULLIF(:r,''),\n                               termination_note   = NULLIF(:n,''),\n                               eligible_for_rehire = :ok\n                         WHERE user_id = :uid\n                    \")->execute([\n                        ':td'=>$term_dt, ':r'=>$reason, ':n'=>$note, ':ok'=>$rehire_ok, ':uid'=>$user_id\n                    ]);\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* Rehire/reactivate an employee */\n                case 'rehire':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $user_id  = (int)($in['user_id'] ?? 0);\n                    $start_dt = trim($in['start_date'] ?? date('Y-m-d'));\n                    if ($user_id <= 0) throw new Exception('user_id required');\n\n                    $this->db->prepare(\"\n                        UPDATE employees\n                           SET is_active = 1,\n                               start_date = :sd,\n                               terminated_at = NULL,\n                               termination_reason = NULL,\n                               termination_note   = NULL,\n                               eligible_for_rehire = 1\n                         WHERE user_id = :uid\n                    \")->execute([':sd'=>$start_dt, ':uid'=>$user_id]);\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* Update quick fields (role, wage, rate, access level) */\n                case 'update':\n                    $this->guardAdmin();\n                    $in = $this->json();\n                    $user_id = (int)($in['user_id'] ?? 0);\n                    if ($user_id <= 0) throw new Exception('user_id required');\n\n                    // Employees table updates\n                    $role = isset($in['role_title']) ? trim($in['role_title']) : null;\n                    $wage = isset($in['wage']) ? (float)$in['wage'] : null;\n                    $rate = isset($in['rate']) && in_array($in['rate'], ['hourly','salary']) ? $in['rate'] : null;\n\n                    if ($role !== null || $wage !== null || $rate !== null) {\n                        $this->db->prepare(\"\n                            UPDATE employees\n                               SET role_title = COALESCE(NULLIF(:r,''), role_title),\n                                   wage       = COALESCE(:w, wage),\n                                   rate       = COALESCE(:rate, rate)\n                             WHERE user_id = :uid\n                        \")->execute([\n                            ':r'=>$role, ':w'=>$wage, ':rate'=>$rate, ':uid'=>$user_id\n                        ]);\n                    }\n\n                    // Access level (users.is_admin)\n                    if (isset($in['is_admin'])) {\n                        $is_admin = (int)$in['is_admin'];\n                        $this->db->prepare(\"UPDATE users SET is_admin=:a WHERE id=:id\")\n                                 ->execute([':a'=>$is_admin, ':id'=>$user_id]);\n                    }\n\n                    echo json_encode(['ok'=>true]);\n                    break;\n\n                /* Simple search list refresh */\n                case 'list':\n                    echo json_encode(['roster'=>$this->roster()]);\n                    break;\n\n                default:\n                    echo json_encode(['error'=>'Unknown action']);\n            }\n        } catch (Throwable $e) {\n            http_response_code(500);\n            echo json_encode(['error'=>$e->getMessage()]);\n        }\n    }\n\n    /* ===== Helpers ===== */\n\n    private function isAdmin(): bool {\n        return isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1;\n    }\n    private function guardAdmin(): void {\n        if (!$this->isAdmin()) throw new Exception('Admin access required');\n    }\n    private function json(): array {\n        return json_decode(file_get_contents('php://input'), true) ?: [];\n    }\n\n    private function roster(): array {\n        // Join users + employees; show active first\n        $sql = \"\n            SELECT \n                u.id            AS user_id,\n                COALESCE(NULLIF(u.full_name,''), u.username) AS name,\n                u.username,\n                e.email,\n                e.phone,\n                COALESCE(e.role_title, '') AS role_title,\n                COALESCE(e.wage, 0) AS wage,\n                COALESCE(e.rate, 'hourly') AS rate,\n                COALESCE(e.start_date, '') AS start_date,\n                COALESCE(e.terminated_at, '') AS terminated_at,\n                COALESCE(e.termination_reason, '') AS termination_reason,\n                COALESCE(e.termination_note, '')   AS termination_note,\n                COALESCE(e.eligible_for_rehire, 1) AS eligible_for_rehire,\n                COALESCE(e.is_active, 1) AS is_active,\n                u.is_admin\n            FROM users u\n            LEFT JOIN employees e ON e.user_id = u.id\n            ORDER BY is_active DESC, name ASC\n        \";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function roles(): array {\n        return $this->db->query(\"SELECT id, name FROM roles WHERE COALESCE(is_active,1)=1 ORDER BY name ASC\")->fetchAll(PDO::FETCH_ASSOC);\n    }\n    private function departments(): array {\n        return $this->db->query(\"SELECT id, name FROM departments WHERE COALESCE(is_active,1)=1 ORDER BY name ASC\")->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    private function ensureTables(): void {\n        // USERS already exists in your app.\n\n        // EMPLOYEES base\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS employees (\n                id INT AUTO_INCREMENT PRIMARY KEY,\n                user_id INT UNIQUE,\n                name VARCHAR(150),\n                email VARCHAR(250),\n                phone VARCHAR(50),\n                role_title VARCHAR(100),\n                wage DECIMAL(10,2) DEFAULT 0,\n                rate ENUM('hourly','salary') DEFAULT 'hourly',\n                start_date DATE NULL,\n                is_active TINYINT DEFAULT 1,\n                terminated_at DATE NULL,\n                termination_reason VARCHAR(150) NULL,\n                termination_note TEXT NULL,\n                eligible_for_rehire TINYINT DEFAULT 1,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                CONSTRAINT fk_emp_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n        \");\n\n        // Safe adds for columns that might not be present in an older schema\n        $safeAdds = [\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS user_id INT UNIQUE\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS phone VARCHAR(50)\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS wage DECIMAL(10,2) DEFAULT 0\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS rate ENUM('hourly','salary') DEFAULT 'hourly'\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS start_date DATE NULL\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS terminated_at DATE NULL\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS termination_reason VARCHAR(150) NULL\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS termination_note TEXT NULL\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS eligible_for_rehire TINYINT DEFAULT 1\",\n          \"ALTER TABLE employees ADD COLUMN IF NOT EXISTS is_active TINYINT DEFAULT 1\",\n          \"ALTER TABLE employees ADD CONSTRAINT IF NOT EXISTS fk_emp_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\"\n        ];\n        foreach ($safeAdds as $sql) { try { $this->db->exec($sql); } catch (Throwable $e) {} }\n    }\n}\n","size_bytes":13276},"app/core/App.php":{"content":"<?php\n/**\n * Minimal front controller / router\n * - Strips query string from the method segment (so /schedule/api?a=... works)\n * - Defaults to Home@index when no controller/method\n */\nclass App\n{\n    protected $controller = 'home';\n    protected $method     = 'index';\n    protected $params     = [];\n\n        public function __construct()\n        {\n            // === Quick API hook for roles ===\n            if (isset($_GET['a']) && $_GET['a'] === 'roles.list') {\n                require_once 'app/controllers/schedule.php';\n                (new Schedule)->listRoles();\n                exit;\n            }\n\n            if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n\n        $url = $this->parseUrl(); // ['schedule','api'] for /schedule/api?a=...\n\n        // Controller\n        if (!empty($url[0])) {\n            $this->controller = strtolower($url[0]);\n            unset($url[0]);\n        }\n\n        $ctrlPath = 'app/controllers/' . $this->controller . '.php';\n        if (!is_file($ctrlPath)) {\n            // fallback\n            $this->controller = 'home';\n            $ctrlPath = 'app/controllers/home.php';\n        }\n        require_once $ctrlPath;\n        $this->controller = new $this->controller;\n\n        // Method (strip ?query from segment)\n        if (!empty($url[1])) {\n            $candidate = explode('?', $url[1], 2)[0];\n            if (method_exists($this->controller, $candidate)) {\n                $this->method = $candidate;\n                unset($url[1]);\n            }\n        }\n\n        // Params\n        $this->params = $url ? array_values($url) : [];\n\n        call_user_func_array([$this->controller, $this->method], $this->params);\n    }\n\n    private function parseUrl(): array\n    {\n        $path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH) ?? '/';\n        $path = trim($path, '/');\n        return $path === '' ? [] : explode('/', $path);\n    }\n}\n","size_bytes":1900},"app/core/Controller.php":{"content":"<?php\n\nclass Controller {\n\n    public function model ($model) {\n        require_once 'app/models/' .$model . '.php';\n        return new $model();\n    }\n\n    public function view ($view, $data = []) {\n        // Extract data array so variables are available to the view\n        extract($data);\n        require_once 'app/views/' . $view .'.php';\n    }\n\n}\n","size_bytes":353},"app/core/config.php":{"content":"<?php\r\n\r\ndefine('VERSION', '0.7.0');\r\n\r\ndefine('DS', DIRECTORY_SEPARATOR);\r\ndefine('ROOT', dirname(__DIR__));\r\ndefine('APPS', ROOT . DS . 'app');\r\ndefine('CORE', ROOT . DS . 'core');\r\ndefine('LIBS', ROOT . DS . 'lib');\r\ndefine('MODELS', ROOT . DS . 'models');\r\ndefine('VIEWS', ROOT . DS . 'views');\r\ndefine('CONTROLLERS', ROOT . DS . 'controllers');\r\ndefine('LOGS', ROOT . DS . 'logs');\r\ndefine('FILES', ROOT . DS. 'files');\r\n\n// ---------------------  NEW DATABASE TABLE -------------------------\ndefine('DB_HOST',         'e7eh7.h.filess.io');\ndefine('DB_USER',         'TimeWise_bushnearby'); \ndefine('DB_PASS',         $_ENV['DB_PASS']);\ndefine('DB_DATABASE',     'TimeWise_bushnearby');\ndefine('DB_PORT',         '3305');\n\n\n","size_bytes":729},"app/models/Department.php":{"content":"<?php\n\nclass Department\n{\n    private PDO $db;\n\n    public function __construct()\n    {\n        $this->db = db_connect();\n        $this->ensureAuxTables();\n    }\n\n    /** Create helper tables if they don't exist */\n    private function ensureAuxTables(): void\n    {\n        // roles\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS roles (\n                id INT AUTO_INCREMENT PRIMARY KEY,\n                name VARCHAR(120) UNIQUE,\n                is_active TINYINT DEFAULT 1,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n        \");\n\n        // departments\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS departments (\n                id INT AUTO_INCREMENT PRIMARY KEY,\n                name VARCHAR(150) UNIQUE,\n                is_active TINYINT DEFAULT 1,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n        \");\n\n        // department_roles (many-to-many)\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS department_roles (\n                department_id INT NOT NULL,\n                role_id INT NOT NULL,\n                PRIMARY KEY (department_id, role_id),\n                CONSTRAINT fk_dr_dept FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE,\n                CONSTRAINT fk_dr_role FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE\n            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n        \");\n\n        // department_managers (users as managers)\n        $this->db->exec(\"\n            CREATE TABLE IF NOT EXISTS department_managers (\n                department_id INT NOT NULL,\n                user_id INT NOT NULL,\n                PRIMARY KEY (department_id, user_id),\n                CONSTRAINT fk_dm_dept FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE\n            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n        \");\n    }\n\n    /* ===== Read ===== */\n\n    public function listWithCounts(): array\n    {\n        $sql = \"\n            SELECT d.id, d.name,\n                   COALESCE(dr.role_count, 0) AS role_count\n            FROM departments d\n            LEFT JOIN (\n                SELECT department_id, COUNT(*) AS role_count\n                FROM department_roles\n                GROUP BY department_id\n            ) dr ON dr.department_id = d.id\n            WHERE d.is_active = 1\n            ORDER BY d.name ASC\n        \";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function rolesFor(int $deptId): array\n    {\n        $stmt = $this->db->prepare(\"\n            SELECT r.id, r.name\n            FROM department_roles dr\n            JOIN roles r ON r.id = dr.role_id\n            WHERE dr.department_id = :id\n            ORDER BY r.name ASC\n        \");\n        $stmt->execute([':id'=>$deptId]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function managersFor(int $deptId): array\n    {\n        // Users table: id, username, full_name, is_admin, ...\n        $stmt = $this->db->prepare(\"\n            SELECT u.id, COALESCE(NULLIF(TRIM(u.full_name),''), u.username) AS label\n            FROM department_managers dm\n            JOIN users u ON u.id = dm.user_id\n            WHERE dm.department_id = :id\n            ORDER BY label ASC\n        \");\n        $stmt->execute([':id'=>$deptId]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function allRoles(): array\n    {\n        return $this->db->query(\"SELECT id, name FROM roles WHERE is_active = 1 ORDER BY name ASC\")\n                        ->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function allUsersMin(): array\n    {\n        $sql = \"SELECT id, COALESCE(NULLIF(TRIM(full_name),''), username) AS label FROM users ORDER BY label ASC\";\n        return $this->db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    /* ===== Departments ===== */\n\n    public function create(string $name): int\n    {\n        if ($name === '') throw new Exception('Department name required');\n        $stmt = $this->db->prepare(\"INSERT INTO departments (name, is_active) VALUES (:n, 1)\");\n        $stmt->execute([':n'=>$name]);\n        return (int)$this->db->lastInsertId();\n    }\n\n    public function rename(int $id, string $name): bool\n    {\n        if ($id <= 0 || $name === '') return false;\n        $stmt = $this->db->prepare(\"UPDATE departments SET name = :n WHERE id = :id\");\n        return $stmt->execute([':n'=>$name, ':id'=>$id]);\n    }\n\n    public function delete(int $id): bool\n    {\n        if ($id <= 0) return false;\n        $stmt = $this->db->prepare(\"DELETE FROM departments WHERE id = :id\");\n        return $stmt->execute([':id'=>$id]);\n    }\n\n    /* ===== Roles in Dept ===== */\n\n    public function ensureRole(string $name): int\n    {\n        if ($name === '') throw new Exception('Role name required');\n        $sel = $this->db->prepare(\"SELECT id FROM roles WHERE name = :n\");\n        $sel->execute([':n'=>$name]);\n        $id = (int)$sel->fetchColumn();\n        if ($id) return $id;\n\n        $ins = $this->db->prepare(\"INSERT INTO roles (name, is_active) VALUES (:n, 1)\");\n        $ins->execute([':n'=>$name]);\n        return (int)$this->db->lastInsertId();\n    }\n\n    public function attachRole(int $deptId, int $roleId): bool\n    {\n        if ($deptId <= 0 || $roleId <= 0) return false;\n        $stmt = $this->db->prepare(\"\n            INSERT IGNORE INTO department_roles (department_id, role_id)\n            VALUES (:d, :r)\n        \");\n        return $stmt->execute([':d'=>$deptId, ':r'=>$roleId]);\n    }\n\n    public function detachRole(int $deptId, int $roleId): bool\n    {\n        $stmt = $this->db->prepare(\"\n            DELETE FROM department_roles\n            WHERE department_id = :d AND role_id = :r\n        \");\n        return $stmt->execute([':d'=>$deptId, ':r'=>$roleId]);\n    }\n\n    /* ===== Managers ===== */\n\n    public function addManager(int $deptId, int $userId): bool\n    {\n        if ($deptId <= 0 || $userId <= 0) return false;\n        $stmt = $this->db->prepare(\"\n            INSERT IGNORE INTO department_managers (department_id, user_id)\n            VALUES (:d, :u)\n        \");\n        return $stmt->execute([':d'=>$deptId, ':u'=>$userId]);\n    }\n\n    public function removeManager(int $deptId, int $userId): bool\n    {\n        $stmt = $this->db->prepare(\"\n            DELETE FROM department_managers\n            WHERE department_id = :d AND user_id = :u\n        \");\n        return $stmt->execute([':d'=>$deptId, ':u'=>$userId]);\n    }\n}\n","size_bytes":6564},"app/models/Employee.php":{"content":"<?php\nclass Employee\n{\n    /* ===== existing CRUD you already had ===== */\n\n    public function all(): array\n    {\n        $db = db_connect();\n        // employees(id, name, email, role_title, is_active, created_at)\n        $sql = \"\n            SELECT \n                id,\n                name,\n                email,\n                role_title,\n                is_active,\n                created_at\n            FROM employees\n            ORDER BY name ASC\n        \";\n        return $db->query($sql)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function create(string $name, ?string $email, string $roleTitle = 'Staff'): int\n    {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            INSERT INTO employees (name, email, role_title, is_active)\n            VALUES (:name, :email, :role_title, 1)\n        \");\n        $stmt->execute([\n            ':name'       => $name,\n            ':email'      => $email,\n            ':role_title' => $roleTitle\n        ]);\n        return (int)$db->lastInsertId();\n    }\n\n    public function update(int $id, array $in): bool\n    {\n        $db   = db_connect();\n        $sets = [];\n        $args = [':id' => $id];\n\n        if (isset($in['name']))       { $sets[] = 'name = :name';               $args[':name']       = $in['name']; }\n        if (isset($in['email']))      { $sets[] = 'email = :email';             $args[':email']      = $in['email']; }\n        if (isset($in['role']) || isset($in['role_title'])) {\n            $role = $in['role_title'] ?? $in['role'];\n            $sets[] = 'role_title = :role_title';  $args[':role_title'] = $role;\n        }\n        if (isset($in['is_active']))  { $sets[] = 'is_active = :is_active';     $args[':is_active']  = (int)$in['is_active']; }\n\n        if (!$sets) return true;\n\n        $sql = \"UPDATE employees SET \".implode(', ', $sets).\" WHERE id = :id\";\n        $stmt = $db->prepare($sql);\n        return $stmt->execute($args);\n    }\n\n    public function delete(int $id): bool\n    {\n        $db = db_connect();\n        $stmt = $db->prepare(\"DELETE FROM employees WHERE id = :id\");\n        return $stmt->execute([':id'=>$id]);\n    }\n\n    /* ===== lightweight lookup helpers for “My Shifts” mapping =====\n       Only one of these needs to succeed for resolveEmployeeForCurrentUser() */\n    public function findByUserId(int $userId): ?array {\n        $db = db_connect();\n        // This works if your employees table has a user_id column. If not, query returns no rows.\n        $stmt = $db->prepare(\"SELECT * FROM employees WHERE user_id = :uid LIMIT 1\");\n        try {\n            $stmt->execute([':uid'=>$userId]);\n            $row = $stmt->fetch(PDO::FETCH_ASSOC);\n            return $row ?: null;\n        } catch (Throwable $e) {\n            // Column may not exist; ignore and fallback to other strategies\n            return null;\n        }\n    }\n\n    public function findByEmail(string $email): ?array {\n        if ($email === '') return null;\n        $db = db_connect();\n        $stmt = $db->prepare(\"SELECT * FROM employees WHERE LOWER(email) = LOWER(:e) LIMIT 1\");\n        $stmt->execute([':e'=>$email]);\n        $row = $stmt->fetch(PDO::FETCH_ASSOC);\n        return $row ?: null;\n    }\n\n    public function findByName(string $name): ?array {\n        if ($name === '') return null;\n        $db = db_connect();\n        $stmt = $db->prepare(\"SELECT * FROM employees WHERE TRIM(LOWER(name)) = TRIM(LOWER(:n)) LIMIT 1\");\n        $stmt->execute([':n'=>$name]);\n        $row = $stmt->fetch(PDO::FETCH_ASSOC);\n        return $row ?: null;\n    }\n}\n","size_bytes":3548},"app/models/Note.php":{"content":"<?php\n\nclass Note {\n    public function __construct() {}\n\n    // fetch all non-deleted notes for this user\n    public function getNotesByUser($user_id) {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            SELECT *\n              FROM notes\n             WHERE user_id = :user_id\n               AND deleted = 0\n          ORDER BY created_at DESC\n        \");\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        $stmt->execute();\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    // fetch one note by id (and user)\n    public function getNoteById($id, $user_id) {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            SELECT *\n              FROM notes\n             WHERE id = :id\n               AND user_id = :user_id\n               AND deleted = 0\n        \");\n        $stmt->bindValue(':id', $id, PDO::PARAM_INT);\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        $stmt->execute();\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    }\n\n    // create a new note\n    public function createNote($user_id, $subject, $content = '') {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            INSERT INTO notes (user_id, subject, content, created_at)\n            VALUES (:user_id, :subject, :content, NOW())\n        \");\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        $stmt->bindValue(':subject', $subject, PDO::PARAM_STR);\n        $stmt->bindValue(':content', $content, PDO::PARAM_STR);\n        return $stmt->execute();\n    }\n\n    // update an existing note\n    public function updateNote($id, $user_id, $subject, $content = '') {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            UPDATE notes\n               SET subject = :subject,\n                   content = :content\n             WHERE id = :id\n               AND user_id = :user_id\n        \");\n        $stmt->bindValue(':id', $id, PDO::PARAM_INT);\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        $stmt->bindValue(':subject', $subject, PDO::PARAM_STR);\n        $stmt->bindValue(':content', $content, PDO::PARAM_STR);\n        return $stmt->execute();\n    }\n\n    // soft-delete\n    public function deleteNote($id, $user_id) {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            UPDATE notes\n               SET deleted = 1\n             WHERE id = :id\n               AND user_id = :user_id\n        \");\n        $stmt->bindValue(':id', $id, PDO::PARAM_INT);\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        return $stmt->execute();\n    }\n\n    // toggle completed flag\n    public function toggleCompleted($id, $user_id) {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            UPDATE notes\n               SET completed = NOT completed\n             WHERE id = :id\n               AND user_id = :user_id\n        \");\n        $stmt->bindValue(':id', $id, PDO::PARAM_INT);\n        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);\n        return $stmt->execute();\n    }\n}\n","size_bytes":3040},"app/models/ScheduleWeek.php":{"content":"<?php\nclass ScheduleWeek\n{\n    /** Normalize any date to its Monday (YYYY-MM-DD). */\n    public static function mondayOf(string $dateYmd): string\n    {\n        $d = new DateTime($dateYmd);\n        // PHP: 1=Mon..7=Sun\n        $dow = (int)$d->format('N');\n        $d->modify('-'.($dow-1).' days');\n        return $d->format('Y-m-d');\n    }\n\n    /** Ensure a row exists in schedule_weeks and return {week_start, published}. */\n    public function status(string $dateYmd): array\n    {\n        $db  = db_connect();\n        $wk  = self::mondayOf($dateYmd);\n\n        // upsert\n        $db->prepare(\"\n            INSERT INTO schedule_weeks (week_start, published)\n            VALUES (:w, 0)\n            ON DUPLICATE KEY UPDATE week_start = week_start\n        \")->execute([':w'=>$wk]);\n\n        $stmt = $db->prepare(\"SELECT week_start, published FROM schedule_weeks WHERE week_start = :w\");\n        $stmt->execute([':w'=>$wk]);\n        $row = $stmt->fetch(PDO::FETCH_ASSOC) ?: ['week_start'=>$wk,'published'=>0];\n\n        return [\n            'week_start' => $row['week_start'],\n            'published'  => (int)$row['published']\n        ];\n    }\n\n    public function setPublished(string $dateYmd, int $published): bool\n    {\n        $db = db_connect();\n        $wk = self::mondayOf($dateYmd);\n        $stmt = $db->prepare(\"\n            INSERT INTO schedule_weeks (week_start, published)\n            VALUES (:w, :p)\n            ON DUPLICATE KEY UPDATE published = VALUES(published)\n        \");\n        return $stmt->execute([':w'=>$wk, ':p'=>$published ? 1 : 0]);\n    }\n}\n","size_bytes":1564},"app/models/Shift.php":{"content":"<?php\nclass Shift\n{\n    /** Return all shifts within week window, joined with employee info. */\n    public function forWeek(string $mondayYmd): array\n    {\n        $db = db_connect();\n        $monday = new DateTime($mondayYmd);\n        $sunday = clone $monday; $sunday->modify('+6 day');\n\n        $stmt = $db->prepare(\"\n            SELECT \n                s.id,\n                s.employee_id,\n                s.start_dt,\n                s.end_dt,\n                s.notes,\n                s.status,\n                e.name           AS employee_name,\n                e.role_title     AS employee_role\n            FROM shifts s\n            JOIN employees e ON e.id = s.employee_id\n            WHERE DATE(s.start_dt) BETWEEN :monday AND :sunday\n            ORDER BY e.name ASC, s.start_dt ASC\n        \");\n        $stmt->execute([\n            ':monday' => $monday->format('Y-m-d'),\n            ':sunday' => $sunday->format('Y-m-d')\n        ]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function forWeekEmployee(string $mondayYmd, int $employeeId): array\n    {\n        $db = db_connect();\n        $monday = new DateTime($mondayYmd);\n        $sunday = clone $monday; $sunday->modify('+6 day');\n\n        $stmt = $db->prepare(\"\n            SELECT id, employee_id, start_dt, end_dt, notes, status\n            FROM shifts\n            WHERE employee_id = :emp\n              AND DATE(start_dt) BETWEEN :monday AND :sunday\n            ORDER BY start_dt ASC\n        \");\n        $stmt->execute([\n            ':emp' => $employeeId,\n            ':monday' => $monday->format('Y-m-d'),\n            ':sunday' => $sunday->format('Y-m-d')\n        ]);\n        return $stmt->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function get(int $id): ?array\n    {\n        $db = db_connect();\n        $stmt = $db->prepare(\"SELECT * FROM shifts WHERE id = :id\");\n        $stmt->execute([':id'=>$id]);\n        $row = $stmt->fetch(PDO::FETCH_ASSOC);\n        return $row ?: null;\n    }\n\n    public function create(int $employeeId, string $startDt, string $endDt, ?string $notes): int\n    {\n        $db = db_connect();\n        $stmt = $db->prepare(\"\n            INSERT INTO shifts (employee_id, start_dt, end_dt, notes, status)\n            VALUES (:emp, :start_dt, :end_dt, :notes, 'Scheduled')\n        \");\n        $stmt->execute([\n            ':emp'      => $employeeId,\n            ':start_dt' => $startDt,\n            ':end_dt'   => $endDt,\n            ':notes'    => $notes\n        ]);\n        return (int)$db->lastInsertId();\n    }\n\n    public function delete(int $id): bool\n    {\n        $db = db_connect();\n        $stmt = $db->prepare(\"DELETE FROM shifts WHERE id = :id\");\n        return $stmt->execute([':id'=>$id]);\n    }\n\n    public function deleteForWeek(string $mondayYmd): int\n    {\n        $db = db_connect();\n        $monday = new DateTime($mondayYmd);\n        $sunday = clone $monday; $sunday->modify('+6 day');\n        $stmt = $db->prepare(\"DELETE FROM shifts WHERE DATE(start_dt) BETWEEN :m AND :s\");\n        $stmt->execute([':m'=>$monday->format('Y-m-d'), ':s'=>$sunday->format('Y-m-d')]);\n        return $stmt->rowCount();\n    }\n\n    public function deleteForWeekEmployee(string $mondayYmd, int $employeeId, ?array $days = null): int\n    {\n        $db = db_connect();\n        $monday = new DateTime($mondayYmd);\n        $sunday = clone $monday; $sunday->modify('+6 day');\n\n        // Optional day filtering\n        $extra = '';\n        $params = [\n            ':emp' => $employeeId,\n            ':m' => $monday->format('Y-m-d'),\n            ':s' => $sunday->format('Y-m-d')\n        ];\n        if ($days && count($days)) {\n            // Build list of target dates inside week for those days\n            $dates = [];\n            foreach ($days as $dow) {\n                $d = clone $monday; $d->modify(($dow===0?'+6 day':'+' . ($dow-1) . ' day'));\n                $dates[] = $d->format('Y-m-d');\n            }\n            $in = implode(',', array_fill(0, count($dates), '?'));\n            $extra = \" AND DATE(start_dt) IN ($in)\";\n            $params = array_merge([$employeeId, $monday->format('Y-m-d'), $sunday->format('Y-m-d')], $dates);\n            $sql = \"DELETE FROM shifts WHERE employee_id = ? AND DATE(start_dt) BETWEEN ? AND ? AND DATE(start_dt) IN ($in)\";\n            $stmt = $db->prepare($sql);\n            $stmt->execute($params);\n            return $stmt->rowCount();\n        }\n\n        $stmt = $db->prepare(\"DELETE FROM shifts WHERE employee_id = :emp AND DATE(start_dt) BETWEEN :m AND :s\");\n        $stmt->execute($params);\n        return $stmt->rowCount();\n    }\n}\n","size_bytes":4589},"app/models/User.php":{"content":"<?php\n\nclass User {\n\n    public $username;\n    public $password;\n    public $auth = false;\n\n    public function __construct() {}\n\n    public function test () {\n        $db = db_connect();\n        $statement = $db->prepare(\"SELECT * FROM users;\");\n        $statement->execute();\n        $rows = $statement->fetch(PDO::FETCH_ASSOC);\n        return $rows;\n    }\n\n    public function authenticate($username, $password) {\n        if (session_status() !== PHP_SESSION_ACTIVE) session_start();\n\n        $username = strtolower(trim($username));\n        $db = db_connect();\n\n        // Count bad attempts in last 60s\n        $lockStmt = $db->prepare(\"\n            SELECT COUNT(*) AS bad_count, MAX(timestamp) AS last_bad\n            FROM login_logs\n            WHERE username = :u AND status = 'bad'\n              AND timestamp > DATE_SUB(NOW(), INTERVAL 60 SECOND)\n        \");\n        $lockStmt->bindValue(':u', $username);\n        $lockStmt->execute();\n        $lockInfo = $lockStmt->fetch(PDO::FETCH_ASSOC);\n\n        if (($lockInfo['bad_count'] ?? 0) >= 3) {\n            $elapsed = time() - strtotime($lockInfo['last_bad']);\n            $wait    = max(0, 60 - $elapsed);\n            $_SESSION['toast'] = ['type'=>'error','title'=>'Account Locked','message'=>\"Too many failed attempts. Try again in {$wait}s.\"];\n            $_SESSION['login_error'] = \"Too many failed attempts. Try again in {$wait}s.\";\n            header('Location: /login'); exit;\n        }\n\n        // Fetch user (include is_admin + full_name!)\n        $stmt = $db->prepare(\"\n            SELECT id, username, password, is_admin, full_name\n            FROM users\n            WHERE username = :u\n            LIMIT 1\n        \");\n        $stmt->bindValue(':u', $username);\n        $stmt->execute();\n        $row = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        $isGood = $row && password_verify($password, $row['password']);\n\n        // Log the attempt\n        $logStmt = $db->prepare(\"INSERT INTO login_logs (username, status) VALUES (:u, :s)\");\n        $logStmt->bindValue(':u', $username);\n        $logStmt->bindValue(':s', $isGood ? 'good' : 'bad');\n        $logStmt->execute();\n\n        if ($isGood) {\n            // Normalize session (IMPORTANT: set both id and user_id)\n            $_SESSION['auth']       = 1;\n            $_SESSION['id']         = (int)$row['id'];            // <-- needed by Schedule::currentUserRow()\n            $_SESSION['user_id']    = (int)$row['id'];            // keep if referenced elsewhere\n            $_SESSION['username']   = ucwords($row['username'] ?? $username);\n            $_SESSION['is_admin']   = (int)($row['is_admin'] ?? 0);\n            $_SESSION['full_name']  = $row['full_name'] ?? null;\n\n            // Optional debug\n            error_log(\"User {$username} logged in with admin status: \" . $_SESSION['is_admin']);\n\n            $_SESSION['toast'] = ['type'=>'success','title'=>'Welcome Back!','message'=>'You have successfully logged in.'];\n\n            // Intended URL support\n            if (!empty($_SESSION['intended_url'])) {\n                $intendedUrl = $_SESSION['intended_url'];\n                unset($_SESSION['intended_url']);\n                if (strpos($intendedUrl, '/') === 0 && !preg_match('/^\\/\\//', $intendedUrl)) {\n                    header('Location: ' . $intendedUrl); exit;\n                }\n            }\n            header('Location: /home'); exit;\n        }\n\n        $_SESSION['toast'] = ['type'=>'error','title'=>'Login Failed','message'=>'Invalid username or password.'];\n        $_SESSION['login_error'] = 'Invalid username or password.';\n        header('Location: /login'); exit;\n    }\n\n    public function create_user($username, $password)\n    {\n        $username = strtolower(trim($username));\n        $db = db_connect();\n\n        $stmt = $db->prepare(\"SELECT 1 FROM users WHERE username = :username\");\n        $stmt->bindValue(':username', $username);\n        $stmt->execute();\n        if ($stmt->fetch()) {\n            $_SESSION['toast'] = ['type'=>'error','title'=>'Registration Failed','message'=>'Username already taken.'];\n            return \"Username already taken.\";\n        }\n\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n        $insert = $db->prepare(\"INSERT INTO users (username, password) VALUES (:username, :password)\");\n        $insert->bindValue(':username', $username);\n        $insert->bindValue(':password', $hashedPassword);\n        if ($insert->execute()) {\n            $_SESSION['toast'] = ['type'=>'success','title'=>'Account Created!','message'=>'Your account has been created successfully. You can now log in.'];\n            return \"Account created successfully.\";\n        } else {\n            $_SESSION['toast'] = ['type'=>'error','title'=>'Registration Failed','message'=>'Error creating account. Please try again.'];\n            return \"Error creating account.\";\n        }\n    }\n}\n","size_bytes":4868},"app/views/Signup/index.php":{"content":"<?php require 'app/views/templates/headerPublic.php'; ?>\n\n<div class=\"container py-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-6 col-lg-4\">\n            <div class=\"card shadow\">\n                <div class=\"card-body p-4\">\n                    <h1 class=\"h4 text-center mb-4\">\n                        <i class=\"fas fa-user-plus text-primary me-2\"></i>\n                        Create Account\n                    </h1>\n\n                    <?php\n                    if (isset($_SESSION['signup_error'])) {\n                        echo \"<div class='alert alert-danger'>\" . $_SESSION['signup_error'] . \"</div>\";\n                        unset($_SESSION['signup_error']);\n                    }\n\n                    if (isset($_SESSION['message'])) {\n                        echo \"<div class='alert alert-success'>\" . $_SESSION['message'] . \"</div>\";\n                        unset($_SESSION['message']);\n                    }\n                    ?>\n\n                    <form action=\"/signup/register\" method=\"post\">\n                        <div class=\"mb-3\">\n                            <label for=\"username\" class=\"form-label\">Username:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"password\" class=\"form-label\">Password:</label>\n                            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"confirm\" class=\"form-label\">Confirm Password:</label>\n                            <input type=\"password\" class=\"form-control\" id=\"confirm\" name=\"confirm\" required>\n                        </div>\n\n                        <button type=\"submit\" class=\"btn btn-primary w-100\">\n                            <i class=\"fas fa-user-plus me-1\"></i>Create Account\n                        </button>\n                    </form>\n\n                    <div class=\"text-center mt-3\">\n                        <p class=\"mb-0\">\n                            Already have an account? \n                            <a href=\"/login\" class=\"text-decoration-none\">Sign in here</a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n","size_bytes":2503},"app/views/chat/index.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n<?php\nif (session_status() !== PHP_SESSION_ACTIVE) session_start();\n$userId   = (int)($_SESSION['id'] ?? 0);\n$userName = $_SESSION['username'] ?? ($_SESSION['full_name'] ?? 'User');\n$USERS    = isset($data['users']) ? $data['users'] : [];\n$ME       = isset($data['me']) ? (int)$data['me'] : 0;\n$CHAT_TOKEN = isset($data['chat_token']) ? $data['chat_token'] : '';\n?>\n<meta name=\"tw-user-id\" content=\"<?= $userId ?>\">\n<meta name=\"tw-user-name\" content=\"<?= htmlspecialchars($userName, ENT_QUOTES) ?>\">\n<meta name=\"tw-chat-token\" content=\"<?= htmlspecialchars($CHAT_TOKEN, ENT_QUOTES) ?>\">\n\n<style>\n.chat-wrap{background:#f8fafc;min-height:100vh;}\n.chat-app{display:grid;grid-template-columns:280px 1fr;gap:16px;}\n@media(max-width:992px){.chat-app{grid-template-columns:1fr}}\n.card{background:#fff;border-radius:.75rem;box-shadow:0 1px 3px rgba(0,0,0,.08)}\n.p-3{padding:1rem}.p-2{padding:.75rem}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:1rem}\n.section-title{font-weight:700;margin:8px 0}\n.list{max-height:72vh;overflow:auto}\n.item{display:flex;gap:.5rem;align-items:center;cursor:pointer;padding:.5rem;border-radius:.5rem}\n.item:hover{background:#f3f4f6}\n.item.active{background:#eef2ff;border:1px solid #c7d2fe}\n.badge{background:#eef2ff;border:1px solid #c7d2fe;color:#3730a3;border-radius:999px;padding:.1rem .5rem;font-size:.75rem}\n.header{display:flex;align-items:center;justify-content:space-between}\n.messages{height:60vh;overflow:auto;padding-right:.25rem}\n.msg{margin:.35rem 0;max-width:70%}\n.msg.you{margin-left:auto;text-align:right}\n.bubble{display:inline-block;padding:.5rem .7rem;border-radius:1rem;background:#eef2ff}\n.msg.you .bubble{background:#dcfce7}\n.meta{font-size:.75rem;color:#6b7280;margin-top:.15rem}\n.inputbar{display:flex;gap:.5rem}\n.inputbar input{flex:1;border:1px solid #d1d5db;border-radius:.5rem;padding:.5rem .65rem}\n.inputbar button{border:1px solid #d1d5db;border-radius:.5rem;padding:.5rem .9rem;background:#3b82f6;color:#fff}\n.modal{position:fixed;inset:0;background:rgba(0,0,0,.4);display:none;align-items:center;justify-content:center}\n.modal .box{background:#fff;border-radius:.75rem;min-width:320px;max-width:520px;padding:1rem}\n.modal.show{display:flex}\n</style>\n\n<div class=\"chat-wrap\">\n  <div class=\"container-fluid px-4 py-4\">\n    <div class=\"d-flex align-items-center justify-content-between mb-3\">\n      <div>\n        <div class=\"h1\">Chat</div>\n        <div class=\"sub\">Direct messages and group chats in real time</div>\n      </div>\n      <button id=\"btnNewGroup\" class=\"btn primary\">New group</button>\n    </div>\n\n    <div class=\"chat-app\">\n      <div class=\"card p-3\">\n        <div class=\"section-title\">People</div>\n        <div id=\"people\" class=\"list mb-3\">\n          <?php foreach ($USERS as $u): ?>\n            <div class=\"item\" data-uid=\"<?= (int)$u['id'] ?>\">\n              <span>👤</span>\n              <span><?= htmlspecialchars($u['label'], ENT_QUOTES) ?><?= (int)$u['id']===$ME ? ' (you)' : '' ?></span>\n            </div>\n          <?php endforeach; ?>\n        </div>\n\n        <div class=\"section-title\">Rooms</div>\n        <div id=\"rooms\" class=\"list\"></div>\n      </div>\n\n      <div class=\"card p-3\">\n        <div class=\"header mb-2\">\n          <div><strong id=\"roomTitle\">Pick a person or room</strong></div>\n          <div class=\"badge\" id=\"roomType\">—</div>\n        </div>\n\n        <div id=\"messages\" class=\"messages card p-2 mb-2\"></div>\n\n        <div class=\"inputbar\">\n          <input id=\"msgInput\" placeholder=\"Type a message…\" />\n          <button id=\"sendBtn\">Send</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id=\"groupModal\" class=\"modal\">\n  <div class=\"box\">\n    <div class=\"h5 mb-2\">Create group</div>\n    <input id=\"groupName\" class=\"form-control mb-2\" placeholder=\"Group name\" />\n    <div style=\"max-height:220px;overflow:auto;border:1px solid #eee;border-radius:.5rem;padding:.5rem\">\n      <?php foreach ($USERS as $u): if ((int)$u['id'] === $ME) continue; ?>\n        <label style=\"display:flex;gap:.5rem;align-items:center;margin:.25rem 0\">\n          <input type=\"checkbox\" class=\"grp-user\" value=\"<?= (int)$u['id'] ?>\" />\n          <span><?= htmlspecialchars($u['label'], ENT_QUOTES) ?></span>\n        </label>\n      <?php endforeach; ?>\n    </div>\n    <div class=\"d-flex gap-2 mt-3\">\n      <button id=\"createGroup\" class=\"btn primary\">Create</button>\n      <button id=\"closeGroup\" class=\"btn\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n\n<script src=\"https://cdn.socket.io/4.7.5/socket.io.min.js\"></script>\n<script>\n// --- define UID/UNAME/CHAT_TOKEN from meta BEFORE connecting ---\nconst UID   = Number(document.querySelector('meta[name=\"tw-user-id\"]')?.content || 0);\nconst UNAME = document.querySelector('meta[name=\"tw-user-name\"]')?.content || 'User';\nconst CHAT_TOKEN = document.querySelector('meta[name=\"tw-chat-token\"]')?.content || '';\n\n// DOM element references\nconst peopleEl = document.getElementById('people');\nconst roomsEl = document.getElementById('rooms');\nconst msgsEl = document.getElementById('messages');\nconst inputEl = document.getElementById('msgInput');\nconst titleEl = document.getElementById('roomTitle');\nconst typeEl = document.getElementById('roomType');\n\n// Current room state\nlet CURRENT_ROOM = null;\n\n  const isReplit = /\\.repl\\.co$|\\.replit\\.dev$/.test(location.hostname);\n  const NODE_PORT = 3001;\n  const nodeURL = isReplit\n    ? `${location.protocol}//${NODE_PORT}-${location.hostname}`\n    : `${location.protocol}//${location.hostname}:${NODE_PORT}`;\n\n  console.log('[chat] connecting to', nodeURL);\n\n  // Check if we have a valid chat token\n  if (!CHAT_TOKEN) {\n    alert('Authentication error. Please refresh the page.');\n    return;\n  }\n\n  const socket = io(nodeURL, {\n    path: '/socket.io',\n    transports: ['websocket', 'polling'], // allow fallback\n    reconnection: true,\n    timeout: 20000,\n    auth: { chat_token: CHAT_TOKEN }\n  });\n\n  socket.on('connect_error', (e)=>console.warn('[chat] connect_error via', nodeURL, e));\n\n\nsocket.on('fatal', (m) => {\n  const error = m?.error || 'Socket error';\n  console.error('[chat] Fatal error:', error);\n  alert(`Chat authentication failed: ${error}\\n\\nPlease refresh the page to reconnect.`);\n  // Disable the chat interface when authentication fails\n  document.getElementById('msgInput').disabled = true;\n  document.getElementById('sendBtn').disabled = true;\n  document.getElementById('btnNewGroup').disabled = true;\n});\n\nsocket.on('connect', () => {\n  console.log('[chat] Connected successfully');\n  // Re-enable interface on successful connection\n  document.getElementById('msgInput').disabled = false;\n  document.getElementById('sendBtn').disabled = false;\n  document.getElementById('btnNewGroup').disabled = false;\n  socket.emit('rooms:refresh');\n});\n\nsocket.on('disconnect', (reason) => {\n  console.warn('[chat] Disconnected:', reason);\n  if (reason === 'io server disconnect') {\n    alert('Authentication expired. Please refresh the page.');\n  }\n});\n\nsocket.on('rooms:list', (rooms)=>renderRooms(rooms));\nsocket.on('message:new', (m)=>{ if(Number(m.room_id)===Number(CURRENT_ROOM)) appendMsg(m); });\n\npeopleEl.addEventListener('click', (e)=>{\n  const item = e.target.closest('.item'); if(!item) return;\n  const uid = parseInt(item.dataset.uid,10); if(!uid || uid===UID) return;\n  socket.emit('dm:open', uid, (res)=>{\n    if(res?.ok){ socket.emit('rooms:refresh'); openRoom({ id: res.room_id, is_group: 0, name: 'Direct Message' }); }\n  });\n});\n\nfunction renderRooms(rooms){\n  roomsEl.innerHTML = '';\n  rooms.forEach(r=>{\n    const div = document.createElement('div');\n    div.className = 'item' + (String(r.id)===String(CURRENT_ROOM)?' active':'');\n    const nm = r.is_group ? (r.name || ('Room '+r.id)) : 'Direct Message';\n    div.innerHTML = `<span>${r.is_group?'👥':'💬'}</span><span><strong>${escapeHtml(nm)}</strong></span>`;\n    div.onclick = ()=>openRoom(r);\n    roomsEl.appendChild(div);\n  });\n}\n\nfunction openRoom(r){\n  CURRENT_ROOM = r.id;\n  titleEl.textContent = r.is_group ? (r.name || ('Room '+r.id)) : 'Direct Message';\n  typeEl.textContent  = r.is_group ? 'Group' : 'Direct';\n  msgsEl.innerHTML = '<div class=\"small text-muted\">Loading…</div>';\n  socket.emit('room:join', r.id, (history)=>{\n    msgsEl.innerHTML = '';\n    (history||[]).forEach(appendMsg);\n    scrollDown();\n  });\n}\n\ndocument.getElementById('sendBtn').onclick = send;\ninputEl.addEventListener('keydown', (e)=>{ if(e.key==='Enter') send(); });\nfunction send(){\n  const text = inputEl.value.trim();\n  if(!text || !CURRENT_ROOM) return;\n  socket.emit('message:send', { room_id: CURRENT_ROOM, body: text }, (res)=>{\n    if(res?.ok) inputEl.value='';\n  });\n}\n\nfunction appendMsg(m){\n  const me = Number(m.user_id) === UID;\n  const el = document.createElement('div');\n  el.className = 'msg' + (me ? ' you' : '');\n  el.innerHTML = `<div class=\"bubble\">${escapeHtml(m.body)}</div>\n                  <div class=\"meta\">${escapeHtml(m.username)} · ${new Date(m.created_at||Date.now()).toLocaleTimeString()}</div>`;\n  msgsEl.appendChild(el); scrollDown();\n}\nfunction scrollDown(){ msgsEl.scrollTop = msgsEl.scrollHeight; }\nfunction escapeHtml(t=''){ const d=document.createElement('div'); d.textContent=t; return d.innerHTML; }\n\n// group modal\nconst modal = document.getElementById('groupModal');\ndocument.getElementById('btnNewGroup').onclick = ()=> modal.classList.add('show');\ndocument.getElementById('closeGroup').onclick  = ()=> modal.classList.remove('show');\ndocument.getElementById('createGroup').onclick = ()=>{\n  const name = document.getElementById('groupName').value.trim();\n  const ids = Array.from(document.querySelectorAll('.grp-user:checked')).map(c=>parseInt(c.value,10));\n  if(!name || ids.length===0){ alert('Pick a name and at least one member'); return; }\n  socket.emit('room:create', name, ids, (res)=>{\n    if(res?.ok){ modal.classList.remove('show'); socket.emit('rooms:refresh'); openRoom({ id: res.room_id, is_group: 1, name }); }\n    else alert(res?.error||'Failed to create');\n  });\n};\n\n// Connection handling is now done in the connect event handler above\n</script>\n","size_bytes":10182},"app/views/departments/index.php":{"content":"<?php require 'app/views/templates/header.php'; \nrequire 'app/views/templates/spinner.php';\n?>\n\n<style>\n:root {\n  --primary: #3b82f6;\n  --primary-hover: #2563eb;\n  --danger: #ef4444;\n  --danger-hover: #dc2626;\n  --success: #10b981;\n  --gray-50: #f9fafb;\n  --gray-100: #f3f4f6;\n  --gray-200: #e5e7eb;\n  --gray-300: #d1d5db;\n  --gray-400: #9ca3af;\n  --gray-500: #6b7280;\n  --gray-700: #374151;\n  --gray-900: #111827;\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  --radius: 0.375rem;\n  --radius-lg: 0.5rem;\n  --transition: all 0.2s ease;\n}\n\n.page-wrap { \n  background: var(--gray-50); \n  min-height: 100vh; \n  padding: 1rem 0;\n}\n\n.card { \n  background: #fff; \n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow);\n  overflow: hidden;\n}\n\n.page-header {\n  margin-bottom: 2rem;\n}\n\n.page-title {\n  font-size: 1.875rem;\n  font-weight: 700;\n  color: var(--gray-900);\n  margin-bottom: 0.5rem;\n}\n\n.page-subtitle {\n  color: var(--gray-500);\n  font-size: 1.125rem;\n}\n\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius);\n  padding: 0.625rem 1.25rem;\n  font-weight: 500;\n  font-size: 0.875rem;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: var(--transition);\n  gap: 0.5rem;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.btn-sm {\n  padding: 0.5rem 0.875rem;\n  font-size: 0.8125rem;\n}\n\n.btn-primary {\n  background: var(--primary);\n  color: white;\n  box-shadow: var(--shadow-sm);\n}\n\n.btn-primary:hover {\n  background: var(--primary-hover);\n  box-shadow: var(--shadow);\n}\n\n.btn-outline {\n  background: transparent;\n  border: 1px solid var(--gray-300);\n  color: var(--gray-700);\n}\n\n.btn-outline:hover {\n  background: var(--gray-50);\n}\n\n.btn-danger {\n  background: var(--danger);\n  color: white;\n}\n\n.btn-danger:hover {\n  background: var(--danger-hover);\n}\n\n.btn-icon {\n  padding: 0.5rem;\n  border-radius: var(--radius);\n}\n\n.badge {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.375rem;\n  background: #eef2ff;\n  border: 1px solid #c7d2fe;\n  color: #3730a3;\n  border-radius: 9999px;\n  padding: 0.25rem 0.625rem;\n  font-size: 0.75rem;\n  margin: 0.25rem 0.25rem 0.25rem 0;\n  transition: var(--transition);\n}\n\n.badge .remove {\n  cursor: pointer;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: rgba(0,0,0,0.1);\n}\n\n.badge .remove:hover {\n  background: rgba(0,0,0,0.2);\n}\n\n.dept-row {\n  display: grid;\n  grid-template-columns: minmax(200px, 1fr) minmax(300px, 2fr) minmax(250px, 1.5fr) auto;\n  gap: 1.5rem;\n  align-items: start;\n  padding: 1.5rem;\n  border-bottom: 1px solid var(--gray-200);\n  transition: var(--transition);\n}\n\n.dept-row:hover {\n  background: var(--gray-50);\n}\n\n.dept-header {\n  display: grid;\n  grid-template-columns: minmax(200px, 1fr) minmax(300px, 2fr) minmax(250px, 1.5fr) auto;\n  gap: 1.5rem;\n  padding: 1rem 1.5rem;\n  background: var(--gray-50);\n  border-bottom: 1px solid var(--gray-200);\n  font-weight: 600;\n  color: var(--gray-700);\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n.dept-name {\n  font-weight: 600;\n  color: var(--gray-900);\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.dept-count {\n  font-size: 0.875rem;\n  color: var(--gray-500);\n}\n\n.input, select {\n  width: 100%;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--radius);\n  padding: 0.625rem 0.875rem;\n  font-size: 0.875rem;\n  transition: var(--transition);\n}\n\n.input:focus, select:focus {\n  outline: none;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);\n}\n\n.input-group {\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.75rem;\n}\n\n.input-group .input {\n  flex: 1;\n}\n\n.select-multi {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 0.75rem;\n}\n\n.small-text {\n  font-size: 0.75rem;\n  color: var(--gray-500);\n  margin-top: 0.25rem;\n}\n\n.empty-state {\n  padding: 3rem 1rem;\n  text-align: center;\n  color: var(--gray-500);\n}\n\n.empty-state-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.empty-state-text {\n  margin-bottom: 1.5rem;\n}\n\n/* Responsive styles */\n@media (max-width: 1024px) {\n  .dept-row, .dept-header {\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \n      \"name actions\"\n      \"roles managers\";\n    gap: 1rem;\n  }\n  \n  .dept-row > div:nth-child(1) { grid-area: name; }\n  .dept-row > div:nth-child(2) { grid-area: roles; }\n  .dept-row > div:nth-child(3) { grid-area: managers; }\n  .dept-row > div:nth-child(4) { grid-area: actions; }\n  \n  .dept-header > div:nth-child(1) { grid-area: name; }\n  .dept-header > div:nth-child(2) { grid-area: roles; }\n  .dept-header > div:nth-child(3) { grid-area: managers; }\n  .dept-header > div:nth-child(4) { grid-area: actions; }\n}\n\n@media (max-width: 640px) {\n  .dept-row, .dept-header {\n    grid-template-columns: 1fr;\n    grid-template-areas: \n      \"name\"\n      \"roles\"\n      \"managers\"\n      \"actions\";\n  }\n  \n  .input-group {\n    flex-direction: column;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    align-items: flex-start !important;\n    gap: 1rem;\n  }\n  \n  .btn {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n.fade-in {\n  animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.loading-shimmer {\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n  border-radius: var(--radius);\n  height: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n@keyframes loading {\n  0% { background-position: 200% 0; }\n  100% { background-position: -200% 0; }\n}\n</style>\n\n<div class=\"page-wrap\">\n  <div class=\"container-fluid px-3 px-md-4 py-4\">\n    <div class=\"d-flex align-items-center justify-content-between page-header\">\n      <div>\n        <h1 class=\"page-title\">Departments & Roles</h1>\n        <p class=\"page-subtitle\">Create departments, attach roles, and assign managers</p>\n      </div>\n      <button class=\"btn btn-primary\" id=\"btnAddDept\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n        </svg>\n        Add Department\n      </button>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"dept-header\">\n        <div>Department</div>\n        <div>Roles</div>\n        <div>Managers</div>\n        <div>Actions</div>\n      </div>\n      <div id=\"deptList\"></div>\n      <div id=\"emptyState\" class=\"empty-state\" style=\"display: none;\">\n        <div class=\"empty-state-icon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n          </svg>\n        </div>\n        <div class=\"empty-state-text\">No departments yet. Create your first department to get started.</div>\n        <button class=\"btn btn-primary\" id=\"btnAddFirstDept\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n          </svg>\n          Add Department\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n\n<script>\n/* ===== Spinner-aware JSON fetch ===== */\nasync function fetchJSON(url, options = {}) {\n  Spinner.show();\n  try {\n    const res  = await fetch(url, { headers:{'Content-Type':'application/json'}, ...options });\n    const text = await res.text();\n    if (!res.ok) throw new Error(text || ('HTTP ' + res.status));\n    let data;\n    try { data = JSON.parse(text); }\n    catch (e) {\n      console.error('[fetchJSON] Invalid JSON:', text.slice(0, 400));\n      throw e;\n    }\n    return data;\n  } finally {\n    Spinner.hide();\n  }\n}\n\n/* State */\nlet ALL_ROLES = [];\nlet ALL_USERS = [];\nlet DEPTS     = [];\n\n/* Init */\ndocument.addEventListener('DOMContentLoaded', async () => {\n  await bootstrapData();\n  document.getElementById('btnAddDept').addEventListener('click', onAddDept);\n  document.getElementById('btnAddFirstDept').addEventListener('click', onAddDept);\n});\n\nasync function bootstrapData() {\n  try {\n    const data = await fetchJSON('/departments/api?a=bootstrap');\n    ALL_ROLES = data.roles || [];\n    ALL_USERS = data.users || [];\n    DEPTS     = data.departments || [];\n    renderList();\n  } catch (error) {\n    console.error('Failed to load data:', error);\n    alert('Failed to load data. Please refresh the page.');\n  }\n}\n\nfunction renderList() {\n  const wrap = document.getElementById('deptList');\n  const emptyState = document.getElementById('emptyState');\n  \n  if (DEPTS.length === 0) {\n    wrap.innerHTML = '';\n    emptyState.style.display = 'block';\n    return;\n  }\n  \n  emptyState.style.display = 'none';\n  wrap.innerHTML = '';\n  \n  DEPTS.forEach(d => {\n    const row = deptRow(d);\n    row.classList.add('fade-in');\n    wrap.appendChild(row);\n  });\n}\n\n/* Row component */\nfunction deptRow(d) {\n  const row = document.createElement('div');\n  row.className = 'dept-row';\n  row.dataset.id = d.id;\n\n  /* left: name + rename */\n  const left = document.createElement('div');\n  const name = document.createElement('div');\n  name.className = 'dept-name';\n  name.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\"/>\n    </svg>\n    ${escapeHtml(d.name)}\n  `;\n  const count = document.createElement('div');\n  count.className = 'dept-count';\n  count.textContent = `${d.role_count} role${d.role_count !== 1 ? 's' : ''}`;\n  const rename = document.createElement('button');\n  rename.className = 'btn btn-outline btn-sm mt-2';\n  rename.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\n    </svg>\n    Rename\n  `;\n  rename.addEventListener('click', async () => {\n    const nn = prompt('New department name', d.name);\n    if (!nn || nn === d.name) return;\n    try {\n      await fetchJSON('/departments/api?a=department.rename', { \n        method:'POST', \n        body: JSON.stringify({ id:d.id, name: nn }) \n      });\n      d.name = nn; \n      name.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5z\"/>\n        </svg>\n        ${escapeHtml(d.name)}\n      `;\n    } catch (error) {\n      alert('Failed to rename department: ' + error.message);\n    }\n  });\n  left.append(name, count, rename);\n\n  /* middle: roles (chips + add input) */\n  const mid = document.createElement('div');\n  const chips = document.createElement('div'); \n  chips.className='mb-2';\n  mid.appendChild(chips);\n\n  const addWrap = document.createElement('div');\n  addWrap.className = 'input-group';\n  const sel = document.createElement('select');\n  sel.className = 'input';\n  sel.innerHTML = `<option value=\"\">Select existing role</option>` + \n    ALL_ROLES.map(r => `<option value=\"${r.id}\">${escapeHtml(r.name)}</option>`).join('');\n  \n  const txt = document.createElement('input'); \n  txt.className='input'; \n  txt.placeholder='Or enter new role name';\n  \n  const addBtn = document.createElement('button'); \n  addBtn.className='btn btn-primary';\n  addBtn.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n    </svg>\n  `;\n  \n  addBtn.addEventListener('click', async () => {\n    if (!sel.value && !txt.value.trim()) {\n      alert('Please select an existing role or enter a new role name');\n      return;\n    }\n    \n    try {\n      if (txt.value.trim()) {\n        await fetchJSON('/departments/api?a=role.attach', { \n          method:'POST', \n          body: JSON.stringify({ department_id: d.id, role_name: txt.value.trim() }) \n        });\n        txt.value='';\n      } else {\n        await fetchJSON('/departments/api?a=role.attach', { \n          method:'POST', \n          body: JSON.stringify({ department_id: d.id, role_id: parseInt(sel.value,10) }) \n        });\n        sel.value='';\n      }\n      await refreshRoles(d.id, chips, count, d);\n    } catch (error) {\n      alert('Failed to add role: ' + error.message);\n    }\n  });\n  \n  addWrap.append(sel, txt, addBtn);\n  mid.appendChild(addWrap);\n\n  /* right: managers multi-select */\n  const right = document.createElement('div');\n  const mgrBox = document.createElement('div'); \n  mgrBox.className='select-multi';\n  right.appendChild(mgrBox);\n\n  const chooseWrap = document.createElement('div');\n  chooseWrap.className = 'input-group';\n  const choose = document.createElement('select'); \n  choose.className='input';\n  choose.innerHTML = `<option value=\"\">Select user to add as manager</option>` + \n    ALL_USERS.map(u => `<option value=\"${u.id}\">${escapeHtml(u.label)}</option>`).join('');\n  \n  const addManagerBtn = document.createElement('button');\n  addManagerBtn.className = 'btn btn-primary';\n  addManagerBtn.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n    </svg>\n  `;\n  \n  chooseWrap.appendChild(choose);\n  chooseWrap.appendChild(addManagerBtn);\n  right.appendChild(chooseWrap);\n\n  addManagerBtn.addEventListener('click', async () => {\n    const uid = parseInt(choose.value,10);\n    if (!uid) {\n      alert('Please select a user');\n      return;\n    }\n    \n    try {\n      await fetchJSON('/departments/api?a=manager.add', { \n        method:'POST', \n        body: JSON.stringify({ department_id: d.id, user_id: uid }) \n      });\n      choose.value = '';\n      await refreshManagers(d.id, mgrBox);\n    } catch (error) {\n      alert('Failed to add manager: ' + error.message);\n    }\n  });\n\n  /* delete */\n  const delCol = document.createElement('div');\n  delCol.className = 'd-flex justify-content-end';\n  \n  const del = document.createElement('button');\n  del.className = 'btn btn-icon btn-danger';\n  del.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n      <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n    </svg>\n  `;\n  del.title = 'Delete department';\n  \n  del.addEventListener('click', async () => {\n    if (!confirm('Are you sure you want to delete this department? This action cannot be undone.')) return;\n    \n    try {\n      await fetchJSON(`/departments/api?a=department.delete&id=${d.id}`);\n      DEPTS = DEPTS.filter(x => x.id !== d.id);\n      renderList();\n    } catch (error) {\n      alert('Failed to delete department: ' + error.message);\n    }\n  });\n  \n  delCol.appendChild(del);\n  row.append(left, mid, right, delCol);\n\n  // initial role & manager chips with loading state\n  showLoadingRoles(chips);\n  showLoadingManagers(mgrBox);\n  \n  // load actual data\n  refreshRoles(d.id, chips, count, d);\n  refreshManagers(d.id, mgrBox);\n\n  return row;\n}\n\nfunction showLoadingRoles(container) {\n  container.innerHTML = `\n    <div class=\"loading-shimmer\" style=\"width: 80%\"></div>\n    <div class=\"loading-shimmer\" style=\"width: 60%\"></div>\n  `;\n}\n\nfunction showLoadingManagers(container) {\n  container.innerHTML = `\n    <div class=\"loading-shimmer\" style=\"width: 70%\"></div>\n  `;\n}\n\nasync function refreshRoles(deptId, chipsEl, countEl, deptRef) {\n  try {\n    const r = await fetchJSON(`/departments/api?a=departments.roles.managers&id=${deptId}`);\n    chipsEl.innerHTML = '';\n    \n    if (r.roles && r.roles.length > 0) {\n      r.roles.forEach(role => {\n        const b = document.createElement('span'); \n        b.className='badge';\n        b.innerHTML = `\n          ${escapeHtml(role.name)} \n          <span class=\"remove\" title=\"Remove role\">×</span>\n        `;\n        b.querySelector('.remove').addEventListener('click', async () => {\n          if (!confirm(`Remove role \"${role.name}\" from department?`)) return;\n          \n          try {\n            await fetchJSON('/departments/api?a=role.detach', { \n              method:'POST', \n              body: JSON.stringify({ department_id: deptId, role_id: role.id }) \n            });\n            await refreshRoles(deptId, chipsEl, countEl, deptRef);\n          } catch (error) {\n            alert('Failed to remove role: ' + error.message);\n          }\n        });\n        chipsEl.appendChild(b);\n      });\n    } else {\n      chipsEl.innerHTML = '<span class=\"small-text\">No roles added yet</span>';\n    }\n    \n    deptRef.role_count = (r.roles || []).length;\n    countEl.textContent = `${deptRef.role_count} role${deptRef.role_count !== 1 ? 's' : ''}`;\n  } catch (error) {\n    chipsEl.innerHTML = '<span class=\"small-text\" style=\"color: var(--danger)\">Failed to load roles</span>';\n    console.error('Failed to refresh roles:', error);\n  }\n}\n\nasync function refreshManagers(deptId, boxEl) {\n  try {\n    const r = await fetchJSON(`/departments/api?a=departments.roles.managers&id=${deptId}`);\n    boxEl.innerHTML = '';\n    \n    if (r.managers && r.managers.length > 0) {\n      r.managers.forEach(m => {\n        const b = document.createElement('span'); \n        b.className='badge';\n        b.innerHTML = `\n          ${escapeHtml(m.label)} \n          <span class=\"remove\" title=\"Remove manager\">×</span>\n        `;\n        b.querySelector('.remove').addEventListener('click', async () => {\n          if (!confirm(`Remove \"${m.label}\" as manager?`)) return;\n          \n          try {\n            await fetchJSON('/departments/api?a=manager.remove', { \n              method:'POST', \n              body: JSON.stringify({ department_id: deptId, user_id: m.id }) \n            });\n            await refreshManagers(deptId, boxEl);\n          } catch (error) {\n            alert('Failed to remove manager: ' + error.message);\n          }\n        });\n        boxEl.appendChild(b);\n      });\n    } else {\n      boxEl.innerHTML = '<span class=\"small-text\">No managers assigned</span>';\n    }\n  } catch (error) {\n    boxEl.innerHTML = '<span class=\"small-text\" style=\"color: var(--danger)\">Failed to load managers</span>';\n    console.error('Failed to refresh managers:', error);\n  }\n}\n\nasync function onAddDept() {\n  const n = prompt('Enter department name:');\n  if (!n) return;\n  \n  if (!n.trim()) {\n    alert('Department name cannot be empty');\n    return;\n  }\n  \n  try {\n    const res = await fetchJSON('/departments/api?a=department.create', { \n      method:'POST', \n      body: JSON.stringify({ name: n.trim() }) \n    });\n    DEPTS.push({ id: res.id, name: n.trim(), role_count: 0 });\n    renderList();\n  } catch (error) {\n    alert('Failed to create department: ' + error.message);\n  }\n}\n\nfunction escapeHtml(t = '') { \n  const d = document.createElement('div'); \n  d.textContent = t; \n  return d.innerHTML; \n}\n</script>","size_bytes":20906},"app/views/home/index.php":{"content":"    <?php require_once 'app/views/templates/header.php'; ?>\n\n    <section class=\"py-5 text-center bg-white mb-4\">\n      <div class=\"container\">\n        <h1 class=\"display-4 fw-bold\">Hey, <?= htmlspecialchars($_SESSION['username']) ?>!</h1>\n        <p class=\"lead text-muted\">Today is <?= date(\"F jS, Y\") ?>.</p>\n        <a href=\"/logout\" class=\"btn btn-outline-danger btn-lg mt-3\">\n          Logout\n        </a>\n      </div>\n    </section>\n\n    <section class=\"container text-center\">\n      <p class=\"text-secondary\">\n        Welcome to your dashboard. Use the menu above to navigate.\n      </p>\n    </section>\n\n    <?php require_once 'app/views/templates/footer.php'; ?>\n","size_bytes":672},"app/views/login/index.php":{"content":"<?php require 'app/views/templates/headerPublic.php'; ?>\n\n<div class=\"container py-5\">\n\t<div class=\"row justify-content-center\">\n\t\t<div class=\"col-md-6 col-lg-4\">\n\t\t\t<div class=\"card shadow\">\n\t\t\t\t<div class=\"card-body p-4\">\n\t\t\t\t\t<h1 class=\"h4 text-center mb-4\">\n\t\t\t\t\t\t<i class=\"fas fa-sign-in-alt text-primary me-2\"></i>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</h1>\n\n\t\t\t\t\t<?php if (isset($_SESSION['login_error'])): ?>\n\t\t\t\t\t\t<div class=\"alert alert-danger\">\n\t\t\t\t\t\t\t<?= $_SESSION['login_error']; unset($_SESSION['login_error']); ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t<form action=\"/login/verify\" method=\"post\">\n\t\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t\t<label for=\"username\" class=\"form-label\">Username:</label>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t\t<label for=\"password\" class=\"form-label\">Password:</label>\n\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary w-100\">\n\t\t\t\t\t\t\t<i class=\"fas fa-sign-in-alt me-1\"></i>Sign In\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<!--\n\t\t\t\t\t<div class=\"text-center mt-3\">\n\t\t\t\t\t\t<p class=\"mb-0\">\n\t\t\t\t\t\t\tDon't have an account? \n\t\t\t\t\t\t\t<a href=\"/signup\" class=\"text-decoration-none\">Create one here</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t-->\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n","size_bytes":1428},"app/views/notes/create.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n            <div class=\"card border-0 shadow\">\n                <div class=\"card-header bg-primary text-white\">\n                    <h3 class=\"mb-0\">\n                        <i class=\"fas fa-plus-circle me-2\"></i>\n                        Create New Reminder\n                    </h3>\n                    <small class=\"opacity-75\">Add a new task to stay organized</small>\n                </div>\n                <div class=\"card-body p-4\">\n                    <?php if (isset($_SESSION['error'])): ?>\n                        <div class=\"alert alert-danger alert-dismissible fade show shadow-sm\" role=\"alert\">\n                            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                            <strong>Error!</strong> <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                        </div>\n                    <?php endif; ?>\n\n                    <form method=\"POST\" action=\"/notes/create\" id=\"createReminderForm\">\n                        <div class=\"mb-4\">\n                            <label for=\"subject\" class=\"form-label fw-bold\">\n                                <i class=\"fas fa-heading text-primary me-1\"></i>\n                                Subject <span class=\"text-danger\">*</span>\n                            </label>\n                            <input type=\"text\" class=\"form-control form-control-lg\" id=\"subject\" name=\"subject\" required \n                                   placeholder=\"Enter a clear, descriptive title for your reminder\"\n                                   value=\"<?php echo isset($_POST['subject']) ? htmlspecialchars($_POST['subject']) : ''; ?>\">\n                            <div class=\"form-text\">\n                                <i class=\"fas fa-info-circle me-1\"></i>\n                                Make it specific and actionable (e.g., \"Call dentist for appointment\")\n                            </div>\n                        </div>\n\n                        <div class=\"mb-4\">\n                            <label for=\"content\" class=\"form-label fw-bold\">\n                                <i class=\"fas fa-align-left text-primary me-1\"></i>\n                                Content <span class=\"text-muted\">(Optional)</span>\n                            </label>\n                            <textarea class=\"form-control\" id=\"content\" name=\"content\" rows=\"4\" \n                                      placeholder=\"Add additional details, notes, or context...\"><?php echo isset($_POST['content']) ? htmlspecialchars($_POST['content']) : ''; ?></textarea>\n                            <div class=\"form-text\">\n                                <i class=\"fas fa-lightbulb me-1\"></i>\n                                Include important details, deadlines, or any context that will help you complete this task\n                            </div>\n                        </div>\n\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <a href=\"/notes\" class=\"btn btn-outline-secondary btn-lg\">\n                                <i class=\"fas fa-arrow-left me-2\"></i>Back to Reminders\n                            </a>\n                            <button type=\"submit\" class=\"btn btn-primary btn-lg shadow\">\n                                <i class=\"fas fa-save me-2\"></i>Create Reminder\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <!-- Tips Card -->\n            <div class=\"card border-0 shadow-sm mt-4\">\n                <div class=\"card-body bg-light\">\n                    <h6 class=\"card-title\">\n                        <i class=\"fas fa-lightbulb text-warning me-2\"></i>\n                        Tips for Effective Reminders\n                    </h6>\n                    <ul class=\"list-unstyled mb-0 small\">\n                        <li><i class=\"fas fa-check text-success me-2\"></i>Use action verbs (Call, Buy, Send, Review)</li>\n                        <li><i class=\"fas fa-check text-success me-2\"></i>Include specific details when helpful</li>\n                        <li><i class=\"fas fa-check text-success me-2\"></i>Keep the subject clear and concise</li>\n                        <li><i class=\"fas fa-check text-success me-2\"></i>Add deadlines or dates in the content if needed</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\ndocument.getElementById('createReminderForm').addEventListener('submit', function(e) {\n    const subject = document.getElementById('subject').value.trim();\n    if (subject.length < 3) {\n        e.preventDefault();\n        showAlert('warning', 'Please enter a subject with at least 3 characters.');\n        return false;\n    }\n});\n</script>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":5089},"app/views/notes/edit.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n            <div class=\"card border-0 shadow\">\n                <div class=\"card-header bg-warning text-dark\">\n                    <h3 class=\"mb-0\">\n                        <i class=\"fas fa-edit me-2\"></i>\n                        Edit Reminder\n                    </h3>\n                    <small class=\"opacity-75\">Update your task details</small>\n                </div>\n                <div class=\"card-body p-4\">\n                    <?php if (isset($_SESSION['error'])): ?>\n                        <div class=\"alert alert-danger alert-dismissible fade show shadow-sm\" role=\"alert\">\n                            <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                            <strong>Error!</strong> <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                        </div>\n                    <?php endif; ?>\n\n                    <!-- Current Status -->\n                    <div class=\"alert alert-<?php echo $note['completed'] ? 'success' : 'warning'; ?> mb-4\">\n                        <i class=\"fas fa-<?php echo $note['completed'] ? 'check-circle' : 'clock'; ?> me-2\"></i>\n                        <strong>Status:</strong> This reminder is currently \n                        <span class=\"fw-bold\"><?php echo $note['completed'] ? 'Completed' : 'Pending'; ?></span>\n                        <?php if (!$note['completed']): ?>\n                            <div class=\"mt-2\">\n                                <a href=\"/notes/toggle/<?php echo $note['id']; ?>\" class=\"btn btn-sm btn-success\">\n                                    <i class=\"fas fa-check me-1\"></i>Mark as Complete\n                                </a>\n                            </div>\n                        <?php endif; ?>\n                    </div>\n\n                    <form method=\"POST\" action=\"/notes/edit/<?php echo $note['id']; ?>\" id=\"editReminderForm\">\n                        <div class=\"mb-4\">\n                            <label for=\"subject\" class=\"form-label fw-bold\">\n                                <i class=\"fas fa-heading text-warning me-1\"></i>\n                                Subject <span class=\"text-danger\">*</span>\n                            </label>\n                            <input type=\"text\" class=\"form-control form-control-lg\" id=\"subject\" name=\"subject\" required \n                                   placeholder=\"Enter a clear, descriptive title for your reminder\"\n                                   value=\"<?php echo htmlspecialchars($note['subject']); ?>\">\n                            <div class=\"form-text\">\n                                <i class=\"fas fa-info-circle me-1\"></i>\n                                Make it specific and actionable (e.g., \"Call dentist for appointment\")\n                            </div>\n                        </div>\n\n                        <div class=\"mb-4\">\n                            <label for=\"content\" class=\"form-label fw-bold\">\n                                <i class=\"fas fa-align-left text-warning me-1\"></i>\n                                Content <span class=\"text-muted\">(Optional)</span>\n                            </label>\n                            <textarea class=\"form-control\" id=\"content\" name=\"content\" rows=\"4\" \n                                      placeholder=\"Add additional details, notes, or context...\"><?php echo htmlspecialchars($note['content']); ?></textarea>\n                            <div class=\"form-text\">\n                                <i class=\"fas fa-lightbulb me-1\"></i>\n                                Include important details, deadlines, or any context that will help you complete this task\n                            </div>\n                        </div>\n\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <a href=\"/notes\" class=\"btn btn-outline-secondary btn-lg\">\n                                <i class=\"fas fa-arrow-left me-2\"></i>Back to Reminders\n                            </a>\n                            <div class=\"btn-group\">\n                                <button type=\"submit\" class=\"btn btn-warning btn-lg shadow\">\n                                    <i class=\"fas fa-save me-2\"></i>Update Reminder\n                                </button>\n                                <a href=\"/notes/delete/<?php echo $note['id']; ?>\" class=\"btn btn-outline-danger btn-lg\" \n                                   onclick=\"return confirm('Are you sure you want to delete this reminder?')\">\n                                    <i class=\"fas fa-trash me-2\"></i>Delete\n                                </a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <!-- Reminder Info -->\n            <div class=\"card border-0 shadow-sm mt-4\">\n                <div class=\"card-body bg-light\">\n                    <h6 class=\"card-title\">\n                        <i class=\"fas fa-info-circle text-info me-2\"></i>\n                        Reminder Information\n                    </h6>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <p class=\"mb-2\">\n                                <strong>Created:</strong> \n                                <span class=\"text-muted\"><?php echo date('F j, Y \\a\\t g:i A', strtotime($note['created_at'])); ?></span>\n                            </p>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <p class=\"mb-2\">\n                                <strong>Status:</strong> \n                                <span class=\"badge bg-<?php echo $note['completed'] ? 'success' : 'warning'; ?>\">\n                                    <?php echo $note['completed'] ? 'Completed' : 'Pending'; ?>\n                                </span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\ndocument.getElementById('editReminderForm').addEventListener('submit', function(e) {\n    const subject = document.getElementById('subject').value.trim();\n    if (subject.length < 3) {\n        e.preventDefault();\n        showAlert('warning', 'Please enter a subject with at least 3 characters.');\n        return false;\n    }\n});\n</script>\n\n<?php require 'app/views/templates/footer.php'; ?>","size_bytes":6681},"app/views/notes/index.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1 class=\"display-6\">\n                    <i class=\"fas fa-tasks text-primary me-2\"></i>\n                    My Reminders\n                    <small class=\"text-muted fs-6\">Stay organized and productive</small>\n                </h1>\n                <a href=\"/notes/create\" class=\"btn btn-primary btn-lg shadow\">\n                    <i class=\"fas fa-plus me-2\"></i>Create New Reminder\n                </a>\n            </div>\n\n            <?php if (isset($_SESSION['success'])): ?>\n                <div class=\"alert alert-success alert-dismissible fade show shadow-sm\" role=\"alert\">\n                    <i class=\"fas fa-check-circle me-2\"></i>\n                    <strong>Success!</strong> <?php echo $_SESSION['success']; unset($_SESSION['success']); ?>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            <?php endif; ?>\n\n            <?php if (isset($_SESSION['error'])): ?>\n                <div class=\"alert alert-danger alert-dismissible fade show shadow-sm\" role=\"alert\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    <strong>Error!</strong> <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            <?php endif; ?>\n\n            <?php if (isset($_SESSION['info'])): ?>\n                <div class=\"alert alert-info alert-dismissible fade show shadow-sm\" role=\"alert\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    <strong>Info:</strong> <?php echo $_SESSION['info']; unset($_SESSION['info']); ?>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            <?php endif; ?>\n\n            <?php if (empty($notes)): ?>\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-md-8\">\n                        <div class=\"card border-0 shadow-sm\">\n                            <div class=\"card-body text-center py-5\">\n                                <i class=\"fas fa-clipboard-list fa-3x text-muted mb-3\"></i>\n                                <h4 class=\"text-muted\">No reminders yet</h4>\n                                <p class=\"text-muted mb-4\">Get started by creating your first reminder to stay organized and never miss important tasks.</p>\n                                <a href=\"/notes/create\" class=\"btn btn-primary btn-lg\">\n                                    <i class=\"fas fa-plus me-2\"></i>Create Your First Reminder\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            <?php else: ?>\n                <div class=\"row\">\n                    <?php foreach ($notes as $note): ?>\n                        <div class=\"col-md-6 col-lg-4 mb-4\">\n                            <div class=\"card h-100 shadow-sm border-0 <?php echo $note['completed'] ? 'border-success' : ''; ?> reminder-card\">\n                                <?php if ($note['completed']): ?>\n                                    <div class=\"card-header bg-success text-white\">\n                                        <i class=\"fas fa-check-circle me-2\"></i>Completed\n                                    </div>\n                                <?php endif; ?>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title <?php echo $note['completed'] ? 'text-decoration-line-through text-muted' : ''; ?>\">\n                                        <?php echo htmlspecialchars($note['subject']); ?>\n                                    </h5>\n                                    <?php if (!empty($note['content'])): ?>\n                                        <p class=\"card-text text-muted <?php echo $note['completed'] ? 'text-decoration-line-through' : ''; ?>\">\n                                            <?php echo htmlspecialchars($note['content']); ?>\n                                        </p>\n                                    <?php endif; ?>\n                                    <div class=\"d-flex justify-content-between align-items-center mt-3\">\n                                        <small class=\"text-muted\">\n                                            <i class=\"fas fa-calendar-alt me-1\"></i>\n                                            <?php echo date('M j, Y', strtotime($note['created_at'])); ?>\n                                        </small>\n                                        <?php if ($note['completed']): ?>\n                                            <span class=\"badge bg-success\">\n                                                <i class=\"fas fa-check me-1\"></i>Done\n                                            </span>\n                                        <?php else: ?>\n                                            <span class=\"badge bg-warning text-dark\">\n                                                <i class=\"fas fa-clock me-1\"></i>Pending\n                                            </span>\n                                        <?php endif; ?>\n                                    </div>\n                                </div>\n                                <div class=\"card-footer bg-transparent border-top-0\">\n                                    <div class=\"btn-group w-100\" role=\"group\">\n                                        <a href=\"/notes/edit/<?php echo $note['id']; ?>\" class=\"btn btn-outline-primary btn-sm\">\n                                            <i class=\"fas fa-edit me-1\"></i>Edit\n                                        </a>\n                                        <a href=\"/notes/toggle/<?php echo $note['id']; ?>\" class=\"btn btn-outline-<?php echo $note['completed'] ? 'warning' : 'success'; ?> btn-sm\">\n                                            <i class=\"fas fa-<?php echo $note['completed'] ? 'undo' : 'check'; ?> me-1\"></i>\n                                            <?php echo $note['completed'] ? 'Undo' : 'Complete'; ?>\n                                        </a>\n                                        <a href=\"/notes/delete/<?php echo $note['id']; ?>\" class=\"btn btn-outline-danger btn-sm\" \n                                           onclick=\"return confirm('Are you sure you want to delete this reminder?')\">\n                                            <i class=\"fas fa-trash me-1\"></i>Delete\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <?php endforeach; ?>\n                </div>\n\n                <!-- Summary Card -->\n                <div class=\"row mt-4\">\n                    <div class=\"col-md-12\">\n                        <div class=\"card bg-light border-0\">\n                            <div class=\"card-body\">\n                                <div class=\"row text-center\">\n                                    <div class=\"col-md-4\">\n                                        <h4 class=\"text-primary\"><?php echo count($notes); ?></h4>\n                                        <p class=\"text-muted mb-0\">Total Reminders</p>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <h4 class=\"text-warning\"><?php echo count(array_filter($notes, function($n) { return !$n['completed']; })); ?></h4>\n                                        <p class=\"text-muted mb-0\">Pending</p>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <h4 class=\"text-success\"><?php echo count(array_filter($notes, function($n) { return $n['completed']; })); ?></h4>\n                                        <p class=\"text-muted mb-0\">Completed</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            <?php endif; ?>\n        </div>\n    </div>\n</div>\n\n<style>\n.reminder-card {\n    transition: transform 0.2s ease-in-out;\n}\n.reminder-card:hover {\n    transform: translateY(-5px);\n}\n</style>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":8698},"app/views/reports/all-reminders.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1 class=\"display-6\">\n                    <i class=\"fas fa-list text-primary me-2\"></i>\n                    All Reminders\n                    <small class=\"text-muted fs-6\">System-wide reminder overview</small>\n                </h1>\n                <a href=\"/reports\" class=\"btn btn-outline-secondary\">\n                    <i class=\"fas fa-arrow-left me-2\"></i>Back to Reports\n                </a>\n            </div>\n\n            <div class=\"card border-0 shadow\">\n                <div class=\"card-header bg-primary text-white\">\n                    <h5 class=\"mb-0\">\n                        <i class=\"fas fa-database me-2\"></i>\n                        All User Reminders (<?php echo count($reminders); ?> total)\n                    </h5>\n                </div>\n                <div class=\"card-body p-0\">\n                    <?php if (empty($reminders)): ?>\n                        <div class=\"text-center py-5\">\n                            <i class=\"fas fa-inbox fa-3x text-muted mb-3\"></i>\n                            <h4 class=\"text-muted\">No Reminders Found</h4>\n                            <p class=\"text-muted\">No reminders have been created yet.</p>\n                        </div>\n                    <?php else: ?>\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover mb-0\">\n                                <thead class=\"bg-light\">\n                                    <tr>\n                                        <th>User</th>\n                                        <th>Subject</th>\n                                        <th>Content</th>\n                                        <th>Status</th>\n                                        <th>Created</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <?php foreach ($reminders as $reminder): ?>\n                                        <tr>\n                                            <td>\n                                                <strong><?php echo htmlspecialchars($reminder['username']); ?></strong>\n                                            </td>\n                                            <td>\n                                                <div class=\"<?php echo $reminder['completed'] ? 'text-decoration-line-through text-muted' : ''; ?>\">\n                                                    <?php echo htmlspecialchars($reminder['subject']); ?>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div class=\"text-muted small <?php echo $reminder['completed'] ? 'text-decoration-line-through' : ''; ?>\">\n                                                    <?php \n                                                    if (!empty($reminder['content'])) {\n                                                        echo htmlspecialchars(substr($reminder['content'], 0, 50)) . (strlen($reminder['content']) > 50 ? '...' : '');\n                                                    } else {\n                                                        echo '<em>No content</em>';\n                                                    }\n                                                    ?>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <span class=\"badge bg-<?php echo $reminder['completed'] ? 'success' : 'warning'; ?>\">\n                                                    <i class=\"fas fa-<?php echo $reminder['completed'] ? 'check' : 'clock'; ?> me-1\"></i>\n                                                    <?php echo $reminder['completed'] ? 'Completed' : 'Pending'; ?>\n                                                </span>\n                                            </td>\n                                            <td>\n                                                <small class=\"text-muted\">\n                                                    <?php echo date('M j, Y', strtotime($reminder['created_at'])); ?><br>\n                                                    <?php echo date('g:i A', strtotime($reminder['created_at'])); ?>\n                                                </small>\n                                            </td>\n                                            <td>\n                                                <div class=\"btn-group btn-group-sm\" role=\"group\">\n                                                    <button type=\"button\" class=\"btn btn-outline-info\" \n                                                            onclick=\"showReminderDetails(<?php echo htmlspecialchars(json_encode($reminder)); ?>)\">\n                                                        <i class=\"fas fa-eye\"></i>\n                                                    </button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    <?php endforeach; ?>\n                                </tbody>\n                            </table>\n                        </div>\n                    <?php endif; ?>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Reminder Details Modal -->\n<div class=\"modal fade\" id=\"reminderModal\" tabindex=\"-1\" aria-labelledby=\"reminderModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"reminderModalLabel\">\n                    <i class=\"fas fa-info-circle me-2\"></i>Reminder Details\n                </h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\" id=\"reminderModalBody\">\n                <!-- Content will be populated by JavaScript -->\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\nfunction showReminderDetails(reminder) {\n    const modalBody = document.getElementById('reminderModalBody');\n    const status = reminder.completed ? 'Completed' : 'Pending';\n    const statusClass = reminder.completed ? 'success' : 'warning';\n    const statusIcon = reminder.completed ? 'check' : 'clock';\n\n    modalBody.innerHTML = `\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <h6>Subject:</h6>\n                <p class=\"border-start border-primary border-3 ps-3\">${reminder.subject}</p>\n\n                <h6>Content:</h6>\n                <p class=\"border-start border-secondary border-3 ps-3 text-muted\">\n                    ${reminder.content || '<em>No additional content</em>'}\n                </p>\n            </div>\n            <div class=\"col-md-4\">\n                <h6>Details:</h6>\n                <ul class=\"list-unstyled\">\n                    <li><strong>User:</strong> ${reminder.username}</li>\n                    <li><strong>Status:</strong> \n                        <span class=\"badge bg-${statusClass}\">\n                            <i class=\"fas fa-${statusIcon} me-1\"></i>${status}\n                        </span>\n                    </li>\n                    <li><strong>Created:</strong><br>\n                        <small class=\"text-muted\">${new Date(reminder.created_at).toLocaleDateString()} at ${new Date(reminder.created_at).toLocaleTimeString()}</small>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    `;\n\n    const modal = new bootstrap.Modal(document.getElementById('reminderModal'));\n    modal.show();\n}\n</script>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":8320},"app/views/reports/index.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1 class=\"display-6\">\n                    <i class=\"fas fa-chart-bar text-primary me-2\"></i>\n                    Admin Reports\n                    <small class=\"text-muted fs-6\">System analytics and insights</small>\n                </h1>\n                <div class=\"btn-group\" role=\"group\">\n                    <a href=\"/reports/allReminders\" class=\"btn btn-outline-primary\">\n                        <i class=\"fas fa-list me-1\"></i>All Reminders\n                    </a>\n                    <a href=\"/reports/userStats\" class=\"btn btn-outline-success\">\n                        <i class=\"fas fa-users me-1\"></i>User Stats\n                    </a>\n                    <a href=\"/reports/loginReport\" class=\"btn btn-outline-info\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Login Report\n                    </a>\n                </div>\n            </div>\n\n            <!-- Overview Statistics -->\n            <div class=\"row mb-4\">\n                <div class=\"col-md-3 mb-3\">\n                    <div class=\"card bg-primary text-white h-100\">\n                        <div class=\"card-body text-center\">\n                            <i class=\"fas fa-users fa-3x mb-3\"></i>\n                            <h3 class=\"card-title\"><?php echo $stats['total_users']; ?></h3>\n                            <p class=\"card-text\">Total Users</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <div class=\"card bg-success text-white h-100\">\n                        <div class=\"card-body text-center\">\n                            <i class=\"fas fa-tasks fa-3x mb-3\"></i>\n                            <h3 class=\"card-title\"><?php echo $stats['total_reminders']; ?></h3>\n                            <p class=\"card-text\">Total Reminders</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <div class=\"card bg-warning text-dark h-100\">\n                        <div class=\"card-body text-center\">\n                            <i class=\"fas fa-clock fa-3x mb-3\"></i>\n                            <h3 class=\"card-title\"><?php echo $stats['pending_reminders']; ?></h3>\n                            <p class=\"card-text\">Pending</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <div class=\"card bg-info text-white h-100\">\n                        <div class=\"card-body text-center\">\n                            <i class=\"fas fa-sign-in-alt fa-3x mb-3\"></i>\n                            <h3 class=\"card-title\"><?php echo $stats['total_logins']; ?></h3>\n                            <p class=\"card-text\">Total Logins</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Charts Row -->\n            <div class=\"row mb-4\">\n                <div class=\"col-md-6\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-primary text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-chart-pie me-2\"></i>Reminder Status\n                            </h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <canvas id=\"reminderStatusChart\"></canvas>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-success text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-chart-bar me-2\"></i>Top Users by Logins\n                            </h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <canvas id=\"loginChart\"></canvas>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Top User Section -->\n            <?php if ($topUser && $topUser['reminder_count'] > 0): ?>\n            <div class=\"row mb-4\">\n                <div class=\"col-md-12\">\n                    <div class=\"alert alert-success border-0 shadow-sm\">\n                        <h5 class=\"alert-heading\">\n                            <i class=\"fas fa-trophy text-warning me-2\"></i>\n                            Most Active User\n                        </h5>\n                        <p class=\"mb-0\">\n                            <strong><?php echo htmlspecialchars($topUser['username']); ?></strong> \n                            has the most reminders with <strong><?php echo $topUser['reminder_count']; ?></strong> \n                            <?php echo $topUser['reminder_count'] == 1 ? 'reminder' : 'reminders'; ?>.\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <?php endif; ?>\n\n            <!-- Recent Activity and Login Stats -->\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-dark text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-history me-2\"></i>Recent Activity\n                            </h5>\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <div class=\"list-group list-group-flush\">\n                                <?php foreach (array_slice($recentActivity, 0, 10) as $activity): ?>\n                                    <div class=\"list-group-item\">\n                                        <div class=\"d-flex w-100 justify-content-between\">\n                                            <h6 class=\"mb-1\">\n                                                <i class=\"fas fa-<?php echo $activity['activity_type'] == 'login' ? 'sign-in-alt' : 'plus-circle'; ?> me-2 text-<?php echo $activity['activity_type'] == 'login' ? 'primary' : 'success'; ?>\"></i>\n                                                <?php echo htmlspecialchars($activity['username']); ?>\n                                            </h6>\n                                            <small class=\"text-muted\"><?php echo date('M j, Y g:i A', strtotime($activity['activity_time'])); ?></small>\n                                        </div>\n                                        <p class=\"mb-1\"><?php echo htmlspecialchars($activity['details']); ?></p>\n                                    </div>\n                                <?php endforeach; ?>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-info text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-chart-line me-2\"></i>Login Statistics\n                            </h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <?php foreach (array_slice($loginStats, 0, 5) as $stat): ?>\n                                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                                    <div>\n                                        <strong><?php echo htmlspecialchars($stat['username']); ?></strong><br>\n                                        <small class=\"text-muted\">Last: <?php echo date('M j', strtotime($stat['last_login'])); ?></small>\n                                    </div>\n                                    <span class=\"badge bg-primary rounded-pill\"><?php echo $stat['login_count']; ?></span>\n                                </div>\n                            <?php endforeach; ?>\n                            <div class=\"mt-3\">\n                                <a href=\"/reports/loginReport\" class=\"btn btn-sm btn-outline-info w-100\">\n                                    <i class=\"fas fa-external-link-alt me-1\"></i>View Full Report\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Include Chart.js -->\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n// Reminder Status Pie Chart\nconst reminderCtx = document.getElementById('reminderStatusChart').getContext('2d');\nnew Chart(reminderCtx, {\n    type: 'doughnut',\n    data: {\n        labels: ['Completed', 'Pending'],\n        datasets: [{\n            data: [<?php echo $stats['completed_reminders']; ?>, <?php echo $stats['pending_reminders']; ?>],\n            backgroundColor: ['#28a745', '#ffc107'],\n            borderWidth: 2,\n            borderColor: '#fff'\n        }]\n    },\n    options: {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n            }\n        }\n    }\n});\n\n// Login Stats Bar Chart\nconst loginCtx = document.getElementById('loginChart').getContext('2d');\nnew Chart(loginCtx, {\n    type: 'bar',\n    data: {\n        labels: [<?php echo implode(',', array_map(function($stat) { return '\"' . addslashes($stat['username']) . '\"'; }, array_slice($loginStats, 0, 5))); ?>],\n        datasets: [{\n            label: 'Logins',\n            data: [<?php echo implode(',', array_map(function($stat) { return $stat['login_count']; }, array_slice($loginStats, 0, 5))); ?>],\n            backgroundColor: '#007bff',\n            borderColor: '#0056b3',\n            borderWidth: 1\n        }]\n    },\n    options: {\n        responsive: true,\n        scales: {\n            y: {\n                beginAtZero: true,\n                ticks: {\n                    stepSize: 1\n                }\n            }\n        },\n        plugins: {\n            legend: {\n                display: false\n            }\n        }\n    }\n});\n</script>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":10412},"app/views/reports/login-report.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1 class=\"display-6\">\n                    <i class=\"fas fa-sign-in-alt text-info me-2\"></i>\n                    Login Report\n                    <small class=\"text-muted fs-6\">User authentication statistics</small>\n                </h1>\n                <a href=\"/reports\" class=\"btn btn-outline-secondary\">\n                    <i class=\"fas fa-arrow-left me-2\"></i>Back to Reports\n                </a>\n            </div>\n\n            <div class=\"card border-0 shadow\">\n                <div class=\"card-header bg-info text-white\">\n                    <h5 class=\"mb-0\">\n                        <i class=\"fas fa-chart-line me-2\"></i>\n                        Login Attempts by User\n                    </h5>\n                </div>\n                <div class=\"card-body p-0\">\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-hover mb-0\">\n                            <thead class=\"bg-light\">\n                                <tr>\n                                    <th>Username</th>\n                                    <th>Successful Logins</th>\n                                    <th>Failed Attempts</th>\n                                    <th>Total Attempts</th>\n                                    <th>Success Rate</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <?php \n                                $userSummary = [];\n                                foreach ($loginStats as $stat) {\n                                    if (!isset($userSummary[$stat['username']])) {\n                                        $userSummary[$stat['username']] = [\n                                            'good' => 0,\n                                            'bad' => 0\n                                        ];\n                                    }\n                                    $userSummary[$stat['username']][$stat['status']] = $stat['attempt_count'];\n                                }\n\n                                foreach ($userSummary as $username => $stats):\n                                    $total = $stats['good'] + $stats['bad'];\n                                    $successRate = $total > 0 ? ($stats['good'] / $total) * 100 : 0;\n                                ?>\n                                    <tr>\n                                        <td>\n                                            <strong><?php echo htmlspecialchars($username); ?></strong>\n                                            <?php if ($username === 'admin'): ?>\n                                                <span class=\"badge bg-danger ms-2\">Admin</span>\n                                            <?php endif; ?>\n                                        </td>\n                                        <td>\n                                            <span class=\"badge bg-success rounded-pill\"><?php echo $stats['good']; ?></span>\n                                        </td>\n                                        <td>\n                                            <span class=\"badge bg-danger rounded-pill\"><?php echo $stats['bad']; ?></span>\n                                        </td>\n                                        <td>\n                                            <span class=\"badge bg-primary rounded-pill\"><?php echo $total; ?></span>\n                                        </td>\n                                        <td>\n                                            <div class=\"d-flex align-items-center\">\n                                                <div class=\"progress me-2\" style=\"width: 100px; height: 20px;\">\n                                                    <div class=\"progress-bar bg-<?php echo $successRate >= 80 ? 'success' : ($successRate >= 60 ? 'warning' : 'danger'); ?>\" \n                                                         role=\"progressbar\" \n                                                         style=\"width: <?php echo $successRate; ?>%\"\n                                                         aria-valuenow=\"<?php echo $successRate; ?>\" \n                                                         aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                    </div>\n                                                </div>\n                                                <span class=\"fw-bold\"><?php echo number_format($successRate, 1); ?>%</span>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                <?php endforeach; ?>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":5116},"app/views/reports/user-stats.php":{"content":"<?php require 'app/views/templates/header.php'; ?>\n\n<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1 class=\"display-6\">\n                    <i class=\"fas fa-users text-success me-2\"></i>\n                    User Statistics\n                    <small class=\"text-muted fs-6\">Reminder usage by user</small>\n                </h1>\n                <a href=\"/reports\" class=\"btn btn-outline-secondary\">\n                    <i class=\"fas fa-arrow-left me-2\"></i>Back to Reports\n                </a>\n            </div>\n\n            <div class=\"row mb-4\">\n                <div class=\"col-md-8\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-success text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-chart-bar me-2\"></i>\n                                User Reminder Statistics\n                            </h5>\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <?php if (empty($userStats)): ?>\n                                <div class=\"text-center py-5\">\n                                    <i class=\"fas fa-users-slash fa-3x text-muted mb-3\"></i>\n                                    <h4 class=\"text-muted\">No Users Found</h4>\n                                    <p class=\"text-muted\">No users have been registered yet.</p>\n                                </div>\n                            <?php else: ?>\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-hover mb-0\">\n                                        <thead class=\"bg-light\">\n                                            <tr>\n                                                <th>Rank</th>\n                                                <th>Username</th>\n                                                <th>Total Reminders</th>\n                                                <th>Completed</th>\n                                                <th>Pending</th>\n                                                <th>Completion Rate</th>\n                                                <th>Progress</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <?php \n                                            $rank = 1;\n                                            foreach ($userStats as $stat): \n                                                $completionRate = $stat['total_reminders'] > 0 ? ($stat['completed'] / $stat['total_reminders']) * 100 : 0;\n                                            ?>\n                                                <tr>\n                                                    <td>\n                                                        <?php if ($rank == 1 && $stat['total_reminders'] > 0): ?>\n                                                            <i class=\"fas fa-trophy text-warning fa-lg\"></i>\n                                                        <?php elseif ($rank <= 3 && $stat['total_reminders'] > 0): ?>\n                                                            <i class=\"fas fa-medal text-secondary fa-lg\"></i>\n                                                        <?php else: ?>\n                                                            <span class=\"badge bg-light text-dark\"><?php echo $rank; ?></span>\n                                                        <?php endif; ?>\n                                                    </td>\n                                                    <td>\n                                                        <strong><?php echo htmlspecialchars($stat['username']); ?></strong>\n                                                        <?php if ($stat['username'] === 'admin'): ?>\n                                                            <span class=\"badge bg-danger ms-2\">Admin</span>\n                                                        <?php endif; ?>\n                                                    </td>\n                                                    <td>\n                                                        <span class=\"badge bg-primary rounded-pill\"><?php echo $stat['total_reminders']; ?></span>\n                                                    </td>\n                                                    <td>\n                                                        <span class=\"badge bg-success rounded-pill\"><?php echo $stat['completed']; ?></span>\n                                                    </td>\n                                                    <td>\n                                                        <span class=\"badge bg-warning rounded-pill\"><?php echo $stat['pending']; ?></span>\n                                                    </td>\n                                                    <td>\n                                                        <span class=\"fw-bold <?php echo $completionRate >= 70 ? 'text-success' : ($completionRate >= 40 ? 'text-warning' : 'text-danger'); ?>\">\n                                                            <?php echo number_format($completionRate, 1); ?>%\n                                                        </span>\n                                                    </td>\n                                                    <td style=\"width: 150px;\">\n                                                        <?php if ($stat['total_reminders'] > 0): ?>\n                                                            <div class=\"progress\" style=\"height: 20px;\">\n                                                                <div class=\"progress-bar bg-success\" role=\"progressbar\" \n                                                                     style=\"width: <?php echo $completionRate; ?>%\" \n                                                                     aria-valuenow=\"<?php echo $completionRate; ?>\" \n                                                                     aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                                    <?php if ($completionRate > 15): ?>\n                                                                        <?php echo number_format($completionRate, 0); ?>%\n                                                                    <?php endif; ?>\n                                                                </div>\n                                                            </div>\n                                                        <?php else: ?>\n                                                            <small class=\"text-muted\">No reminders</small>\n                                                        <?php endif; ?>\n                                                    </td>\n                                                </tr>\n                                            <?php \n                                            $rank++;\n                                            endforeach; \n                                            ?>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            <?php endif; ?>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"card border-0 shadow\">\n                        <div class=\"card-header bg-info text-white\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-chart-pie me-2\"></i>\n                                User Distribution\n                            </h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <canvas id=\"userDistributionChart\"></canvas>\n                        </div>\n                    </div>\n\n                    <?php \n                    $topUsers = array_slice(array_filter($userStats, function($stat) { return $stat['total_reminders'] > 0; }), 0, 3);\n                    if (!empty($topUsers)): \n                    ?>\n                    <div class=\"card border-0 shadow mt-4\">\n                        <div class=\"card-header bg-warning text-dark\">\n                            <h5 class=\"mb-0\">\n                                <i class=\"fas fa-star me-2\"></i>\n                                Top Performers\n                            </h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <?php foreach ($topUsers as $index => $user): ?>\n                                <div class=\"d-flex align-items-center mb-3\">\n                                    <div class=\"me-3\">\n                                        <?php if ($index == 0): ?>\n                                            <i class=\"fas fa-trophy text-warning fa-2x\"></i>\n                                        <?php elseif ($index == 1): ?>\n                                            <i class=\"fas fa-medal text-secondary fa-2x\"></i>\n                                        <?php else: ?>\n                                            <i class=\"fas fa-award text-danger fa-2x\"></i>\n                                        <?php endif; ?>\n                                    </div>\n                                    <div>\n                                        <h6 class=\"mb-1\"><?php echo htmlspecialchars($user['username']); ?></h6>\n                                        <small class=\"text-muted\">\n                                            <?php echo $user['total_reminders']; ?> reminders, \n                                            <?php echo number_format(($user['completed'] / $user['total_reminders']) * 100, 1); ?>% complete\n                                        </small>\n                                    </div>\n                                </div>\n                            <?php endforeach; ?>\n                        </div>\n                    </div>\n                    <?php endif; ?>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Include Chart.js -->\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n<script>\n// User Distribution Chart\nconst ctx = document.getElementById('userDistributionChart').getContext('2d');\n\n// Prepare data for chart\nconst userLabels = [<?php echo implode(',', array_map(function($stat) { \n    return '\"' . addslashes($stat['username']) . ' (' . $stat['total_reminders'] . ')\"'; \n}, array_slice(array_filter($userStats, function($s) { return $s['total_reminders'] > 0; }), 0, 8))); ?>];\n\nconst userData = [<?php echo implode(',', array_map(function($stat) { \n    return $stat['total_reminders']; \n}, array_slice(array_filter($userStats, function($s) { return $s['total_reminders'] > 0; }), 0, 8))); ?>];\n\nconst colors = [\n    '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',\n    '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\n];\n\nnew Chart(ctx, {\n    type: 'doughnut',\n    data: {\n        labels: userLabels,\n        datasets: [{\n            data: userData,\n            backgroundColor: colors.slice(0, userData.length),\n            borderWidth: 2,\n            borderColor: '#fff'\n        }]\n    },\n    options: {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    boxWidth: 12,\n                    padding: 8,\n                    font: {\n                        size: 10\n                    }\n                }\n            }\n        }\n    }\n});\n</script>\n\n<?php require 'app/views/templates/footer.php'; ?> ","size_bytes":11858},"app/views/schedule/index.php":{"content":"<?php\n// app/views/schedule/index.php\nrequire 'app/views/templates/header.php';\nrequire 'app/views/templates/spinner.php';\n?>\n<style>\n:root {\n  --primary: #3b82f6;\n  --primary-hover: #2563eb;\n  --danger: #ef4444;\n  --danger-hover: #dc2626;\n  --success: #10b981;\n  --warning: #f59e0b;\n  --gray-50: #f9fafb;\n  --gray-100: #f3f4f6;\n  --gray-200: #e5e7eb;\n  --gray-300: #d1d5db;\n  --gray-400: #9ca3af;\n  --gray-500: #6b7280;\n  --gray-700: #374151;\n  --gray-900: #111827;\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  --radius: 0.375rem;\n  --radius-lg: 0.5rem;\n  --transition: all 0.2s ease;\n}\n\n.schedule-container { background: var(--gray-50); min-height: 100vh; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }\n.page-header { margin-bottom: 2rem; }\n.page-title { font-size: 1.875rem; font-weight: 700; color: var(--gray-900); margin-bottom: 0.5rem; }\n.page-subtitle { color: var(--gray-500); font-size: 1.125rem; }\n\n.btn { display: inline-flex; align-items: center; justify-content: center; border-radius: var(--radius); padding: 0.625rem 1.25rem; font-weight: 500; font-size: 0.875rem; border: 1px solid transparent; cursor: pointer; transition: var(--transition); gap: 0.5rem; }\n.btn:hover { transform: translateY(-1px); }\n.btn-sm { padding: 0.5rem 0.875rem; font-size: 0.8125rem; }\n.btn-primary { background: var(--primary); color: white; box-shadow: var(--shadow-sm); }\n.btn-primary:hover { background: var(--primary-hover); box-shadow: var(--shadow); }\n.btn-outline { background: transparent; border: 1px solid var(--gray-300); color: var(--gray-700); }\n.btn-outline:hover { background: var(--gray-50); }\n.btn-danger { background: var(--danger); color: white; }\n.btn-danger:hover { background: var(--danger-hover); }\n.btn-success { background: var(--success); color: white; }\n.btn-success:hover { background: #0da271; }\n.btn-icon { padding: 0.5rem; border-radius: var(--radius); }\n\n.badge { display: inline-block; padding: 0.35rem 0.65rem; font-size: 0.75rem; font-weight: 600; line-height: 1; text-align: center; white-space: nowrap; vertical-align: baseline; border-radius: 9999px; }\n.badge-success { background: #e8f8ee; border: 1px solid #bfead3; color: #0f5132; }\n.badge-warning { background: #fef3c7; border: 1px solid #fde68a; color: #92400e; }\n\n.week-controls { display: flex; align-items: center; gap: 1rem; flex-wrap: wrap; }\n.week-navigation { display: flex; align-items: center; gap: 0.5rem; }\n.week-nav-btn { background: var(--gray-100); border: 1px solid var(--gray-300); border-radius: var(--radius); padding: 0.5rem; color: var(--gray-700); cursor: pointer; transition: var(--transition); display: flex; align-items: center; justify-content: center; }\n.week-nav-btn:hover { background: var(--gray-200); }\n.week-display { font-weight: 500; color: var(--gray-900); min-width: 260px; text-align: center; font-size: 0.875rem; }\n.publish-section { display: flex; align-items: center; gap: 0.75rem; }\n\n/* tools dropdown */\n.tools-wrap { position: relative; }\n.tools-menu { display: none; position: absolute; right: 0; top: 110%; background:#fff; border:1px solid var(--gray-200); border-radius: .5rem; box-shadow: var(--shadow); min-width: 240px; z-index: 10; }\n.tools-menu.show { display: block; }\n.tools-item { width:100%; text-align:left; background:#fff; border:0; padding:.6rem .9rem; font-size:.875rem; color:var(--gray-700); }\n.tools-item:hover { background: var(--gray-50); }\n\n.schedule-grid { background: #fff; border-radius: var(--radius-lg); overflow: hidden; box-shadow: var(--shadow); margin-bottom: 2rem; }\n.grid-header { display: grid; grid-template-columns: 240px repeat(7, 1fr); background: var(--gray-50); border-bottom: 1px solid var(--gray-200); }\n.grid-header-cell { padding: 1rem 0.75rem; font-weight: 600; color: var(--gray-700); font-size: 0.875rem; text-align: center; border-right: 1px solid var(--gray-200); }\n.grid-header-cell:first-child { text-align: left; background: var(--gray-100); }\n.grid-body { max-height: 70vh; overflow-y: auto; }\n.grid-row { display: grid; grid-template-columns: 240px repeat(7, 1fr); border-bottom: 1px solid var(--gray-200); min-height: 120px; }\n.employee-cell { background: var(--gray-50); padding: 1rem 0.75rem; border-right: 1px solid var(--gray-200); display: flex; flex-direction: column; gap: 0.25rem; }\n.employee-name { font-weight: 600; color: var(--gray-900); font-size: 0.9rem; }\n.employee-role { color: var(--gray-500); font-size: 0.8rem; }\n.employee-hours { color: var(--gray-500); font-size: 0.75rem; margin-top: auto; }\n\n.day-cell { padding: 0.5rem; border-right: 1px solid var(--gray-200); position: relative; background: #fff; min-height: 120px; }\n.shift-block { background: var(--primary); color: #fff; border-radius: var(--radius); padding: 0.5rem; margin-bottom: 0.25rem; font-size: 0.75rem; position: relative; cursor: pointer; transition: var(--transition); box-shadow: var(--shadow-sm); }\n.shift-block:hover { background: var(--primary-hover); transform: translateY(-1px); box-shadow: var(--shadow); }\n.shift-time { font-weight: 700; margin-bottom: 0.25rem; }\n.shift-role { opacity: 0.95; font-size: 0.72rem; }\n.shift-actions { position:absolute; top:.25rem; right:.25rem; display:flex; gap:.25rem; opacity:0; transition:opacity .2s; }\n.shift-block:hover .shift-actions { opacity:1; }\n.shift-mini { border:0; background:rgba(255,255,255,.25); color:#fff; width:22px; height:22px; border-radius:999px; font-size:.75rem; display:flex; align-items:center; justify-content:center; }\n\n.add-shift-area { position: absolute; bottom: 0.5rem; left: 0.5rem; right: 0.5rem; }\n.add-shift-btn { width: 100%; background: transparent; border: 2px dashed var(--gray-300); color: var(--gray-500); border-radius: var(--radius); padding: 0.5rem; font-size: 0.75rem; cursor: pointer; transition: var(--transition); display: flex; align-items: center; justify-content: center; gap: 0.25rem; }\n.add-shift-btn:hover { border-color: var(--primary); color: var(--primary); background: #eff6ff; }\n\n.modal-content { border: none; border-radius: var(--radius-lg); box-shadow: var(--shadow-md); }\n.modal-header { border-bottom: 1px solid var(--gray-200); padding: 1.25rem 1.5rem; }\n.modal-title { margin-bottom: 0; line-height: 1.5; font-weight: 600; color: var(--gray-900); display: flex; align-items: center; gap: 0.5rem; }\n.modal-body { padding: 1.5rem; }\n.modal-footer { border-top: 1px solid var(--gray-200); padding: 1rem 1.5rem; gap: 0.75rem; }\n\n.form-group { margin-bottom: 1rem; }\n.form-label { display: block; font-size: 0.875rem; font-weight: 600; color: var(--gray-700); margin-bottom: 0.5rem; }\n.form-control { width: 100%; border: 1px solid var(--gray-300); border-radius: var(--radius); padding: 0.625rem 0.875rem; font-size: 0.875rem; transition: var(--transition); }\n.form-control:focus { outline: none; border-color: var(--primary); box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15); }\n.role-select { appearance: none; background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.2em 1.2em; padding-right: 2.5rem; }\n.time-input-group { display: flex; gap: 0.5rem; align-items: center; }\n.time-separator { color: var(--gray-500); font-weight: 600; }\n.day-selector { padding: 0.375rem 0.75rem; border-radius: var(--radius); font-size: 0.75rem; font-weight: 500; cursor: pointer; transition: var(--transition); }\n\n.empty-state { padding: 3rem 1rem; text-align: center; color: var(--gray-500); }\n.empty-state-icon { font-size: 2.5rem; margin-bottom: 1rem; opacity: 0.5; }\n.empty-state-text { margin-bottom: 1.5rem; }\n.loading-shimmer { background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%); background-size: 200% 100%; animation: loading 1.5s infinite; border-radius: var(--radius); height: 1rem; margin-bottom: 0.5rem; }\n@keyframes loading { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }\n\n.fade-in { animation: fadeIn 0.3s ease-in; }\n@keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }\n\n/* Responsive */\n@media (max-width: 1200px) { .grid-header, .grid-row { grid-template-columns: 200px repeat(7, 1fr); } }\n@media (max-width: 1024px) { .schedule-grid { overflow-x: auto; } .grid-header, .grid-row { min-width: 1000px; } }\n@media (max-width: 768px) {\n  .week-controls { flex-direction: column; align-items: flex-start; gap: 1rem; }\n  .publish-section { width: 100%; justify-content: space-between; }\n  .modal-dialog { margin: 1rem; }\n}\n@media (max-width: 640px) {\n  .container-fluid { padding-left: 1rem; padding-right: 1rem; }\n  .time-input-group { flex-direction: column; align-items: stretch; }\n  .time-separator { text-align: center; }\n}\n</style>\n\n<div class=\"schedule-container\">\n  <div class=\"container-fluid px-3 px-md-4 py-4\">\n    <div class=\"d-flex align-items-center justify-content-between page-header\">\n      <div>\n        <h1 class=\"page-title\">Schedule</h1>\n        <p class=\"page-subtitle\">Manage your team's work schedule</p>\n      </div>\n\n      <div class=\"week-controls\">\n        <div class=\"week-navigation\" role=\"group\" aria-label=\"Week navigation\">\n          <button class=\"week-nav-btn\" id=\"prevWeekBtn\" title=\"Previous week\" aria-label=\"Previous week\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/></svg>\n          </button>\n          <div class=\"week-display\" id=\"weekDisplay\" aria-live=\"polite\"></div>\n          <button class=\"week-nav-btn\" id=\"nextWeekBtn\" title=\"Next week\" aria-label=\"Next week\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/></svg>\n          </button>\n        </div>\n\n        <div class=\"publish-section\">\n          <div class=\"tools-wrap\" id=\"toolsWrap\" style=\"display:none;\">\n            <button class=\"btn btn-outline btn-sm\" id=\"toolsBtn\">\n              <i class=\"bi bi-tools\"></i> Tools\n            </button>\n            <div class=\"tools-menu\" id=\"toolsMenu\">\n              <button class=\"tools-item\" id=\"copyPrevToThisBtn\">Copy from previous week → this</button>\n              <button class=\"tools-item\" id=\"copyThisToNextBtn\">Copy this week → next</button>\n              <button class=\"tools-item\" id=\"openCopyWeekModalBtn\">Copy week… (pick weeks)</button>\n              <hr class=\"m-0\">\n              <button class=\"tools-item\" id=\"openCopyUserModalBtn\">Copy shifts: User → User</button>\n            </div>\n          </div>\n          <span class=\"badge badge-warning\" id=\"statusIndicator\">Draft</span>\n          <button class=\"btn btn-primary\" id=\"publishBtn\">Publish</button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"schedule-grid\">\n      <div class=\"grid-header\">\n        <div class=\"grid-header-cell\">Team members</div>\n        <div class=\"grid-header-cell\" data-day=\"0\">Mon</div>\n        <div class=\"grid-header-cell\" data-day=\"1\">Tue</div>\n        <div class=\"grid-header-cell\" data-day=\"2\">Wed</div>\n        <div class=\"grid-header-cell\" data-day=\"3\">Thu</div>\n        <div class=\"grid-header-cell\" data-day=\"4\">Fri</div>\n        <div class=\"grid-header-cell\" data-day=\"5\">Sat</div>\n        <div class=\"grid-header-cell\" data-day=\"6\">Sun</div>\n      </div>\n      <div class=\"grid-body\" id=\"scheduleGridBody\"></div>\n    </div>\n\n    <div id=\"emptyState\" class=\"empty-state\" style=\"display: none;\">\n      <div class=\"empty-state-icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M6.5 1A1.5 1.5 0 0 0 5 2.5V3H1.5A1.5 1.5 0 0 0 0 4.5v8A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 14.5 3H11v-.5A1.5 1.5 0 0 0 9.5 1h-3zm0 1h3a.5.5 0 0 1 .5.5V3H6v-.5a.5.5 0 0 1 .5-.5zm1.886 6.914L15 7.151V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V7.15l6.614 1.764a1.5 1.5 0 0 0 .772 0zM1.5 4h13a.5.5 0 0 1 .5.5v1.616L8.129 7.948a.5.5 0 0 1-.258 0L1 6.116V4.5a.5.5 0 0 1 .5-.5z\"/></svg>\n      </div>\n      <div class=\"empty-state-text\">No team members available for scheduling</div>\n    </div>\n  </div>\n</div>\n\n<!-- Add Shift Modal -->\n<div class=\"modal fade\" id=\"shiftModal\" tabindex=\"-1\" aria-labelledby=\"shiftModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 id=\"shiftModalLabel\" class=\"modal-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/></svg>\n          Add Shift\n        </h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" title=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label class=\"form-label\" for=\"startTime\">Time</label>\n          <div class=\"time-input-group\">\n            <input type=\"time\" id=\"startTime\" class=\"form-control\" value=\"09:00\">\n            <span class=\"time-separator\">–</span>\n            <input type=\"time\" id=\"endTime\" class=\"form-control\" value=\"17:00\">\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\" for=\"shiftRole\">Role</label>\n          <select id=\"shiftRole\" class=\"form-control role-select\"></select>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">Apply to:</label>\n          <div class=\"d-flex gap-2 flex-wrap mt-2\">\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"1\">Mon</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"2\">Tue</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"3\">Wed</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"4\">Thu</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"5\">Fri</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"6\">Sat</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm day-selector\" data-day=\"0\">Sun</button>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\" for=\"shiftNotes\">Shift Notes:</label>\n          <textarea id=\"shiftNotes\" class=\"form-control\" rows=\"3\" placeholder=\"Notes employees will see.\"></textarea>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"saveShiftBtn\">Add Shift</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Copy Week Modal -->\n<div class=\"modal fade\" id=\"copyWeekModal\" tabindex=\"-1\" aria-labelledby=\"copyWeekModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 id=\"copyWeekModalLabel\" class=\"modal-title\">Copy Week</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label class=\"form-label\">Source week (Monday)</label>\n          <input type=\"date\" id=\"cwSource\" class=\"form-control\" disabled>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">Target week (Monday)</label>\n          <input type=\"date\" id=\"cwTarget\" class=\"form-control\">\n        </div>\n        <div class=\"form-check mt-2\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"cwOverwrite\">\n          <label class=\"form-check-label\" for=\"cwOverwrite\">Overwrite target week (delete existing shifts)</label>\n        </div>\n        <small class=\"text-muted d-block mt-2\">Tip: target must be a Monday—use the date picker.</small>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"cwDoCopyBtn\">Copy</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Copy User→User Modal -->\n<div class=\"modal fade\" id=\"copyUserModal\" tabindex=\"-1\" aria-labelledby=\"copyUserModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 id=\"copyUserModalLabel\" class=\"modal-title\">Copy Shifts: User → User (this week)</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label class=\"form-label\">From user</label>\n          <select id=\"cuFrom\" class=\"form-control\"></select>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">To user</label>\n          <select id=\"cuTo\" class=\"form-control\"></select>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">Days</label>\n          <div class=\"d-flex gap-2 flex-wrap mt-1\" id=\"cuDays\">\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"1\">Mon</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"2\">Tue</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"3\">Wed</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"4\">Thu</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"5\">Fri</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"6\">Sat</button>\n            <button type=\"button\" class=\"btn btn-outline btn-sm cu-day\" data-day=\"0\">Sun</button>\n          </div>\n        </div>\n        <div class=\"form-check mt-1\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"cuOverwrite\">\n          <label class=\"form-check-label\" for=\"cuOverwrite\">Overwrite target user’s shifts for chosen days</label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"cuDoCopyBtn\">Copy shifts</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Copy Single Shift Modal -->\n<div class=\"modal fade\" id=\"copyOneModal\" tabindex=\"-1\" aria-labelledby=\"copyOneModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 id=\"copyOneModalLabel\" class=\"modal-title\">Copy This Shift</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <input type=\"hidden\" id=\"coShiftId\">\n        <div class=\"form-group\">\n          <label class=\"form-label\">To user</label>\n          <select id=\"coTo\" class=\"form-control\"></select>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">Target date</label>\n          <input type=\"date\" id=\"coDate\" class=\"form-control\">\n        </div>\n        <small class=\"text-muted d-block mt-2\">Time and notes will be copied; you can move it to any date.</small>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"coDoCopyBtn\">Copy</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<?php require_once 'app/views/templates/footer.php'; ?>\n\n<script>\n// ===== Spinner-aware strict JSON fetch =====\nasync function fetchJSON(url, options = {}) {\n  Spinner.show();\n  try {\n    const res = await fetch(url, { headers: { 'Content-Type': 'application/json' }, ...options });\n    const text = await res.text();\n    if (!res.ok) throw new Error(text || `HTTP ${res.status}`);\n\n    let data;\n    try { data = JSON.parse(text); } catch (e) { console.error('[fetchJSON] Invalid JSON:', text.slice(0, 400)); throw e; }\n    return data;\n  } finally {\n    Spinner.hide();\n  }\n}\n\n// ===== State =====\nlet employees = [];\nlet shifts = [];\nlet currentWeekStart = null;\nlet isAdmin = false;\nlet shiftModal, copyWeekModal, copyUserModal, copyOneModal;\nlet currentEmployee = null;\nlet selectedDays = new Set();\nlet cuSelectedDays = new Set();\n\n// ===== Dates =====\nfunction mondayOf(dateStr) {\n  const d = new Date(dateStr + 'T12:00:00');\n  const dow = d.getDay(); // 0..6 (Sun..Sat)\n  const offset = (dow === 0) ? 6 : (dow - 1);\n  d.setDate(d.getDate() - offset);\n  return d.toISOString().slice(0,10);\n}\nfunction nextMonday(ymd) {\n  const d = new Date(ymd + 'T12:00:00');\n  const dow = d.getDay();            // 0=Sun..6=Sat\n  const add = (8 - (dow || 7));      // days to next Mon\n  d.setDate(d.getDate() + add);\n  return d.toISOString().slice(0,10);\n}\nfunction formatWeekDisplay(mondayStr) {\n  const mon = new Date(mondayStr + 'T12:00:00');\n  const sun = new Date(mon); sun.setDate(sun.getDate() + 6);\n  const m = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  const same = mon.getMonth() === sun.getMonth();\n  const left  = `${mon.toLocaleDateString('en-US',{weekday:'short'})}, ${m[mon.getMonth()]} ${mon.getDate()}`;\n  const right = `${sun.toLocaleDateString('en-US',{weekday:'short'})}, ${same ? '' : (m[sun.getMonth()]+' ')}${sun.getDate()}`;\n  return `Week of ${left} - ${right}`;\n}\nfunction weekDays(mondayStr) {\n  const mon = new Date(mondayStr + 'T12:00:00');\n  const m = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  const arr = [];\n  for (let i=0;i<7;i++) {\n    const d = new Date(mon); d.setDate(d.getDate()+i);\n    arr.push({ date: d.toISOString().slice(0,10), display: `${d.toLocaleDateString('en-US',{weekday:'short'})}, ${m[d.getMonth()]} ${d.getDate()}` });\n  }\n  return arr;\n}\n\n// ===== Init =====\ndocument.addEventListener('DOMContentLoaded', async () => {\n  shiftModal    = new bootstrap.Modal(document.getElementById('shiftModal'));\n  copyWeekModal = new bootstrap.Modal(document.getElementById('copyWeekModal'));\n  copyUserModal = new bootstrap.Modal(document.getElementById('copyUserModal'));\n  copyOneModal  = new bootstrap.Modal(document.getElementById('copyOneModal'));\n\n  const today = new Date().toISOString().slice(0,10);\n  currentWeekStart = mondayOf(today);\n\n  document.getElementById('prevWeekBtn').addEventListener('click', () => changeWeek(-7));\n  document.getElementById('nextWeekBtn').addEventListener('click', () => changeWeek(7));\n  document.getElementById('publishBtn').addEventListener('click', togglePublish);\n  document.getElementById('saveShiftBtn').addEventListener('click', saveShift);\n\n  // day selectors (Add Shift modal)\n  document.querySelectorAll('.day-selector').forEach((btn) => {\n    btn.addEventListener('click', (e) => {\n      const b = e.currentTarget;\n      const day = b.dataset.day;\n      if (selectedDays.has(day)) {\n        selectedDays.delete(day); b.classList.remove('btn-primary'); b.classList.add('btn-outline');\n      } else {\n        selectedDays.add(day); b.classList.remove('btn-outline'); b.classList.add('btn-primary');\n      }\n    });\n  });\n\n  // Tools dropdown (admin only)\n  const toolsBtn  = document.getElementById('toolsBtn');\n  const toolsMenu = document.getElementById('toolsMenu');\n  if (toolsBtn) {\n    toolsBtn.addEventListener('click', () => toolsMenu.classList.toggle('show'));\n    document.addEventListener('click', (e) => { if (!document.getElementById('toolsWrap').contains(e.target)) toolsMenu.classList.remove('show'); });\n  }\n\n  // Quick tools actions\n  document.getElementById('copyPrevToThisBtn').addEventListener('click', () => copyPrevToThis());\n  document.getElementById('copyThisToNextBtn').addEventListener('click', () => copyThisToNext());\n  document.getElementById('openCopyWeekModalBtn').addEventListener('click', () => openCopyWeekModal());\n  document.getElementById('openCopyUserModalBtn').addEventListener('click', () => openCopyUserModal());\n  document.getElementById('cwDoCopyBtn').addEventListener('click', () => doCopyWeek());\n  document.getElementById('cuDoCopyBtn').addEventListener('click', () => doCopyUser());\n  document.getElementById('coDoCopyBtn').addEventListener('click', () => doCopyOne());\n\n  // days pickers inside Copy User modal\n  document.querySelectorAll('.cu-day').forEach((b) => {\n    b.addEventListener('click', () => { \n      const d = b.dataset.day;\n      if (cuSelectedDays.has(d)) { cuSelectedDays.delete(d); b.classList.remove('btn-primary'); b.classList.add('btn-outline'); }\n      else { cuSelectedDays.add(d); b.classList.remove('btn-outline'); b.classList.add('btn-primary'); }\n    });\n  });\n\n  await loadEmployees();\n  await loadWeek();\n});\n\n// ===== Week nav =====\nfunction changeWeek(deltaDays) {\n  const cur = new Date(currentWeekStart + 'T12:00:00');\n  cur.setDate(cur.getDate() + deltaDays);\n  currentWeekStart = mondayOf(cur.toISOString().slice(0,10));\n  loadWeek();\n}\n\n// ===== Loads =====\nasync function loadEmployees() {\n  try { employees = await fetchJSON('/schedule/api?a=employees.list'); }\n  catch (e) { console.error('Error loading employees:', e); employees = []; }\n}\n\nasync function loadWeek() {\n  try {\n    const data = await fetchJSON(`/schedule/api?a=shifts.week&week=${currentWeekStart}`);\n    shifts  = data.shifts || [];\n    isAdmin = !!data.is_admin;\n\n    updateWeekHeader();\n    renderGrid();\n    await loadPublishStatus();\n\n    // show/hide tools for admin\n    const toolsWrap = document.getElementById('toolsWrap');\n    if (toolsWrap) toolsWrap.style.display = isAdmin ? 'block' : 'none';\n  } catch (e) {\n    console.error('Error loading week:', e);\n    showError('Failed to load schedule data');\n  }\n}\n\nasync function loadPublishStatus() {\n  try {\n    const status = await fetchJSON(`/schedule/api?a=publish.status&week=${currentWeekStart}`);\n    const ind = document.getElementById('statusIndicator');\n    const btn = document.getElementById('publishBtn');\n    if (status.published) { ind.textContent = 'Published'; ind.className = 'badge badge-success'; btn.textContent = 'Unpublish'; }\n    else { ind.textContent = 'Draft'; ind.className = 'badge badge-warning'; btn.textContent = 'Publish'; }\n    btn.style.display = isAdmin ? 'block' : 'none';\n  } catch (e) { console.error('Error loading publish status:', e); }\n}\n\n// ===== UI =====\nfunction updateWeekHeader() {\n  document.getElementById('weekDisplay').textContent = formatWeekDisplay(currentWeekStart);\n  const days = weekDays(currentWeekStart);\n  document.querySelectorAll('.grid-header-cell[data-day]').forEach((cell, idx) => { if (days[idx]) cell.textContent = days[idx].display; });\n\n  const active = employees.filter(emp => emp.is_active !== 0 && emp.is_active !== false);\n  const teamHeader = document.querySelector('.grid-header-cell:first-child');\n  if (teamHeader) teamHeader.textContent = `Team members (${active.length})`;\n}\n\nfunction renderGrid() {\n  const body = document.getElementById('scheduleGridBody');\n  const emptyState = document.getElementById('emptyState');\n  body.innerHTML = '';\n\n  const activeEmployees = employees.filter(emp => emp.is_active !== 0 && emp.is_active !== false);\n  if (activeEmployees.length === 0) { emptyState.style.display = 'block'; return; }\n  emptyState.style.display = 'none';\n\n  const days = weekDays(currentWeekStart);\n\n  activeEmployees.forEach(emp => {\n    const row = document.createElement('div');\n    row.className = 'grid-row fade-in';\n\n    const empCell = document.createElement('div');\n    empCell.className = 'employee-cell';\n\n    const empShifts = shifts.filter(s => s.employee_id === emp.id);\n    const hours = totalHours(empShifts);\n\n    empCell.innerHTML = `\n      <div class=\"d-flex align-items-center justify-content-between\">\n        <div>\n          <div class=\"employee-name\">${escapeHtml(emp.name)}</div>\n          <div class=\"employee-role\">${escapeHtml(emp.role_title || '')}</div>\n        </div>\n        ${isAdmin ? `<button class=\"btn btn-outline btn-sm\" title=\"Copy this user’s shifts to another user\" onclick=\"openCopyUserModal(${emp.id})\">Copy →</button>` : ''}\n      </div>\n      <div class=\"employee-hours\">${hours.toFixed(2)} hrs</div>\n    `;\n    row.appendChild(empCell);\n\n    days.forEach(day => {\n      const cell = document.createElement('div');\n      cell.className = 'day-cell';\n\n      const todays = empShifts.filter(s => (s.start_dt || '').slice(0,10) === day.date);\n      todays.forEach(shift => cell.appendChild(shiftBlock(shift)));\n\n      if (isAdmin) {\n        const add = document.createElement('div'); \n        add.className = 'add-shift-area';\n        const btn = document.createElement('button');\n        btn.className = 'add-shift-btn';\n        btn.innerHTML = `\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/></svg>\n          Add shift\n        `;\n        btn.addEventListener('click', () => openShiftModal(emp, day.date));\n        add.appendChild(btn);\n        cell.appendChild(add);\n      }\n      row.appendChild(cell);\n    });\n    body.appendChild(row);\n  });\n}\n\nfunction shiftBlock(shift) {\n  const div = document.createElement('div');\n  div.className = 'shift-block';\n  const t1 = (shift.start_dt || '').slice(11,16);\n  const t2 = (shift.end_dt   || '').slice(11,16);\n  div.innerHTML = `\n    <div class=\"shift-time\">${t1}-${t2}</div>\n    <div class=\"shift-role\">${escapeHtml(shift.notes || shift.employee_role || '')}</div>\n    ${isAdmin ? `\n      <div class=\"shift-actions\">\n        <button class=\"shift-mini\" title=\"Copy\" onclick=\"openCopyOne(${shift.id}, '${(shift.start_dt||'').slice(0,10)}')\">⎘</button>\n        <button class=\"shift-mini\" title=\"Delete\" onclick=\"deleteShift(${shift.id})\">×</button>\n      </div>` : ''}\n  `;\n  return div;\n}\n\nasync function loadRolesIntoModal() {\n  try {\n    const roles = await fetchJSON('/schedule/api?a=roles.list');\n    const sel = document.getElementById('shiftRole');\n    sel.innerHTML = '';\n    roles.forEach(r => { const o = document.createElement('option'); o.value = r.name; o.textContent = r.name; sel.appendChild(o); });\n  } catch (e) { console.error('Could not load roles:', e); }\n}\n\n// ===== Modal/CRUD =====\nasync function openShiftModal(emp, ymd) {\n  if (!isAdmin) return;\n  currentEmployee = emp;\n  selectedDays.clear();\n  document.querySelectorAll('.day-selector').forEach((b) => { b.classList.remove('btn-primary'); b.classList.add('btn-outline'); });\n\n  const dow = new Date(ymd + 'T12:00:00').getDay();\n  const pre = document.querySelector(`.day-selector[data-day=\"${dow}\"]`);\n  if (pre) { selectedDays.add(String(dow)); pre.classList.add('btn-primary'); pre.classList.remove('btn-outline'); }\n\n  await loadRolesIntoModal();\n\n  document.getElementById('startTime').value = '09:00';\n  document.getElementById('endTime').value   = '17:00';\n  document.getElementById('shiftRole').value = emp.role_title || '';\n  document.getElementById('shiftNotes').value = '';\n\n  shiftModal.show();\n}\n\nasync function saveShift() {\n  if (!currentEmployee || selectedDays.size === 0) { showError('Please select at least one day'); return; }\n  const startTime = document.getElementById('startTime').value;\n  const endTime   = document.getElementById('endTime').value;\n  const role      = document.getElementById('shiftRole').value;\n  const notes     = document.getElementById('shiftNotes').value;\n  if (!startTime || !endTime) { showError('Please select start and end times'); return; }\n\n  try {\n    const base = new Date(currentWeekStart + 'T12:00:00');\n    for (const dayStr of selectedDays) {\n      const dow = parseInt(dayStr, 10);\n      let offset; if (dow === 0) offset = 6; else offset = dow - 1;\n      const d = new Date(base); d.setDate(base.getDate() + offset);\n      const ymd = d.toISOString().slice(0,10);\n      const start_dt = `${ymd} ${startTime}:00`;\n      const end_dt   = `${ymd} ${endTime}:00`;\n      await fetchJSON('/schedule/api?a=shifts.create', { method: 'POST', body: JSON.stringify({ employee_id: currentEmployee.id, start_dt, end_dt, notes: notes || role }) });\n    }\n    shiftModal.hide();\n    await loadWeek();\n    showSuccess('Shift(s) added successfully');\n  } catch (e) { console.error('Error saving shift:', e); showError('Error saving shift: ' + e.message); }\n}\n\nasync function deleteShift(id) {\n  if (!isAdmin || !confirm('Are you sure you want to delete this shift?')) return;\n  try { await fetchJSON(`/schedule/api?a=shifts.delete&id=${id}`); await loadWeek(); showSuccess('Shift deleted successfully'); }\n  catch (e) { console.error('Error deleting shift:', e); showError('Error deleting shift: ' + e.message); }\n}\n\nasync function togglePublish() {\n  if (!isAdmin) return;\n  try {\n    const status = await fetchJSON(`/schedule/api?a=publish.status&week=${currentWeekStart}`);\n    const newStatus = !status.published;\n    await fetchJSON('/schedule/api?a=publish.set', { method: 'POST', body: JSON.stringify({ week: currentWeekStart, published: newStatus ? 1 : 0 }) });\n    await loadPublishStatus();\n    showSuccess(`Schedule ${newStatus ? 'published' : 'unpublished'} successfully`);\n  } catch (e) { console.error('Error toggling publish status:', e); showError('Error: ' + e.message); }\n}\n\n// ===== Tools: Copy week / user / one =====\nfunction openCopyWeekModal() {\n  if (!isAdmin) return;\n  document.getElementById('cwSource').value = currentWeekStart;\n  document.getElementById('cwTarget').value = nextMonday(currentWeekStart);\n  document.getElementById('cwOverwrite').checked = false;\n  copyWeekModal.show();\n}\nasync function doCopyWeek() {\n  const source_week = document.getElementById('cwSource').value;\n  const target_week = document.getElementById('cwTarget').value;\n  const overwrite   = document.getElementById('cwOverwrite').checked ? 1 : 0;\n  if (!target_week) { showError('Pick a target Monday'); return; }\n  try {\n    await fetchJSON('/schedule/api?a=shifts.copyWeek', { method:'POST', body: JSON.stringify({ source_week, target_week, overwrite }) });\n    copyWeekModal.hide();\n    await loadWeek(); // in case you copied to current week\n    showSuccess('Week copied');\n  } catch (e) { showError('Copy failed: ' + e.message); }\n}\nasync function copyPrevToThis() {\n  const prevMon = (()=>{ const d=new Date(currentWeekStart+'T12:00:00'); d.setDate(d.getDate()-7); return d.toISOString().slice(0,10); })();\n  try {\n    await fetchJSON('/schedule/api?a=shifts.copyWeek', { method:'POST', body: JSON.stringify({ source_week: prevMon, target_week: currentWeekStart, overwrite: 0 }) });\n    await loadWeek();\n    showSuccess('Copied previous week to this week');\n  } catch (e) { showError('Copy failed: ' + e.message); }\n}\nasync function copyThisToNext() {\n  const nextMon = nextMonday(currentWeekStart);\n  try {\n    await fetchJSON('/schedule/api?a=shifts.copyWeek', { method:'POST', body: JSON.stringify({ source_week: currentWeekStart, target_week: nextMon, overwrite: 0 }) });\n    showSuccess('Copied this week to next week');\n  } catch (e) { showError('Copy failed: ' + e.message); }\n}\n\nfunction openCopyUserModal(prefillFromId = null) {\n  if (!isAdmin) return;\n  const fromSel = document.getElementById('cuFrom');\n  const toSel   = document.getElementById('cuTo');\n  fromSel.innerHTML = ''; toSel.innerHTML = '';\n  employees.forEach(e => {\n    const o1 = document.createElement('option'); o1.value = e.id; o1.textContent = e.name; fromSel.appendChild(o1);\n    const o2 = document.createElement('option'); o2.value = e.id; o2.textContent = e.name; toSel.appendChild(o2);\n  });\n  if (prefillFromId) fromSel.value = String(prefillFromId);\n  cuSelectedDays = new Set(['1','2','3','4','5','6','0']); // all days default\n  document.querySelectorAll('.cu-day').forEach(b => { b.classList.remove('btn-outline'); b.classList.add('btn-primary'); });\n  document.getElementById('cuOverwrite').checked = false;\n  copyUserModal.show();\n}\nasync function doCopyUser() {\n  const from_employee_id = parseInt(document.getElementById('cuFrom').value,10);\n  const to_employee_id   = parseInt(document.getElementById('cuTo').value,10);\n  const overwrite        = document.getElementById('cuOverwrite').checked ? 1 : 0;\n  if (!from_employee_id || !to_employee_id || from_employee_id === to_employee_id) { showError('Choose two different users'); return; }\n  const days = Array.from(cuSelectedDays).map(x=>parseInt(x,10));\n  try {\n    await fetchJSON('/schedule/api?a=shifts.copyUserToUser', { method:'POST', body: JSON.stringify({ week: currentWeekStart, from_employee_id, to_employee_id, days, overwrite }) });\n    copyUserModal.hide();\n    await loadWeek();\n    showSuccess('Shifts copied between users');\n  } catch (e) { showError('Copy failed: ' + e.message); }\n}\n\n// Single-shift copy\nfunction openCopyOne(shiftId, dateYmd) {\n  if (!isAdmin) return;\n  document.getElementById('coShiftId').value = String(shiftId);\n  document.getElementById('coDate').value = dateYmd;\n  const toSel = document.getElementById('coTo'); toSel.innerHTML = '';\n  employees.forEach(e => { const o=document.createElement('option'); o.value=e.id; o.textContent=e.name; toSel.appendChild(o); });\n  copyOneModal.show();\n}\nasync function doCopyOne() {\n  const shift_id = parseInt(document.getElementById('coShiftId').value,10);\n  const to_employee_id = parseInt(document.getElementById('coTo').value,10);\n  const target_date = document.getElementById('coDate').value;\n  if (!shift_id || !to_employee_id || !target_date) { showError('Missing info'); return; }\n  try {\n    await fetchJSON('/schedule/api?a=shifts.copyShift', { method:'POST', body: JSON.stringify({ shift_id, to_employee_id, target_date }) });\n    copyOneModal.hide();\n    await loadWeek();\n    showSuccess('Shift copied');\n  } catch (e) { showError('Copy failed: ' + e.message); }\n}\n\n// ===== Utils =====\nfunction totalHours(list) {\n  return list.reduce((acc, s) => { const a=new Date(s.start_dt), b=new Date(s.end_dt); const h=(b-a)/36e5; return acc + (isFinite(h) ? h : 0); }, 0);\n}\nfunction escapeHtml(t=''){ const d = document.createElement('div'); d.textContent = t; return d.innerHTML; }\nfunction showError(message) { alert('Error: ' + message); }\nfunction showSuccess(message) { alert('Success: ' + message); }\n\nwindow.deleteShift = deleteShift;\nwindow.openCopyUserModal = openCopyUserModal;\nwindow.openCopyOne = openCopyOne;\n</script>\n","size_bytes":39216},"app/views/schedule/my.php":{"content":"<?php\n// app/views/schedule/my.php\nrequire 'app/views/templates/header.php';\nrequire 'app/views/templates/spinner.php';\n?>\n\n<style>\n:root {\n  --primary: #3b82f6;\n  --primary-hover: #2563eb;\n  --gray-50: #f9fafb;\n  --gray-100: #f3f4f6;\n  --gray-200: #e5e7eb;\n  --gray-300: #d1d5db;\n  --gray-500: #6b7280;\n  --gray-700: #374151;\n  --gray-900: #111827;\n  --shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  --radius: 0.5rem;\n  --spacing-xs: 0.25rem;\n  --spacing-sm: 0.5rem;\n  --spacing-md: 0.75rem;\n}\n\n.page {\n  background: var(--gray-50);\n  min-height: 100vh;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n  padding: var(--spacing-sm);\n}\n\n.header {\n  padding: var(--spacing-sm) 0;\n  margin-bottom: var(--spacing-md);\n  border-bottom: 1px solid var(--gray-200);\n}\n\n.title {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: var(--gray-900);\n  margin-bottom: var(--spacing-xs);\n}\n\n.subtitle {\n  color: var(--gray-500);\n  font-size: 0.75rem;\n  line-height: 1.2;\n}\n\n.controls {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.toggle {\n  display: flex;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--radius);\n  overflow: hidden;\n  width: 100%;\n}\n\n.toggle button {\n  flex: 1;\n  background: #fff;\n  border: 0;\n  padding: var(--spacing-sm) var(--spacing-md);\n  font-weight: 600;\n  color: var(--gray-700);\n  text-align: center;\n  transition: background 0.2s ease;\n  cursor: pointer;\n  font-size: 0.85rem;\n}\n\n.toggle button.active {\n  background: var(--primary);\n  color: #fff;\n}\n\n.toggle button:hover:not(.active) {\n  background: var(--gray-100);\n}\n\n.nav-buttons {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: var(--spacing-sm);\n}\n\n.btn {\n  border: 1px solid var(--gray-300);\n  background: #fff;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--radius);\n  font-weight: 600;\n  color: var(--gray-700);\n  font-size: 0.85rem;\n  width: 2.5rem;\n  text-align: center;\n  transition: all 0.2s ease;\n}\n\n.btn:hover {\n  background: var(--gray-100);\n  transform: translateY(-1px);\n}\n\n.summary {\n  font-weight: 600;\n  color: var(--gray-900);\n  font-size: 0.8rem;\n  margin-top: var(--spacing-sm);\n  text-align: right;\n}\n\n.grid {\n  background: #fff;\n  border: 1px solid var(--gray-200);\n  box-shadow: var(--shadow);\n  border-radius: var(--radius);\n  overflow-x: auto;\n  margin-bottom: var(--spacing-md);\n}\n\n.head {\n  display: grid;\n  grid-template-columns: 140px repeat(7, 1fr);\n  background: var(--gray-100);\n  border-bottom: 1px solid var(--gray-200);\n}\n\n.head div {\n  padding: var(--spacing-sm);\n  font-weight: 600;\n  color: var(--gray-700);\n  text-align: center;\n  font-size: 0.75rem;\n  white-space: nowrap;\n}\n\n.head div:first-child {\n  text-align: left;\n}\n\n.row {\n  display: grid;\n  grid-template-columns: 140px repeat(7, 1fr);\n  border-bottom: 1px solid var(--gray-200);\n  min-height: 80px;\n}\n\n.emp {\n  background: var(--gray-50);\n  border-right: 1px solid var(--gray-200);\n  padding: var(--spacing-sm);\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs);\n}\n\n.emp .name {\n  font-weight: 600;\n  font-size: 0.85rem;\n  color: var(--gray-900);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.cell {\n  position: relative;\n  padding: var(--spacing-sm);\n  border-right: 1px solid var(--gray-200);\n  background: #fff;\n  min-height: 80px;\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs);\n}\n\n.shift {\n  background: var(--primary);\n  color: #fff;\n  border-radius: 0.375rem;\n  padding: var(--spacing-xs) var(--spacing-sm);\n  margin-bottom: var(--spacing-xs);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  font-size: 0.7rem;\n  line-height: 1.2;\n  display: flex;\n  flex-direction: column;\n}\n\n.shift.me {\n  outline: 2px solid #1d4ed8;\n}\n\n.small {\n  font-size: 0.65rem;\n  color: var(--gray-500);\n}\n\n.info {\n  margin-top: auto;\n  font-size: 0.6rem;\n  color: var(--gray-600);\n  line-height: 1.1;\n}\n\n/* Mobile-first adjustments */\n@media (min-width: 576px) {\n  .page {\n    padding: var(--spacing-md);\n  }\n\n  .header {\n    padding: var(--spacing-md) 0;\n  }\n\n  .title {\n    font-size: 1.5rem;\n  }\n\n  .subtitle {\n    font-size: 0.85rem;\n  }\n\n  .toggle button {\n    font-size: 0.9rem;\n    padding: var(--spacing-sm) var(--spacing-lg);\n  }\n\n  .btn {\n    font-size: 0.9rem;\n    width: 3rem;\n  }\n\n  .summary {\n    font-size: 0.9rem;\n  }\n\n  .head div {\n    font-size: 0.8rem;\n    padding: var(--spacing-sm) var(--spacing-md);\n  }\n\n  .emp .name {\n    font-size: 0.9rem;\n  }\n\n  .cell,\n  .row {\n    min-height: 90px;\n  }\n\n  .shift {\n    font-size: 0.75rem;\n    padding: var(--spacing-sm);\n  }\n\n  .small {\n    font-size: 0.7rem;\n  }\n\n  .info {\n    font-size: 0.65rem;\n  }\n}\n\n@media (min-width: 768px) {\n  .controls {\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .nav-buttons {\n    margin-top: 0;\n    width: auto;\n  }\n\n  .head,\n  .row {\n    grid-template-columns: 180px repeat(7, 1fr);\n  }\n\n  .head div {\n    font-size: 0.85rem;\n  }\n\n  .cell,\n  .row {\n    min-height: 100px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .head,\n  .row {\n    grid-template-columns: 220px repeat(7, 1fr);\n  }\n\n  .head div {\n    font-size: 0.9rem;\n  }\n\n  .cell,\n  .row {\n    min-height: 110px;\n  }\n}\n</style>\n\n<div class=\"page\">\n  <header class=\"header\">\n    <div class=\"container-fluid\">\n      <div class=\"d-flex flex-column align-items-start justify-content-between\">\n        <div>\n          <div class=\"title\">My Shifts</div>\n          <div class=\"subtitle\">This week first. Browse weeks, compare with your team, and see weekly hours.</div>\n        </div>\n        <div class=\"controls w-100\">\n          <div class=\"toggle\" role=\"tablist\" aria-label=\"Scope\">\n            <button id=\"scopeMine\" class=\"active\" aria-selected=\"true\">My shifts</button>\n            <button id=\"scopeAll\" aria-selected=\"false\">All team</button>\n          </div>\n          <div class=\"nav-buttons\">\n            <button class=\"btn\" id=\"prevBtn\" aria-label=\"Previous week\">◀</button>\n            <div class=\"mx-2 fw-bold\" id=\"weekText\"></div>\n            <button class=\"btn\" id=\"nextBtn\" aria-label=\"Next week\">▶</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container-fluid\">\n    <div class=\"d-flex flex-column flex-sm-row justify-content-between align-items-center mb-2\">\n      <div class=\"small\" id=\"whoLine\"></div>\n      <div class=\"summary\"><span id=\"hoursLabel\">My hours</span>: <span id=\"hoursVal\">0.00</span></div>\n    </div>\n\n    <div class=\"grid\">\n      <div class=\"head\">\n        <div>Team member</div>\n        <div id=\"h0\">Mon</div>\n        <div id=\"h1\">Tue</div>\n        <div id=\"h2\">Wed</div>\n        <div id=\"h3\">Thu</div>\n        <div id=\"h4\">Fri</div>\n        <div id=\"h5\">Sat</div>\n        <div id=\"h6\">Sun</div>\n      </div>\n      <div id=\"gridBody\"></div>\n    </div>\n  </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n\n<script>\nasync function fetchJSON(url, options = {}) {\n  Spinner?.show();\n  try {\n    const r = await fetch(url, { headers: { 'Content-Type': 'application/json' }, ...options });\n    const t = await r.text();\n    if (!r.ok) { try { throw new Error(JSON.parse(t).error) } catch { throw new Error(t) } }\n    return JSON.parse(t);\n  } finally { Spinner?.hide(); }\n}\n\nlet me = { employee_id: null, name: '' };\nlet employees = [];\nlet weekStart; // YYYY-MM-DD (Monday)\nlet scope = 'mine'; // 'mine' | 'all'\nlet allWeekShifts = [];\n\nconst mondayOf = (ymd) => {\n  const d = new Date(ymd + 'T12:00:00');\n  const dow = d.getDay();\n  d.setDate(d.getDate() - (dow === 0 ? 6 : dow - 1));\n  return d.toISOString().slice(0, 10);\n};\n\nconst weekDays = (monday) => {\n  const labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const mon = new Date(monday + 'T12:00:00');\n  const a = [];\n  for (let i = 0; i < 7; i++) {\n    const d = new Date(mon);\n    d.setDate(d.getDate() + i);\n    a.push({ ymd: d.toISOString().slice(0, 10), label: labels[i] + ', ' + d.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) });\n  }\n  return a;\n};\n\nconst esc = (t = '') => {\n  const d = document.createElement('div');\n  d.textContent = t;\n  return d.innerHTML;\n};\n\nconst sumHours = (list) => list.reduce((acc, s) => acc + ((new Date(s.end_dt) - new Date(s.start_dt)) / 36e5 || 0), 0);\nconst uniq = (arr) => [...new Set(arr)];\n\nfunction setWeekHeader() {\n  const days = weekDays(weekStart);\n  days.forEach((d, i) => (document.getElementById('h' + i).textContent = d.label));\n  const mon = new Date(weekStart + 'T12:00:00');\n  const sun = new Date(mon);\n  sun.setDate(sun.getDate() + 6);\n  const fmt = (x) => x.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  document.getElementById('weekText').textContent = `${fmt(mon)} – ${fmt(sun)}`;\n}\n\nfunction renderShift(s, isMe) {\n  const div = document.createElement('div');\n  div.className = 'shift' + (isMe ? ' me' : '');\n  const t1 = s.start_dt.slice(11, 16), t2 = s.end_dt.slice(11, 16);\n  const role = (s.notes || s.employee_role || '').trim();\n  div.innerHTML = `<div><strong>${t1}–${t2}</strong></div>${role ? `<div>${esc(role)}</div>` : ''}`;\n  return div;\n}\n\nasync function loadWeek() {\n  setWeekHeader();\n  const data = await fetchJSON(`/schedule/api?a=shifts.week&week=${weekStart}`);\n  allWeekShifts = data.shifts || [];\n\n  const body = document.getElementById('gridBody');\n  body.innerHTML = '';\n\n  if (scope === 'all') {\n    document.getElementById('whoLine').textContent = 'Viewing: entire team';\n    document.getElementById('hoursLabel').textContent = 'Team hours';\n\n    const byEmp = {};\n    allWeekShifts.forEach(s => (byEmp[s.employee_id] ||= []).push(s));\n\n    const ids = Object.keys(byEmp)\n      .map(Number)\n      .sort((a, b) => {\n        const an = (employees.find(e => e.id === a)?.name || '').toLowerCase();\n        const bn = (employees.find(e => e.id === b)?.name || '').toLowerCase();\n        return an < bn ? -1 : an > bn ? 1 : 0;\n      });\n\n    let total = 0;\n    const days = weekDays(weekStart);\n\n    ids.forEach(empId => {\n      const row = document.createElement('div');\n      row.className = 'row';\n      const meta = employees.find(e => e.id === empId) || { name: '(Unknown)' };\n      const list = byEmp[empId];\n      const hrs = sumHours(list);\n      total += hrs;\n\n      const empCell = document.createElement('div');\n      empCell.className = 'emp';\n      empCell.innerHTML = `<div class=\"name\">${esc(meta.name)}</div><div class=\"small\">${hrs.toFixed(2)} hrs</div>${\n        empId === me.employee_id ? '<div class=\"small\">This is you</div>' : ''\n      }`;\n      row.appendChild(empCell);\n\n      days.forEach(d => {\n        const cell = document.createElement('div');\n        cell.className = 'cell';\n        list.filter(s => s.start_dt.slice(0, 10) === d.ymd).forEach(s => cell.appendChild(renderShift(s, empId === me.employee_id)));\n        row.appendChild(cell);\n      });\n\n      body.appendChild(row);\n    });\n\n    document.getElementById('hoursVal').textContent = total.toFixed(2);\n  } else {\n    document.getElementById('whoLine').textContent = `Viewing: ${me.name}`;\n    document.getElementById('hoursLabel').textContent = 'My hours';\n\n    const myList = allWeekShifts.filter(s => s.employee_id === me.employee_id);\n\n    const row = document.createElement('div');\n    row.className = 'row';\n    const meCell = document.createElement('div');\n    meCell.className = 'emp';\n    meCell.innerHTML = `<div class=\"name\">${esc(me.name)}</div><div class=\"small\">${sumHours(myList).toFixed(2)} hrs</div>`;\n    row.appendChild(meCell);\n\n    const days = weekDays(weekStart);\n    days.forEach(d => {\n      const cell = document.createElement('div');\n      cell.className = 'cell';\n      const todaysMine = myList.filter(s => s.start_dt.slice(0, 10) === d.ymd);\n      todaysMine.forEach(s => {\n        const el = renderShift(s, true);\n        const coworkers = allWeekShifts.filter(x => x.employee_id !== me.employee_id && x.start_dt.slice(0, 10) === d.ymd);\n        if (coworkers.length) {\n          const names = uniq(coworkers.map(x => (employees.find(e => e.id === x.employee_id)?.name) || 'Unknown'));\n          const info = document.createElement('div');\n          info.className = 'info';\n          info.textContent = 'With: ' + names.join(', ');\n          el.appendChild(info);\n        }\n        cell.appendChild(el);\n      });\n      row.appendChild(cell);\n    });\n\n    body.appendChild(row);\n    document.getElementById('hoursVal').textContent = sumHours(myList).toFixed(2);\n  }\n}\n\nfunction bindUI() {\n  document.getElementById('prevBtn').onclick = async () => {\n    const d = new Date(weekStart + 'T12:00:00');\n    d.setDate(d.getDate() - 7);\n    weekStart = mondayOf(d.toISOString().slice(0, 10));\n    await loadWeek();\n  };\n  document.getElementById('nextBtn').onclick = async () => {\n    const d = new Date(weekStart + 'T12:00:00');\n    d.setDate(d.getDate() + 7);\n    weekStart = mondayOf(d.toISOString().slice(0, 10));\n    await loadWeek();\n  };\n  const mine = document.getElementById('scopeMine'),\n    all = document.getElementById('scopeAll');\n  mine.onclick = async () => {\n    scope = 'mine';\n    mine.classList.add('active');\n    all.classList.remove('active');\n    await loadWeek();\n  };\n  all.onclick = async () => {\n    scope = 'all';\n    all.classList.add('active');\n    mine.classList.remove('active');\n    await loadWeek();\n  };\n}\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  try {\n    const who = await fetchJSON('/schedule/api?a=me.employee');\n    me.employee_id = who.employee_id;\n    me.name = who.employee_name || 'Me';\n\n    employees = await fetchJSON('/schedule/api?a=employees.list');\n\n    // Set to current date (2025-09-06 05:02 EDT)\n    const today = new Date('2025-09-06T05:02:00-04:00');\n    weekStart = mondayOf(today.toISOString().slice(0, 10)); // This week first\n    bindUI();\n    await loadWeek();\n  } catch (e) {\n    console.error(e);\n    alert('Could not load your shifts: ' + e.message);\n  }\n});\n</script>","size_bytes":13957},"app/views/secret/index.php":{"content":"<?php require_once 'app/views/templates/header.php' ?>\n<div class=\"container\">\n    <div class=\"page-header\" id=\"banner\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <h1>You are at a secret page</h1>\n                <p class=\"lead\"> <?= date(\"F jS, Y\"); ?></p>\n            </div>\n        </div>\n    </div>\n\n    <?php require_once 'app/views/templates/footer.php' ?>\n","size_bytes":399},"app/views/team/index.php":{"content":"<?php require 'app/views/templates/header.php';\nrequire 'app/views/templates/spinner.php';\n?>\n\n<style>\n:root {\n  --primary: #3b82f6;\n  --primary-hover: #2563eb;\n  --danger: #ef4444;\n  --danger-hover: #dc2626;\n  --success: #10b981;\n  --warning: #f59e0b;\n  --gray-50: #f9fafb;\n  --gray-100: #f3f4f6;\n  --gray-200: #e5e7eb;\n  --gray-300: #d1d5db;\n  --gray-400: #9ca3af;\n  --gray-500: #6b7280;\n  --gray-700: #374151;\n  --gray-900: #111827;\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  --radius: 0.375rem;\n  --radius-lg: 0.5rem;\n  --transition: all 0.2s ease;\n}\n\n.page-wrap { \n  background: var(--gray-50); \n  min-height: 100vh; \n  padding: 1rem 0;\n}\n\n.page-header {\n  margin-bottom: 2rem;\n}\n\n.page-title {\n  font-size: 1.875rem;\n  font-weight: 700;\n  color: var(--gray-900);\n  margin-bottom: 0.5rem;\n}\n\n.page-subtitle {\n  color: var(--gray-500);\n  font-size: 1.125rem;\n}\n\n.card { \n  background: #fff; \n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow);\n  overflow: hidden;\n}\n\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius);\n  padding: 0.625rem 1.25rem;\n  font-weight: 500;\n  font-size: 0.875rem;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: var(--transition);\n  gap: 0.5rem;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.btn-sm {\n  padding: 0.5rem 0.875rem;\n  font-size: 0.8125rem;\n}\n\n.btn-primary {\n  background: var(--primary);\n  color: white;\n  box-shadow: var(--shadow-sm);\n}\n\n.btn-primary:hover {\n  background: var(--primary-hover);\n  box-shadow: var(--shadow);\n}\n\n.btn-outline {\n  background: transparent;\n  border: 1px solid var(--gray-300);\n  color: var(--gray-700);\n}\n\n.btn-outline:hover {\n  background: var(--gray-50);\n}\n\n.btn-danger {\n  background: var(--danger);\n  color: white;\n}\n\n.btn-danger:hover {\n  background: var(--danger-hover);\n}\n\n.btn-success {\n  background: var(--success);\n  color: white;\n}\n\n.btn-success:hover {\n  background: #0da271;\n}\n\n.btn-icon {\n  padding: 0.5rem;\n  border-radius: var(--radius);\n}\n\n.badge {\n  display: inline-block;\n  padding: 0.35rem 0.65rem;\n  font-size: 0.75rem;\n  font-weight: 600;\n  line-height: 1;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: 9999px;\n}\n\n.badge-success {\n  background: #e8f8ee;\n  border: 1px solid #bfead3;\n  color: #0f5132;\n}\n\n.badge-danger {\n  background: #fde2e1;\n  border: 1px solid #f5b5b4;\n  color: #842029;\n}\n\n.badge-dark {\n  background: #e5e7eb;\n  border: 1px solid #d1d5db;\n  color: #374151;\n}\n\n.badge-secondary {\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  color: #6b7280;\n}\n\n.table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n\n.table th {\n  font-weight: 600;\n  color: var(--gray-700);\n  background: var(--gray-50);\n  padding: 0.875rem 1rem;\n  border-bottom: 1px solid var(--gray-200);\n  text-align: left;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n.table td {\n  padding: 1rem;\n  border-bottom: 1px solid var(--gray-200);\n  vertical-align: middle;\n}\n\n.table tbody tr {\n  transition: var(--transition);\n}\n\n.table tbody tr:hover {\n  background: var(--gray-50);\n}\n\n.input-group {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  width: 100%;\n}\n\n.input-group-text {\n  display: flex;\n  align-items: center;\n  padding: 0.625rem 0.875rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--gray-500);\n  text-align: center;\n  white-space: nowrap;\n  background-color: var(--gray-100);\n  border: 1px solid var(--gray-300);\n  border-radius: var(--radius);\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.form-control {\n  display: block;\n  width: 100%;\n  padding: 0.625rem 0.875rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--gray-700);\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--radius);\n  transition: var(--transition);\n}\n\n.form-control:focus {\n  outline: 0;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);\n}\n\n.form-select {\n  display: block;\n  width: 100%;\n  padding: 0.625rem 2.25rem 0.625rem 0.875rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--gray-700);\n  background-color: #fff;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 0.875rem center;\n  background-size: 16px 12px;\n  border: 1px solid var(--gray-300);\n  border-radius: var(--radius);\n  transition: var(--transition);\n}\n\n.form-select:focus {\n  border-color: var(--primary);\n  outline: 0;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);\n}\n\n.form-check {\n  display: block;\n  min-height: 1.5rem;\n  padding-left: 1.5em;\n  margin-bottom: 0.125rem;\n}\n\n.form-check-input {\n  width: 1em;\n  height: 1em;\n  margin-top: 0.25em;\n  vertical-align: top;\n  background-color: #fff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border: 1px solid var(--gray-300);\n  appearance: none;\n  print-color-adjust: exact;\n  transition: var(--transition);\n  position: relative;\n  margin-left: -1.5em;\n}\n\n.form-check-input:checked {\n  background-color: var(--primary);\n  border-color: var(--primary);\n}\n\n.form-check-input:focus {\n  border-color: var(--primary);\n  outline: 0;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.15);\n}\n\n.form-check-label {\n  cursor: pointer;\n  font-size: 0.875rem;\n  color: var(--gray-700);\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: var(--gray-700);\n  font-size: 0.875rem;\n}\n\n.form-text {\n  margin-top: 0.25rem;\n  font-size: 0.75rem;\n  color: var(--gray-500);\n}\n\n.text-muted {\n  color: var(--gray-500) !important;\n}\n\n.small-text {\n  font-size: 0.75rem;\n  color: var(--gray-500);\n  margin-top: 0.25rem;\n}\n\n.modal-header {\n  padding: 1.25rem 1.5rem;\n  border-bottom: 1px solid var(--gray-200);\n}\n\n.modal-title {\n  margin-bottom: 0;\n  line-height: 1.5;\n  font-weight: 600;\n  color: var(--gray-900);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  border-top: 1px solid var(--gray-200);\n}\n\n.btn-close {\n  box-sizing: content-box;\n  width: 1em;\n  height: 1em;\n  padding: 0.25em;\n  color: #000;\n  background: transparent url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e\") center/1em auto no-repeat;\n  border: 0;\n  border-radius: var(--radius);\n  opacity: 0.5;\n  cursor: pointer;\n}\n\n.btn-close:hover {\n  opacity: 0.75;\n}\n\n.empty-state {\n  padding: 3rem 1rem;\n  text-align: center;\n  color: var(--gray-500);\n}\n\n.empty-state-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.empty-state-text {\n  margin-bottom: 1.5rem;\n}\n\n.loading-shimmer {\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n  border-radius: var(--radius);\n  height: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n@keyframes loading {\n  0% { background-position: 200% 0; }\n  100% { background-position: -200% 0; }\n}\n\n.fade-in {\n  animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive styles */\n@media (max-width: 1024px) {\n  .table-responsive {\n    overflow-x: auto;\n  }\n  \n  .table {\n    min-width: 800px;\n  }\n}\n\n@media (max-width: 768px) {\n  .page-header {\n    flex-direction: column;\n    align-items: flex-start !important;\n    gap: 1rem;\n  }\n  \n  .modal-dialog {\n    margin: 1rem;\n  }\n  \n  .btn {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n@media (max-width: 640px) {\n  .container-fluid {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  \n  .card {\n    border-radius: 0;\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n}\n</style>\n\n<div class=\"page-wrap\">\n  <div class=\"container-fluid px-3 px-md-4 py-4\">\n    <div class=\"d-flex align-items-center justify-content-between page-header\">\n      <div>\n        <h1 class=\"page-title\">Team Roster</h1>\n        <p class=\"page-subtitle\">Add (hire) or terminate team members. Hiring creates rows in <b>users</b> and <b>employees</b> tables.</p>\n      </div>\n      <button class=\"btn btn-primary\" id=\"btnAdd\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n        </svg>\n        Add Team Member\n      </button>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"d-flex align-items-center p-3 border-bottom\">\n        <div class=\"input-group me-3\" style=\"max-width:420px\">\n          <span class=\"input-group-text\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n            </svg>\n          </span>\n          <input id=\"q\" class=\"form-control\" placeholder=\"Search team members…\">\n        </div>\n        <div class=\"form-check form-switch\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"showTerminated\">\n          <label class=\"form-check-label\" for=\"showTerminated\">Show terminated</label>\n        </div>\n      </div>\n\n      <div class=\"table-responsive\">\n        <table class=\"table\" id=\"tbl\">\n          <thead>\n            <tr>\n              <th>Team Member</th>\n              <th>Contact</th>\n              <th>Access</th>\n              <th>Role</th>\n              <th>Wage</th>\n              <th>Status</th>\n              <th class=\"text-end\">Actions</th>\n            </tr>\n          </thead>\n          <tbody id=\"rows\"></tbody>\n        </table>\n      </div>\n      \n      <div id=\"emptyState\" class=\"empty-state\" style=\"display: none;\">\n        <div class=\"empty-state-icon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7Zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216ZM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z\"/>\n          </svg>\n        </div>\n        <div class=\"empty-state-text\">No team members found</div>\n        <button class=\"btn btn-primary\" id=\"btnAddEmpty\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n          </svg>\n          Add Team Member\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Hire modal -->\n<div class=\"modal fade\" id=\"hireModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog modal-lg modal-dialog-scrollable\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n          </svg>\n          Add Team Member\n        </h5>\n        <button class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"row g-3\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Username *</label>\n            <input class=\"form-control\" id=\"h_username\" placeholder=\"e.g. jsmith\">\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Full name</label>\n            <input class=\"form-control\" id=\"h_fullname\" placeholder=\"John Smith\">\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Email</label>\n            <input class=\"form-control\" id=\"h_email\" type=\"email\">\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Mobile phone</label>\n            <input class=\"form-control\" id=\"h_phone\" placeholder=\"(555) 555-5555\">\n          </div>\n\n          <div class=\"col-md-5\">\n            <label class=\"form-label\">Role</label>\n            <select class=\"form-select\" id=\"h_role\"></select>\n            <div class=\"form-text\">Manage options in <b>roles</b> table.</div>\n          </div>\n          \n          <div class=\"col-md-3\">\n            <label class=\"form-label\">Wage</label>\n            <input class=\"form-control\" id=\"h_wage\" type=\"number\" step=\"0.01\" value=\"0.00\">\n          </div>\n          <div class=\"col-md-4\">\n            <label class=\"form-label d-block\">Rate</label>\n            <select class=\"form-select\" id=\"h_rate\">\n              <option value=\"hourly\">Hourly</option>\n              <option value=\"salary\">Salary</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-4\">\n            <label class=\"form-label\">Start date</label>\n            <input class=\"form-control\" id=\"h_start\" type=\"date\" value=\"<?= date('Y-m-d') ?>\">\n          </div>\n          <div class=\"col-md-4\">\n            <label class=\"form-label d-block\">Access level</label>\n            <select class=\"form-select\" id=\"h_access\">\n              <option value=\"0\">Employee</option>\n              <option value=\"1\">Manager (Admin)</option>\n            </select>\n          </div>\n          <div class=\"col-md-4\">\n            <label class=\"form-label\">Password (optional)</label>\n            <input class=\"form-control\" id=\"h_password\" type=\"text\" placeholder=\"Auto if blank\">\n          </div>\n        </div>\n        <div class=\"small-text mt-3\">Hiring creates a <b>users</b> row (login) and an <b>employees</b> row (HR profile).</div>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button class=\"btn btn-primary\" id=\"hireSave\">Add Team Member</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Terminate modal -->\n<div class=\"modal fade\" id=\"termModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n          </svg>\n          Terminate Team Member\n        </h5>\n        <button class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <input type=\"hidden\" id=\"t_user_id\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Reason</label>\n          <select class=\"form-select\" id=\"t_reason\">\n            <option value=\"\">Select…</option>\n            <option>Resignation</option>\n            <option>Dismissal</option>\n            <option>Seasonal layoff</option>\n            <option>End of contract</option>\n          </select>\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Termination date</label>\n          <input class=\"form-control\" id=\"t_date\" type=\"date\" value=\"<?= date('Y-m-d') ?>\">\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Internal note (optional)</label>\n          <textarea class=\"form-control\" id=\"t_note\" rows=\"3\"></textarea>\n        </div>\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"t_rehire\" checked>\n          <label class=\"form-check-label\" for=\"t_rehire\">Eligible for rehire</label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-outline\" data-bs-dismiss=\"modal\">Cancel</button>\n        <button class=\"btn btn-danger\" id=\"termSave\">Terminate</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<?php require 'app/views/templates/footer.php'; ?>\n\n<script>\nlet ROSTER = [];\nlet IS_ADMIN = false;\n\nconst M_hire  = new bootstrap.Modal(document.getElementById('hireModal'));\nconst M_term  = new bootstrap.Modal(document.getElementById('termModal'));\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  await bootstrapTeam();\n  document.getElementById('q').addEventListener('input', render);\n  document.getElementById('showTerminated').addEventListener('change', render);\n\n  document.getElementById('btnAdd').addEventListener('click', async () => {\n    if (!IS_ADMIN) return alert('Admin only');\n    clearHireForm();\n    await loadRolesForHire();\n    M_hire.show();\n  });\n  \n  document.getElementById('btnAddEmpty').addEventListener('click', async () => {\n    if (!IS_ADMIN) return alert('Admin only');\n    clearHireForm();\n    await loadRolesForHire();\n    M_hire.show();\n  });\n\n  document.getElementById('hireSave').addEventListener('click', onHireSave);\n  document.getElementById('termSave').addEventListener('click', onTermSave);\n});\n\n/* ---------- Bootstrap roster ---------- */\nasync function bootstrapTeam() {\n  try {\n    const data = await get('/team/api?a=bootstrap');\n    ROSTER = data.roster || [];\n    IS_ADMIN = !!data.is_admin;\n    render();\n  } catch (error) {\n    console.error('Failed to load team data:', error);\n    showError('Failed to load team data. Please refresh the page.');\n  }\n}\n\n/* ---------- Spinner-aware fetch helpers ---------- */\nasync function fetchJSON(url, options = {}) {\n  Spinner.show();\n  try {\n    const r = await fetch(url, { headers: { 'Content-Type': 'application/json' }, ...options });\n    const t = await r.text();\n    if (!r.ok) throw new Error(t || `HTTP ${r.status}`);\n    return JSON.parse(t);\n  } finally {\n    Spinner.hide();\n  }\n}\n\nasync function get(url) {\n  Spinner.show();\n  try {\n    const r = await fetch(url);\n    const t = await r.text();\n    if (!r.ok) throw new Error(t);\n    return JSON.parse(t);\n  } finally {\n    Spinner.hide();\n  }\n}\n\nasync function post(url, data) {\n  Spinner.show();\n  try {\n    const r = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    });\n    const t = await r.text();\n    if (!r.ok) throw new Error(t);\n    return JSON.parse(t);\n  } finally {\n    Spinner.hide();\n  }\n}\n\n/* ---------- Roles ---------- */\nasync function loadRolesForHire() {\n  const sel = document.getElementById('h_role');\n  sel.innerHTML = '<option>Loading…</option>';\n\n  async function tryFetch(url) {\n    try {\n      const r = await fetch(url, { headers: { 'Content-Type': 'application/json' }});\n      const txt = await r.text();\n      if (!r.ok) throw new Error(txt || `HTTP ${r.status}`);\n      const json = JSON.parse(txt);\n      return Array.isArray(json) ? json : (Array.isArray(json.roles) ? json.roles : []);\n    } catch (e) {\n      console.error('[roles.list] error from', url, e);\n      return null;\n    }\n  }\n\n  let roles = await tryFetch('/schedule/api?a=roles.list');\n  if (!roles) roles = await tryFetch('/team/api?a=roles.list');\n\n  sel.innerHTML = '';\n  if (Array.isArray(roles) && roles.length) {\n    for (const r of roles) {\n      const name = (r && (r.name ?? r.title ?? r.role ?? '')).toString();\n      if (!name) continue;\n      const opt = document.createElement('option');\n      opt.value = name;\n      opt.textContent = name;\n      sel.appendChild(opt);\n    }\n  }\n  if (!sel.options.length) {\n    sel.innerHTML = '<option value=\"\">— No roles found (check API / DB) —</option>';\n  }\n}\n\n/* ---------- Render roster ---------- */\nfunction render() {\n  const q = (document.getElementById('q').value || '').toLowerCase();\n  const showTerm = document.getElementById('showTerminated').checked;\n  const tbody = document.getElementById('rows');\n  const emptyState = document.getElementById('emptyState');\n  \n  const filteredRoster = ROSTER.filter(r => {\n    const matchQ = !q || \n      (r.name||'').toLowerCase().includes(q) || \n      (r.username||'').toLowerCase().includes(q) || \n      (r.email||'').toLowerCase().includes(q);\n    const matchTerm = showTerm ? true : (parseInt(r.is_active) === 1);\n    return matchQ && matchTerm;\n  });\n  \n  if (filteredRoster.length === 0) {\n    tbody.innerHTML = '';\n    emptyState.style.display = 'block';\n    return;\n  }\n  \n  emptyState.style.display = 'none';\n  tbody.innerHTML = '';\n\n  filteredRoster.forEach(r => {\n    const tr = document.createElement('tr');\n    tr.classList.add('fade-in');\n    tr.innerHTML = `\n      <td>\n        <div class=\"d-flex align-items-center\">\n          <div class=\"me-3\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 16 16\" style=\"color: var(--gray-400)\">\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n              <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\n            </svg>\n          </div>\n          <div>\n            <strong>${escapeHtml(r.name || r.username)}</strong>\n            <div class=\"small-text\">${escapeHtml(r.username||'')}</div>\n          </div>\n        </div>\n      </td>\n      <td>\n        <div>${escapeHtml(r.email||'')}</div>\n        <div class=\"small-text\">${escapeHtml(r.phone||'')}</div>\n      </td>\n      <td>\n        ${r.is_admin==1\n          ? '<span class=\"badge badge-dark\">Manager</span>'\n          : '<span class=\"badge badge-secondary\">Employee</span>'}\n      </td>\n      <td>${escapeHtml(r.role_title||'')}</td>\n      <td>\n        <div>$${Number(r.wage||0).toFixed(2)}</div>\n        <div class=\"small-text\">${r.rate||'hourly'}</div>\n      </td>\n      <td>\n        ${r.is_active==1\n          ? '<span class=\"badge badge-success\">Active</span>'\n          : `<span class=\"badge badge-danger\">Terminated</span>\n             <div class=\"small-text\">${escapeHtml(r.termination_reason||'')}</div>`}\n      </td>\n      <td class=\"text-end\">\n        ${r.is_active==1\n            ? `<button class=\"btn btn-sm btn-outline-danger\" ${IS_ADMIN?'':'disabled'} onclick=\"openTerminate(${r.user_id})\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                  <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                </svg>\n               </button>`\n            : `<button class=\"btn btn-sm btn-outline-success\" ${IS_ADMIN?'':'disabled'} onclick=\"rehire(${r.user_id})\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                  <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\"/>\n                  <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\"/>\n                </svg>\n               </button>`}\n      </td>\n    `;\n    tbody.appendChild(tr);\n  });\n}\n\n/* ---------- Hire ---------- */\nfunction clearHireForm() {\n  ['h_username','h_fullname','h_email','h_phone','h_password'].forEach(id => document.getElementById(id).value='');\n  document.getElementById('h_wage').value = '0.00';\n  document.getElementById('h_rate').value = 'hourly';\n  document.getElementById('h_access').value = '0';\n  document.getElementById('h_start').value = (new Date()).toISOString().slice(0,10);\n}\n\nasync function onHireSave(){\n  const username = v('h_username');\n  if (!username) {\n    showError('Username is required');\n    return;\n  }\n  \n  try {\n    const payload = {\n      username:  username,\n      full_name: v('h_fullname'),\n      email:     v('h_email'),\n      phone:     v('h_phone'),\n      role_title: v('h_role'),\n      wage:      parseFloat(v('h_wage')||0),\n      rate:      v('h_rate'),\n      is_admin:  parseInt(v('h_access'),10),\n      start_date:v('h_start'),\n      password:  v('h_password')\n    };\n    \n    await post('/team/api?a=hire', payload);\n    M_hire.hide();\n    await refreshRoster();\n    showSuccess('Team member added successfully');\n  } catch (error) {\n    showError('Failed to add team member: ' + error.message);\n  }\n}\n\nfunction v(id){ return document.getElementById(id).value.trim(); }\n\n/* ---------- Terminate / Rehire ---------- */\nfunction openTerminate(user_id){\n  document.getElementById('t_user_id').value = user_id;\n  document.getElementById('t_reason').value = '';\n  document.getElementById('t_note').value = '';\n  document.getElementById('t_rehire').checked = true;\n  document.getElementById('t_date').value = (new Date()).toISOString().slice(0,10);\n  M_term.show();\n}\n\nasync function onTermSave(){\n  const reason = document.getElementById('t_reason').value.trim();\n  if (!reason) {\n    showError('Please select a termination reason');\n    return;\n  }\n  \n  try {\n    const payload = {\n      user_id: parseInt(document.getElementById('t_user_id').value,10),\n      reason:  reason,\n      note:    document.getElementById('t_note').value.trim(),\n      termination_date: document.getElementById('t_date').value,\n      eligible_for_rehire: document.getElementById('t_rehire').checked ? 1 : 0\n    };\n    \n    await post('/team/api?a=terminate', payload);\n    M_term.hide();\n    await refreshRoster();\n    showSuccess('Team member terminated successfully');\n  } catch (error) {\n    showError('Failed to terminate team member: ' + error.message);\n  }\n}\n\nasync function rehire(user_id){\n  try {\n    await post('/team/api?a=rehire', { user_id, start_date:(new Date()).toISOString().slice(0,10) });\n    await refreshRoster();\n    showSuccess('Team member rehired successfully');\n  } catch (error) {\n    showError('Failed to rehire team member: ' + error.message);\n  }\n}\n\n/* ---------- Utils ---------- */\nasync function refreshRoster(){ \n  try {\n    const d = await get('/team/api?a=list'); \n    ROSTER = d.roster||[]; \n    render();\n  } catch (error) {\n    showError('Failed to refresh roster: ' + error.message);\n  }\n}\n\nfunction escapeHtml(t=''){ \n  const d = document.createElement('div'); \n  d.textContent = t; \n  return d.innerHTML; \n}\n\nfunction showError(message) {\n  // You could replace this with a toast notification system\n  alert('Error: ' + message);\n}\n\nfunction showSuccess(message) {\n  // You could replace this with a toast notification system\n  alert('Success: ' + message);\n}\n</script>","size_bytes":27801},"app/views/templates/footer.php":{"content":"</main>\n\n<footer class=\"bg-light py-5 mt-5\">\n  <div class=\"container\">\n    <div class=\"row gy-4 justify-content-between align-items-start\">\n      <!-- Brand & Description -->\n      <div class=\"col-12 col-md-4\">\n        <h5 class=\"d-flex align-items-center mb-3\">\n          <i class=\"fas fa-clipboard-list me-2\"></i>\n          TimeWise\n        </h5>\n        <p class=\"text-muted\">\n          Stay organized and never miss important tasks. Simple, secure, and always available.\n        </p>\n        <div class=\"d-flex\">\n          <a href=\"#\" class=\"me-3 social-icons\" title=\"Facebook\">\n            <i class=\"fab fa-facebook-f\"></i>\n          </a>\n          <a href=\"#\" class=\"me-3 social-icons\" title=\"Twitter\">\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n          <a href=\"#\" class=\"me-3 social-icons\" title=\"LinkedIn\">\n            <i class=\"fab fa-linkedin-in\"></i>\n          </a>\n          <a href=\"#\" class=\"social-icons\" title=\"Instagram\">\n            <i class=\"fab fa-instagram\"></i>\n          </a>\n        </div>\n      </div>\n\n      <!-- Support Links -->\n      <div class=\"col-6 col-md-2\">\n        <h6 class=\"text-uppercase fw-bold mb-3\">Support</h6>\n        <ul class=\"list-unstyled\">\n          <li><a href=\"#\" class=\"footer-link\">Help Center</a></li>\n          <li><a href=\"#\" class=\"footer-link\">Contact Us</a></li>\n        </ul>\n      </div>\n\n      <!-- Legal Links -->\n      <div class=\"col-6 col-md-2\">\n        <h6 class=\"text-uppercase fw-bold mb-3\">Legal</h6>\n        <ul class=\"list-unstyled\">\n          <li><a href=\"#\" class=\"footer-link\">Privacy Policy</a></li>\n          <li><a href=\"#\" class=\"footer-link\">Terms of Service</a></li>\n        </ul>\n      </div>\n\n      <!-- Contact Email -->\n      <div class=\"col-12 col-md-4 text-md-end\">\n        <p class=\"text-muted mb-0\">\n          <i class=\"fas fa-envelope me-1\"></i>\n          <a href=\"mailto:moussa.badr@ausu82.ca\" class=\"footer-link\">moussa.badr@ausu82.ca</a>\n        </p>\n      </div>\n    </div>\n\n    <hr class=\"my-4\">\n\n    <div class=\"row\">\n      <div class=\"col text-center\">\n        <p class=\"text-muted mb-0\">\n          © <?= date('Y') ?> TimeWise. All rights reserved.\n          <span class=\"d-none d-md-inline\">Built by Badr</span>\n        </p>\n      </div>\n    </div>\n  </div>\n</footer>\n\n<style>\n\n    html, body {\n      height: 100%;\n      margin: 0;\n    }\n    body {\n      display: flex;\n      flex-direction: column;\n    }\n    main {\n      flex: 1 0 auto;\n    }\n    footer {\n      flex-shrink: 0; \n    }\n\n  footer {\n    background: #f8f9fa;\n    color: #09194D;\n  }\n  footer h5, footer h6 {\n    color: #09194D;\n  }\n  .footer-link {\n    color: #6c757d;\n    text-decoration: none;\n    transition: color .3s ease, transform .3s ease;\n  }\n  .footer-link:hover {\n    color: #09194D;\n    transform: translateX(4px);\n  }\n  .social-icons {\n    font-size: 1.2rem;\n    color: #6c757d;\n    transition: color .3s ease, transform .3s ease;\n  }\n  .social-icons:hover {\n    color: #09194D;\n    transform: translateY(-2px);\n  }\n  footer hr {\n    border-color: #dee2e6;\n  }\n</style>\n\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\n\n\n    <script>\n        // Toast Functionality\n        function showToast(type, title, message) {\n            const toastContainer = document.getElementById('toastContainer');\n            const toastId = 'toast-' + Date.now();\n\n            const toastHtml = `\n                <div class=\"toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'warning'} border-0\" \n                     role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" id=\"${toastId}\">\n                    <div class=\"d-flex\">\n                        <div class=\"toast-body\">\n                            <div class=\"d-flex align-items-center\">\n                                <i class=\"fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'} me-2\"></i>\n                                <div>\n                                    <strong>${title}</strong><br>\n                                    <small>${message}</small>\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n                    </div>\n                </div>\n            `;\n\n            toastContainer.insertAdjacentHTML('beforeend', toastHtml);\n\n            const toastElement = document.getElementById(toastId);\n            const toast = new bootstrap.Toast(toastElement, {\n                autohide: true,\n                delay: 5000\n            });\n\n            toast.show();\n\n            toastElement.addEventListener('hidden.bs.toast', function() {\n                toastElement.remove();\n            });\n        }\n\n        // Check for PHP session toast and display it\n        <?php if (isset($_SESSION['toast'])): ?>\n            document.addEventListener('DOMContentLoaded', function() {\n                showToast(\n                    '<?= $_SESSION['toast']['type'] ?>',\n                    '<?= addslashes($_SESSION['toast']['title']) ?>',\n                    '<?= addslashes($_SESSION['toast']['message']) ?>'\n                );\n            });\n            <?php unset($_SESSION['toast']); ?>\n        <?php endif; ?>\n\n        // Enhanced Alert Functionality\n        function showAlert(type, message, container = 'body') {\n            const alertHtml = `\n                <div class=\"alert alert-${type} alert-dismissible fade show\" role=\"alert\">\n                    <i class=\"fas fa-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2\"></i>\n                    ${message}\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            `;\n\n            const targetContainer = typeof container === 'string' ? document.querySelector(container) : container;\n            if (targetContainer) {\n                targetContainer.insertAdjacentHTML('afterbegin', alertHtml);\n            }\n        }\n\n        // Auto-hide alerts after 5 seconds\n        document.addEventListener('DOMContentLoaded', function() {\n            const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');\n            alerts.forEach(function(alert) {\n                setTimeout(function() {\n                    if (alert.classList.contains('show')) {\n                        const bsAlert = new bootstrap.Alert(alert);\n                        bsAlert.close();\n                    }\n                }, 5000);\n            });\n        });\n\n        // Enhanced Navigation and Dropdown Improvements\n        document.addEventListener('DOMContentLoaded', function() {\n            const mobileLinks = document.querySelectorAll('.navbar-nav .nav-link:not(.dropdown-toggle)');\n            const navbarCollapse = document.querySelector('.navbar-collapse');\n\n            if (navbarCollapse) {\n                mobileLinks.forEach(link => {\n                    link.addEventListener('click', function() {\n                        if (window.innerWidth < 992) {\n                            const bsCollapse = new bootstrap.Collapse(navbarCollapse, {\n                                toggle: false\n                            });\n                            bsCollapse.hide();\n                        }\n                    });\n                });\n\n                // Close mobile menu when clicking outside\n                document.addEventListener('click', function(e) {\n                    if (window.innerWidth < 992) {\n                        const navbar = document.querySelector('.navbar');\n                        const isClickInsideNavbar = navbar && navbar.contains(e.target);\n                        const isMenuOpen = navbarCollapse.classList.contains('show');\n\n                        if (!isClickInsideNavbar && isMenuOpen) {\n                            const bsCollapse = new bootstrap.Collapse(navbarCollapse, {\n                                toggle: false\n                            });\n                            bsCollapse.hide();\n                        }\n                    }\n                });\n            }\n\n            // Enhanced Dropdown Behavior\n            const dropdownToggles = document.querySelectorAll('.navbar-nav .dropdown-toggle');\n\n            dropdownToggles.forEach(toggle => {\n                const dropdown = toggle.nextElementSibling;\n                let hoverTimeout;\n\n                // Desktop: Show on hover, hide on mouse leave\n                if (window.innerWidth >= 992) {\n                    toggle.addEventListener('mouseenter', function() {\n                        clearTimeout(hoverTimeout);\n                        dropdown.classList.add('show');\n                        toggle.setAttribute('aria-expanded', 'true');\n                    });\n\n                    toggle.parentElement.addEventListener('mouseleave', function() {\n                        hoverTimeout = setTimeout(() => {\n                            dropdown.classList.remove('show');\n                            toggle.setAttribute('aria-expanded', 'false');\n                        }, 300);\n                    });\n\n                    // Keep dropdown open when hovering over it\n                    dropdown.addEventListener('mouseenter', function() {\n                        clearTimeout(hoverTimeout);\n                    });\n\n                    dropdown.addEventListener('mouseleave', function() {\n                        hoverTimeout = setTimeout(() => {\n                            dropdown.classList.remove('show');\n                            toggle.setAttribute('aria-expanded', 'false');\n                        }, 300);\n                    });\n                }\n\n                // Click behavior for all screen sizes\n                toggle.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    const isOpen = dropdown.classList.contains('show');\n\n                    // Close all other dropdowns first\n                    document.querySelectorAll('.navbar-nav .dropdown-menu.show').forEach(menu => {\n                        if (menu !== dropdown) {\n                            menu.classList.remove('show');\n                            menu.previousElementSibling.setAttribute('aria-expanded', 'false');\n                        }\n                    });\n\n                    // Toggle current dropdown\n                    if (isOpen) {\n                        dropdown.classList.remove('show');\n                        toggle.setAttribute('aria-expanded', 'false');\n                    } else {\n                        dropdown.classList.add('show');\n                        toggle.setAttribute('aria-expanded', 'true');\n                    }\n                });\n            });\n\n            // Close dropdowns when clicking outside\n            document.addEventListener('click', function(e) {\n                if (!e.target.closest('.navbar-nav .dropdown')) {\n                    document.querySelectorAll('.navbar-nav .dropdown-menu.show').forEach(menu => {\n                        menu.classList.remove('show');\n                        menu.previousElementSibling.setAttribute('aria-expanded', 'false');\n                    });\n                }\n            });\n\n            // Handle window resize\n            window.addEventListener('resize', function() {\n                if (window.innerWidth < 992) {\n                    // Remove hover effects on mobile\n                    document.querySelectorAll('.navbar-nav .dropdown-menu.show').forEach(menu => {\n                        menu.classList.remove('show');\n                        menu.previousElementSibling.setAttribute('aria-expanded', 'false');\n                    });\n                }\n            });\n        });\n    </script>\n</body>\n</html>\n    </main>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\n</body>\n</html>\n","size_bytes":12348},"app/views/templates/header.php":{"content":"<?php\n// Always start the session before touching $_SESSION\nif (session_status() !== PHP_SESSION_ACTIVE) session_start();\n\n// Current path\n$__path = parse_url($_SERVER['REQUEST_URI'] ?? '/', PHP_URL_PATH);\n\n// Public pages that should NOT force login\n$__PUBLIC = [\n  '/', '/login', '/register', '/forgot', '/password/reset', '/password/forgot'\n];\n\n// Gate only non-public pages\nif (!isset($_SESSION['auth']) && !in_array($__path, $__PUBLIC, true)) {\n    header('Location: /login');\n    exit;\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\n    <link rel=\"icon\" href=\"/favicon.png\">\n    <title>TimeWise</title>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"mobile-web-app-capable\" content=\"yes\">\n    <style>\n      :root {\n        --primary: #09194D;\n        --secondary: #D97F76;\n        --light: #E4E4EF;\n        --lighter: #F4F5F0;\n        --neutral: #9B9498;\n        --dark: #2D2926;\n        --accent: #B59E5F;\n        --accent-secondary: #8D77AB;\n      }\n\n      /* Modern navbar styling */\n      .navbar {\n        background: linear-gradient(135deg, var(--light) 0%, var(--lighter) 100%) !important;\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n        padding: 0.6rem 0;\n        transition: all 0.3s ease;\n        z-index: 1050;\n        position: relative;\n      }\n\n      .navbar.scrolled {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        padding: 0.4rem 0;\n      }\n\n      /* Brand styling */\n      .navbar-brand {\n        font-size: 1.6rem;\n        font-weight: 700;\n        color: var(--primary);\n        display: flex;\n        align-items: center;\n        transition: all 0.3s ease;\n      }\n\n      .navbar-brand i {\n        background: linear-gradient(135deg, var(--primary), var(--accent-secondary));\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        transition: all 0.3s ease;\n      }\n\n      .navbar-brand:hover { transform: translateY(-1px); }\n      .navbar-brand:hover i { transform: scale(1.1); }\n\n      /* Centered navigation */\n      .navbar-center {\n        position: absolute;\n        left: 50%;\n        transform: translateX(-50%);\n      }\n\n      /* Toast container */\n      .toast-container {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 1055;\n      }\n\n      /* Nav links */\n      .navbar-nav .nav-link {\n        font-weight: 500;\n        padding: 0.6rem 1.1rem !important;\n        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n        color: var(--primary);\n        position: relative;\n        border-radius: 8px;\n        margin: 0 0.1rem;\n      }\n      .navbar-nav .nav-link:hover {\n        color: var(--primary);\n        background-color: rgba(255, 255, 255, 0.7);\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      }\n      .navbar-nav .nav-link.active {\n        background-color: rgba(255, 255, 255, 0.9);\n        color: var(--primary);\n        font-weight: 600;\n      }\n      .navbar-nav .nav-link::before {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 50%;\n        width: 0;\n        height: 3px;\n        background: linear-gradient(90deg, var(--secondary), var(--accent));\n        transition: all 0.3s ease;\n        transform: translateX(-50%);\n        border-radius: 3px;\n      }\n      .navbar-nav .nav-link:hover::before,\n      .navbar-nav .nav-link.active::before { width: 70%; }\n\n      /* Remove default caret */\n      .profile-dropdown .dropdown-toggle::after { display: none; }\n\n      /* Modern dropdown */\n      .navbar-nav .dropdown-menu {\n        background-color: white;\n        border: none;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n        border-radius: 12px;\n        padding: 0.8rem 0;\n        margin-top: 0.8rem;\n        min-width: 220px;\n        opacity: 0;\n        transform: translateY(10px) scale(0.95);\n        visibility: hidden;\n        transition: all 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);\n        z-index: 9999;\n        position: absolute;\n        overflow: hidden;\n      }\n      .navbar-nav .dropdown-menu::before {\n        content: '';\n        position: absolute;\n        top: -8px;\n        left: 20px;\n        width: 16px;\n        height: 16px;\n        background: white;\n        transform: rotate(45deg);\n        border-radius: 4px;\n      }\n      .navbar-nav .dropdown-menu.show {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n        visibility: visible;\n      }\n\n      /* Dropdown items */\n      .navbar-nav .dropdown-item {\n        color: var(--dark);\n        padding: 0.8rem 1.5rem;\n        font-weight: 500;\n        transition: all 0.2s ease;\n        background: transparent;\n        border: none;\n        position: relative;\n        display: flex;\n        align-items: center;\n      }\n      .navbar-nav .dropdown-item:hover,\n      .navbar-nav .dropdown-item:focus,\n      .navbar-nav .dropdown-item.active {\n        background: linear-gradient(135deg, var(--light) 0%, var(--lighter) 100%);\n        color: var(--primary);\n        padding-left: 1.8rem;\n      }\n      .navbar-nav .dropdown-item i {\n        width: 22px;\n        text-align: center;\n        margin-right: 0.8rem;\n        color: var(--primary);\n        transition: all 0.2s ease;\n      }\n      .navbar-nav .dropdown-item:hover i {\n        transform: scale(1.1);\n        color: var(--accent-secondary);\n      }\n\n      /* Headers & dividers */\n      .navbar-nav .dropdown-header {\n        color: var(--primary);\n        font-size: 0.85rem;\n        font-weight: 700;\n        padding: 0.6rem 1.5rem 0.8rem;\n        margin-bottom: 0.3rem;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n        border-bottom: 1px solid rgba(0,0,0,0.08);\n      }\n      .navbar-nav .dropdown-divider { border-color: rgba(0,0,0,0.08); margin: 0.5rem 0; }\n\n      /* Button groups */\n      .btn-group .btn {\n        border-radius: 8px;\n        margin-left: 0.3rem;\n        background-color: white;\n        color: var(--primary);\n        border: 1px solid rgba(0,0,0,0.1);\n        transition: all 0.2s ease;\n      }\n      .btn-group .btn:hover {\n        background-color: var(--light);\n        color: var(--primary);\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      }\n      .btn-group .btn:first-child { margin-left: 0; }\n\n      /* Mobile view */\n      @media (max-width: 991.98px) {\n        .navbar-nav { padding-top: 1rem; }\n        .navbar-nav .nav-link {\n          padding: 0.8rem 1rem !important;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n          margin: 0.1rem 0;\n        }\n        .navbar-nav .dropdown-menu {\n          background-color: rgba(255, 255, 255, 0.95);\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n          margin-left: 1rem;\n          margin-top: 0.3rem;\n          border-radius: 8px;\n        }\n        .navbar-nav .dropdown-menu::before { display: none; }\n        .navbar-nav .dropdown-item { padding: 0.7rem 1rem; }\n        .navbar-nav .dropdown-item:hover { padding-left: 1.2rem; transform: none; }\n      }\n\n      /* Profile section */\n      .profile-dropdown .dropdown-toggle {\n        border-radius: 50px;\n        padding: 0.4rem 0.8rem;\n        transition: all 0.3s ease;\n        border: 1px solid transparent;\n      }\n      .profile-dropdown .dropdown-toggle:hover {\n        background: rgba(255, 255, 255, 0.7);\n        border-color: rgba(0, 0, 0, 0.1);\n      }\n      .user-icon {\n        background: linear-gradient(135deg, var(--primary), var(--accent-secondary));\n        color: white;\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 0.5rem;\n        font-size: 0.9rem;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n      }\n\n      /* Admin badge */\n      .admin-badge {\n        background: linear-gradient(135deg, var(--secondary), var(--accent));\n        color: white;\n        font-size: 0.7rem;\n        padding: 0.25rem 0.6rem;\n        border-radius: 50px;\n        margin-left: 0.5rem;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        animation: pulse 2s infinite;\n      }\n      @keyframes pulse { 0%{transform:scale(1)} 50%{transform:scale(1.05)} 100%{transform:scale(1)} }\n\n      /* Toggler animation */\n      .navbar-toggler { border: none; padding: 0.4rem 0.5rem; transition: all 0.3s ease; }\n      .navbar-toggler:focus { box-shadow: 0 0 0 2px var(--light); }\n      .navbar-toggler-icon {\n        background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(9, 25, 77, 0.8)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\n        transition: all 0.3s ease;\n      }\n    </style>\n</head>\n\n<body>\n    <!-- Toast Container -->\n    <div class=\"toast-container\" id=\"toastContainer\"></div>\n\n    <?php\n      $path = parse_url($_SERVER['REQUEST_URI'] ?? '/', PHP_URL_PATH);\n      $isSched = (bool)preg_match('#^/schedule\\b(?!/my)#', $path); // schedule index but not /schedule/my\n      $isMy    = (bool)preg_match('#^/schedule/my\\b#', $path);\n      $isDept  = (bool)preg_match('#^/departments\\b#', $path);\n      $isTeamActive = ($isSched || $isDept || $isMy);\n    ?>\n\n    <nav class=\"navbar navbar-expand-lg navbar-light sticky-top\">\n      <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"/home\" style=\"padding:0; display:flex; align-items:center;\">\n          <?php include __DIR__ . '/logo.php'; ?>\n        </a>\n\n        <!-- Center Navigation (desktop) -->\n        <div class=\"navbar-center d-none d-lg-flex\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= preg_match('#^/home\\b#', $path) ? 'active' : '' ?>\" href=\"/home\">\n                <i class=\"fas fa-tachometer-alt me-1\"></i>Dashboard\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= preg_match('#^/chat\\b#', $path) ? 'active' : '' ?>\" href=\"/chat\">\n                <i class=\"fas fa-comments me-1\"></i>Chat\n              </a>\n            </li>\n\n            <!-- Team & Schedule (desktop dropdown) -->\n            <li class=\"nav-item dropdown <?= $isTeamActive ? 'active' : '' ?>\">\n              <a class=\"nav-link dropdown-toggle <?= $isTeamActive ? 'active' : '' ?>\"\n                 href=\"#\" id=\"teamSchedDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <i class=\"fas fa-users me-1\"></i> Team &amp; Schedule\n              </a>\n              <ul class=\"dropdown-menu\" aria-labelledby=\"teamSchedDropdown\">\n                <li>\n                  <a class=\"dropdown-item <?= $isSched ? 'active' : '' ?>\" href=\"/schedule\">\n                    <i class=\"fas fa-calendar-alt me-2\"></i> Schedule\n                  </a>\n                </li>\n                <li>\n                  <a class=\"dropdown-item <?= $isMy ? 'active' : '' ?>\" href=\"/schedule/my\">\n                    <i class=\"fas fa-user-clock me-2\"></i> My Shifts\n                  </a>\n                </li>\n                <li>\n                  <a class=\"dropdown-item <?= $isDept ? 'active' : '' ?>\" href=\"/departments\">\n                    <i class=\"fas fa-sitemap me-2\"></i> Departments &amp; Roles\n                  </a>\n                </li>\n                <li>\n                  <a class=\"dropdown-item <?= preg_match('#^/team\\b#', $path) ? 'active' : '' ?>\" href=\"/team\">\n                    <i class=\"fas fa-users me-2\"></i> Team roster\n                  </a>\n                </li>\n              </ul>\n            </li>\n\n            <!-- Reminders (desktop dropdown) -->\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle <?= preg_match('#^/notes\\b#', $path) ? 'active' : '' ?>\"\n                 href=\"#\" id=\"remindersDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <i class=\"fas fa-tasks me-1\"></i>Reminders\n              </a>\n              <ul class=\"dropdown-menu shadow\">\n                <li><h6 class=\"dropdown-header\">\n                  <i class=\"fas fa-list me-1\"></i>Manage Reminders\n                </h6></li>\n                <li><a class=\"dropdown-item <?= $path === '/notes' ? 'active' : '' ?>\" href=\"/notes\">\n                  <i class=\"fas fa-eye me-2\"></i>View All\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/notes/create' ? 'active' : '' ?>\" href=\"/notes/create\">\n                  <i class=\"fas fa-plus me-2\"></i>Create New\n                </a></li>\n                <li><hr class=\"dropdown-divider\"></li>\n                <li><h6 class=\"dropdown-header\">\n                  <i class=\"fas fa-filter me-1\"></i>Filter By Status\n                </h6></li>\n                <li><a class=\"dropdown-item\" href=\"/notes?filter=pending\">\n                  <i class=\"fas fa-clock me-2 text-warning\"></i>Pending\n                </a></li>\n                <li><a class=\"dropdown-item\" href=\"/notes?filter=completed\">\n                  <i class=\"fas fa-check me-2 text-success\"></i>Completed\n                </a></li>\n              </ul>\n            </li>\n\n            <?php if (isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1): ?>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle <?= preg_match('#^/reports\\b#', $path) ? 'active' : '' ?>\"\n                 href=\"#\" id=\"adminDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <i class=\"fas fa-chart-bar me-1\"></i>Reports\n              </a>\n              <ul class=\"dropdown-menu shadow\">\n                <li><h6 class=\"dropdown-header\">\n                  <i class=\"fas fa-chart-line me-1\"></i>Admin Reports\n                </h6></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports' ? 'active' : '' ?>\" href=\"/reports\">\n                  <i class=\"fas fa-tachometer-alt me-2\"></i>Dashboard\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/allReminders' ? 'active' : '' ?>\" href=\"/reports/allReminders\">\n                  <i class=\"fas fa-list me-2\"></i>All Reminders\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/userStats' ? 'active' : '' ?>\" href=\"/reports/userStats\">\n                  <i class=\"fas fa-users me-2\"></i>User Statistics\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/loginReport' ? 'active' : '' ?>\" href=\"/reports/loginReport\">\n                  <i class=\"fas fa-sign-in-alt me-2\"></i>Login Report\n                </a></li>\n              </ul>\n            </li>\n            <?php endif; ?>\n          </ul>\n        </div>\n\n        <!-- Toggler -->\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <!-- Right / Mobile -->\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <!-- Mobile Nav (left) -->\n          <ul class=\"navbar-nav me-auto d-lg-none\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= preg_match('#^/home\\b#', $path) ? 'active' : '' ?>\" href=\"/home\">\n                <i class=\"fas fa-tachometer-alt me-1\"></i>Dashboard\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= preg_match('#^/chat\\b#', $path) ? 'active' : '' ?>\" href=\"/chat\">\n                <i class=\"fas fa-comments me-1\"></i>Chat\n              </a>\n            </li>\n\n            <!-- Team & Schedule (mobile links) -->\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= $isSched ? 'active' : '' ?>\" href=\"/schedule\">\n                <i class=\"fas fa-calendar-alt me-1\"></i>Schedule\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= $isMy ? 'active' : '' ?>\" href=\"/schedule/my\">\n                <i class=\"fas fa-user-clock me-1\"></i>My Shifts\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= $isDept ? 'active' : '' ?>\" href=\"/departments\">\n                <i class=\"fas fa-sitemap me-1\"></i>Departments &amp; Roles\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= preg_match('#^/team\\b#', $path) ? 'active' : '' ?>\" href=\"/team\">\n                <i class=\"fas fa-users me-1\"></i>Team Roster\n              </a>\n            </li>\n\n            <!-- Reminders quick links -->\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= $path === '/notes' ? 'active' : '' ?>\" href=\"/notes\">\n                <i class=\"fas fa-tasks me-1\"></i>My Reminders\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link <?= $path === '/notes/create' ? 'active' : '' ?>\" href=\"/notes/create\">\n                <i class=\"fas fa-plus me-1\"></i>Create New\n              </a>\n            </li>\n\n            <?php if (isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1): ?>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle <?= preg_match('#^/reports\\b#', $path) ? 'active' : '' ?>\"\n                 href=\"#\" id=\"mobileAdminDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <i class=\"fas fa-chart-bar me-1\"></i>Admin Reports\n              </a>\n              <ul class=\"dropdown-menu\">\n                <li><a class=\"dropdown-item <?= $path === '/reports' ? 'active' : '' ?>\" href=\"/reports\">\n                  <i class=\"fas fa-tachometer-alt me-2\"></i>Dashboard\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/allReminders' ? 'active' : '' ?>\" href=\"/reports/allReminders\">\n                  <i class=\"fas fa-list me-2\"></i>All Reminders\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/userStats' ? 'active' : '' ?>\" href=\"/reports/userStats\">\n                  <i class=\"fas fa-users me-2\"></i>User Statistics\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/reports/loginReport' ? 'active' : '' ?>\" href=\"/reports/loginReport\">\n                  <i class=\"fas fa-sign-in-alt me-2\"></i>Login Report\n                </a></li>\n              </ul>\n            </li>\n            <?php endif; ?>\n          </ul>\n\n          <!-- Profile (right) -->\n          <ul class=\"navbar-nav ms-auto\">\n            <li class=\"nav-item dropdown profile-dropdown\">\n              <a class=\"nav-link dropdown-toggle d-flex align-items-center\" href=\"#\" id=\"profileDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <div class=\"d-flex align-items-center\">\n                  <div class=\"user-icon\"><i class=\"fas fa-user\"></i></div>\n                  <span class=\"d-none d-md-inline\"><?php echo htmlspecialchars($_SESSION['username'] ?? 'User'); ?></span>\n                  <?php if (isset($_SESSION['is_admin']) && (int)$_SESSION['is_admin'] === 1): ?>\n                    <span class=\"admin-badge\">Admin</span>\n                  <?php endif; ?>\n                  <i class=\"fas fa-chevron-down ms-2 small\"></i>\n                </div>\n              </a>\n              <ul class=\"dropdown-menu dropdown-menu-end shadow\">\n                <li><h6 class=\"dropdown-header\">\n                  <i class=\"fas fa-user me-1\"></i>Account\n                </h6></li>\n                <li><a class=\"dropdown-item <?= $path === '/profile' ? 'active' : '' ?>\" href=\"/profile\">\n                  <i class=\"fas fa-user-circle me-2\"></i>Profile\n                </a></li>\n                <li><a class=\"dropdown-item <?= $path === '/settings' ? 'active' : '' ?>\" href=\"/settings\">\n                  <i class=\"fas fa-cog me-2\"></i>Settings\n                </a></li>\n                <li><hr class=\"dropdown-divider\"></li>\n                <li><a class=\"dropdown-item text-danger\" href=\"/logout\">\n                  <i class=\"fas fa-sign-out-alt me-2\"></i>Logout\n                </a></li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\n      crossorigin=\"anonymous\"></script>\n\n    <script>\n      // Add scroll effect to navbar\n      document.addEventListener('DOMContentLoaded', function() {\n        const navbar = document.querySelector('.navbar');\n        window.addEventListener('scroll', function() {\n          if (window.scrollY > 10) navbar.classList.add('scrolled');\n          else navbar.classList.remove('scrolled');\n        });\n      });\n    </script>\n\n    <main>\n","size_bytes":21561},"app/views/templates/headerPublic.php":{"content":"        <?php\n        if (isset($_SESSION['auth']) == 1) {\n            header('Location: /home');\n        }\n        ?>\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n            <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\n            <link rel=\"icon\" href=\"/favicon.png\">\n            <title>ReminderApp - Stay Organized</title>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n            <meta name=\"mobile-web-app-capable\" content=\"yes\">\n            <style>\n                .navbar-brand {\n                    font-size: 1.5rem;\n                    font-weight: 700;\n                }\n                .navbar-center {\n                    position: absolute;\n                    left: 50%;\n                    transform: translateX(-50%);\n                }\n                .toast-container {\n                    position: fixed;\n                    top: 20px;\n                    right: 20px;\n                    z-index: 1055;\n                }\n                .navbar-nav .nav-link {\n                    font-weight: 500;\n                    padding: 0.5rem 1rem;\n                    transition: all 0.3s ease;\n                }\n                .navbar-nav .nav-link:hover {\n                    transform: translateY(-2px);\n                }\n                .btn-gradient {\n                    background: linear-gradient(45deg, #007bff, #6610f2);\n                    border: none;\n                    color: white;\n                    transition: all 0.3s ease;\n                }\n                .btn-gradient:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n                    color: white;\n                }\n            </style>\n        </head>\n        <body>\n            <!-- Toast Container -->\n            <div class=\"toast-container\" id=\"toastContainer\"></div>\n\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-gradient\" style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\">\n                <div class=\"container\">\n                    <a class=\"navbar-brand d-flex align-items-center\" href=\"/\">\n                        <i class=\"fas fa-clipboard-list me-2 fa-lg\"></i>\n                        <span>ReminderApp</span>\n                    </a>\n\n                    <!-- Center Navigation -->\n                    <div class=\"navbar-center d-none d-lg-flex\">\n                        <ul class=\"navbar-nav\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"/\">\n                                    <i class=\"fas fa-home me-1\"></i>Home\n                                </a>\n                            </li>\n                            <li class=\"nav-item dropdown\">\n                                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"featuresDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    <i class=\"fas fa-star me-1\"></i>Features\n                                </a>\n                                <ul class=\"dropdown-menu shadow\">\n                                    <li><a class=\"dropdown-item\" href=\"#features\">\n                                        <i class=\"fas fa-tasks me-2\"></i>Task Management\n                                    </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"#features\">\n                                        <i class=\"fas fa-bell me-2\"></i>Smart Reminders\n                                    </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"#features\">\n                                        <i class=\"fas fa-sync me-2\"></i>Cloud Sync\n                                    </a></li>\n                                    <li><hr class=\"dropdown-divider\"></li>\n                                    <li><a class=\"dropdown-item\" href=\"#features\">\n                                        <i class=\"fas fa-mobile-alt me-2\"></i>Mobile App\n                                    </a></li>\n                                </ul>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#about\">\n                                    <i class=\"fas fa-info-circle me-1\"></i>About\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <!-- Mobile Navigation -->\n                        <ul class=\"navbar-nav me-auto d-lg-none\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"/\">\n                                    <i class=\"fas fa-home me-1\"></i>Home\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#features\">\n                                    <i class=\"fas fa-star me-1\"></i>Features\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#about\">\n                                    <i class=\"fas fa-info-circle me-1\"></i>About\n                                </a>\n                            </li>\n                        </ul>\n\n                        <!-- Right Side Navigation -->\n                        <ul class=\"navbar-nav ms-auto\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"/login\">\n                                    <i class=\"fas fa-sign-in-alt me-1\"></i>Login\n                                </a>\n                            </li>\n                            <!--\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link btn btn-gradient ms-2 px-3 rounded-pill\" href=\"/signup\">\n                                    <i class=\"fas fa-user-plus me-1\"></i>Sign Up Free\n                                </a>\n                            </li>\n                            -->\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            <main>\n","size_bytes":7035},"app/views/templates/logo.php":{"content":"<style>\n  :root{\n    --tw-navy:#09194D;\n    --tw-gold:#B59E5F;\n    --tw-coral:#D97F76;\n    --tw-lilac:#8D77AB;\n    --tw-surface:#FFFFFF;\n    --tw-track:#E4E4EF;\n  }\n  .tw-logo{\n    --logo-w: 140px; --text-size: 18px; --track-h: 4px; --dot: 8px;\n    width:var(--logo-w); display:flex; flex-direction:column; align-items:center; gap:6px;\n  }\n  .tw-logo__word{ font-weight:800; letter-spacing:.12em; color:var(--tw-navy); font-size:var(--text-size);}\n  .tw-logo__timeline{ width:100%; margin-top:4px; position:relative; }\n  .tw-logo__track{ height:var(--track-h); width:100%; border-radius:999px; background:var(--tw-track); position:relative; overflow:hidden; }\n  .tw-logo__progress{ position:absolute; inset:0 auto 0 0; width:68%; background:linear-gradient(90deg,var(--tw-navy),var(--tw-lilac)); border-radius:999px; background-size:200% 100%; animation:tw-flow 2.4s linear infinite; }\n  @keyframes tw-flow { to{ background-position:-200% 0; } }\n  .tw-logo__marks{ position:absolute; left:0; top:50%; transform:translateY(-50%); width:100%; display:flex; justify-content:space-between; }\n  .tw-logo__dot{ width:var(--dot); height:var(--dot); border-radius:50%; box-shadow:0 0 0 3px #fff; }\n  .tw-logo__dot--1{ background:var(--tw-navy); animation:tw-pulse 2.4s ease-in-out infinite; }\n  .tw-logo__dot--2{ background:var(--tw-gold); }\n  .tw-logo__dot--3{ background:var(--tw-coral); }\n  .tw-logo__dot--4{ background:var(--tw-lilac); }\n  @keyframes tw-pulse{ 0%,100%{ transform:scale(1);} 50%{ transform:scale(1.12);} }\n</style>\n\n<!-- TimeWise Logo -->\n<div class=\"tw-logo\" aria-label=\"TimeWise logo\">\n  <div class=\"tw-logo__word\">TIMEWISE</div>\n  <div class=\"tw-logo__timeline\">\n    <div class=\"tw-logo__track\">\n      <div class=\"tw-logo__progress\"></div>\n    </div>\n    <div class=\"tw-logo__marks\">\n      <span class=\"tw-logo__dot tw-logo__dot--1\"></span>\n      <span class=\"tw-logo__dot tw-logo__dot--2\"></span>\n      <span class=\"tw-logo__dot tw-logo__dot--3\"></span>\n      <span class=\"tw-logo__dot tw-logo__dot--4\"></span>\n    </div>\n  </div>\n</div>\n","size_bytes":2054},"app/views/templates/spinner.php":{"content":"<?php /* app/views/templates/spinner.php */ ?>\n<style>\n  /* ===== Global overlay spinner ===== */\n  .tw-spinner {\n    position: fixed; inset: 0; z-index: 1060;            /* above modals backdrop */\n    display: none; align-items: center; justify-content: center;\n    background: rgba(17,24,39,.35); backdrop-filter: blur(1px);\n  }\n  .tw-spinner.show { display: flex; }\n\n  .tw-spinner-box {\n    background:#fff; border-radius:.75rem; padding:1rem 1.25rem;\n    box-shadow:0 10px 24px rgba(0,0,0,.15); display:flex; gap:.75rem; align-items:center;\n    min-width: 200px;\n  }\n  .tw-spinner-ring {\n    width: 26px; height: 26px; border-radius: 9999px;\n    border: 3px solid #e5e7eb; border-top-color:#3b82f6; animation: tw-spin 0.9s linear infinite;\n  }\n  .tw-spinner-text { font-weight:600; color:#111827; font-size:.95rem; }\n  @keyframes tw-spin { to { transform: rotate(360deg) } }\n</style>\n\n<div id=\"twSpinner\" class=\"tw-spinner\" role=\"status\" aria-live=\"polite\" aria-busy=\"false\">\n  <div class=\"tw-spinner-box\">\n    <div class=\"tw-spinner-ring\" aria-hidden=\"true\"></div>\n    <div id=\"twSpinnerText\" class=\"tw-spinner-text\">Loading…</div>\n  </div>\n</div>\n\n<script>\n  // Small API, safe for concurrent calls via ref counting\n  (function () {\n    let count = 0;\n    const el = document.getElementById('twSpinner');\n    const txt = document.getElementById('twSpinnerText');\n\n    function show(message) {\n      count++;\n      if (message) txt.textContent = message;\n      el.classList.add('show');\n      el.setAttribute('aria-busy', 'true');\n    }\n\n    function hide() {\n      count = Math.max(0, count - 1);\n      if (count === 0) {\n        el.classList.remove('show');\n        el.setAttribute('aria-busy', 'false');\n        txt.textContent = 'Loading…';\n      }\n    }\n\n    async function wrap(promiseOrFn, message) {\n      show(message);\n      try {\n        if (typeof promiseOrFn === 'function') {\n          return await promiseOrFn();\n        } else {\n          return await promiseOrFn;\n        }\n      } finally {\n        hide();\n      }\n    }\n\n    window.Spinner = { show, hide, wrap };\n  })();\n</script>\n","size_bytes":2111},"replit.md":{"content":"# TimeWise Chat\n\n## Overview\n\nTimeWise Chat is a real-time messaging application built with Node.js and Socket.io. The system provides WebSocket-based chat functionality with persistent message storage and user authentication. It supports both individual and group chat capabilities, integrating with an existing TimeWise ecosystem that uses PHP-based authentication.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Backend Architecture\n- **Node.js Server**: Built using ES modules with Socket.io for real-time WebSocket communication\n- **Dual Database Approach**: \n  - SQLite for chat-specific data (messages, rooms, participants)\n  - MySQL for user authentication (shared with existing PHP application)\n- **Port Configuration**: Configurable chat server port (default 3001) separate from main application\n\n### Database Design\n- **SQLite Schema**: Handles chat rooms, messages, and participant relationships with foreign key constraints\n- **MySQL Integration**: Connects to existing user authentication system using environment-based configuration\n- **Promise Wrappers**: Custom promise-based helpers for SQLite operations to maintain consistency with async/await patterns\n\n### Real-time Communication\n- **Socket.io Server**: Handles WebSocket connections with CORS enabled for cross-origin requests\n- **Event-driven Architecture**: Message broadcasting and user connection management through socket events\n- **Connection Management**: Automatic handling of user connections and disconnections\n\n### Authentication Strategy\n- **Shared Authentication**: Leverages existing MySQL-based user system from the main TimeWise application\n- **Session Management**: Designed to integrate with PHP-based authentication tokens and user sessions\n\n### Configuration Management\n- **Environment Variables**: Database credentials, hosts, ports, and connection timeouts configurable via environment\n- **Fallback Defaults**: Sensible defaults for development while supporting production configuration\n- **Connection Pooling**: MySQL connection management with timeout configurations for reliability\n\n## External Dependencies\n\n### Core Dependencies\n- **Socket.io**: Real-time bidirectional event-based communication\n- **SQLite3**: Embedded database for chat data persistence\n- **MySQL2**: MySQL database driver with promise support for authentication integration\n- **Node.js Crypto**: Built-in cryptographic functionality for security features\n\n### Database Services\n- **MySQL Database**: External MySQL service hosted at e7eh7.h.filess.io (port 3305) for user authentication\n- **SQLite Database**: Local file-based database (database.db) for chat message storage\n\n### Infrastructure\n- **HTTP Server**: Node.js built-in HTTP server for Socket.io transport\n- **WebSocket Protocol**: Real-time communication layer provided by Socket.io\n- **Cross-Origin Resource Sharing**: Configured to allow connections from web clients","size_bytes":2961}},"version":1}